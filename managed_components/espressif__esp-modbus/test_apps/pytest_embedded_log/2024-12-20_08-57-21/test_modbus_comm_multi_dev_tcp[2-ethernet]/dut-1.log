Serial port /dev/ttyUSB1
Connecting................
Connecting............
esptool.py v4.8.1
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x00099fff...
SHA digest in image updated
Compressed 26112 bytes to 16484...
Writing at 0x00001000... (50 %)Writing at 0x00007574... (100 %)Wrote 26112 bytes (16484 compressed) at 0x00001000 in 0.8 seconds (effective 277.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 307.8 kbit/s)...
Hash of data verified.
Compressed 561696 bytes to 315376...
Writing at 0x00010000... (5 %)Writing at 0x0001e97d... (10 %)Writing at 0x0002b0d7... (15 %)Writing at 0x00033d91... (20 %)Writing at 0x000396aa... (25 %)Writing at 0x0003fcbb... (30 %)Writing at 0x000455f8... (35 %)Writing at 0x0004b0c9... (40 %)Writing at 0x0005139b... (45 %)Writing at 0x00057242... (50 %)Writing at 0x0005cca7... (55 %)Writing at 0x00062942... (60 %)Writing at 0x00068715... (65 %)Writing at 0x0006e29d... (70 %)Writing at 0x00074dd4... (75 %)Writing at 0x0007e235... (80 %)Writing at 0x000853b9... (85 %)Writing at 0x0008b534... (90 %)Writing at 0x000912df... (95 %)Writing at 0x0009774f... (100 %)Wrote 561696 bytes (315376 compressed) at 0x00010000 in 5.9 seconds (effective 765.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6328
load:0x40078000,len:15828
load:0x40080400,len:3860
entry 0x40080638
I (27) boot: ESP-IDF v5.5-dev-1050-gb5ac4fbdf9 2nd stage bootloader
I (27) boot: compile time Dec 20 2024 08:26:12
I (27) boot: Multicore bootloader
I (30) boot: chip revision: v3.0
I (33) boot.esp32: SPI Speed      : 40MHz
I (37) boot.esp32: SPI Mode       : DIO
I (40) boot.esp32: SPI Flash Size : 4MB
I (44) boot: Enabling RNG early entropy source...
I (49) boot: Partition Table:
I (51) boot: ## Label            Usage          Type ST Offset   Length
I (57) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (64) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (71) boot:  2 factory          factory app      00 00 00010000 00177000
I (77) boot: End of partition table
I (80) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1c7a4h (116644) map
I (128) esp_image: segment 1: paddr=0002c7cc vaddr=3ff80000 size=0001ch (    28) load
I (128) esp_image: segment 2: paddr=0002c7f0 vaddr=3ffb0000 size=02860h ( 10336) load
I (135) esp_image: segment 3: paddr=0002f058 vaddr=40080000 size=00fc0h (  4032) load
I (141) esp_image: segment 4: paddr=00030020 vaddr=400d0020 size=5a8e4h (370916) map
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6328
load:0x40078000,len:15828
load:0x40080400,len:3860
entry 0x40080638
I (27) boot: ESP-IDF v5.5-dev-1050-gb5ac4fbdf9 2nd stage bootloader
I (27) boot: compile time Dec 20 2024 08:26:12
I (27) boot: Multicore bootloader
I (30) boot: chip revision: v3.0
I (33) boot.esp32: SPI Speed      : 40MHz
I (37) boot.esp32: SPI Mode       : DIO
I (40) boot.esp32: SPI Flash Size : 4MB
I (44) boot: Enabling RNG early entropy source...
I (49) boot: Partition Table:
I (51) boot: ## Label            Usage          Type ST Offset   Length
I (57) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (64) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (71) boot:  2 factory          factory app      00 00 00010000 00177000
I (77) boot: End of partition table
I (80) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1c7a4h (116644) map
I (128) esp_image: segment 1: paddr=0002c7cc vaddr=3ff80000 size=0001ch (    28) load
I (128) esp_image: segment 2: paddr=0002c7f0 vaddr=3ffb0000 size=02860h ( 10336) load
I (135) esp_image: segment 3: paddr=0002f058 vaddr=40080000 size=00fc0h (  4032) load
I (141) esp_image: segment 4: paddr=00030020 vaddr=400d0020 size=5a8e4h (370916) map
I (273) esp_image: segment 5: paddr=0008a90c vaddr=40080fc0 size=0e8e4h ( 59620) load
I (304) boot: Loaded app from partition at offset 0x10000
I (305) boot: Disabling RNG early entropy source...
I (315) cpu_start: Multicore app
D (315) cpu_start: Pro cpu up
D (315) cpu_start: Starting app cpu, entry point is 0x40081308
D (0) cpu_start: App cpu up
D (324) clk: RTC_SLOW_CLK calibration value: 3134285
D (335) cpu_start: calling init function: 0x400d3260 on core: 0
D (335) cpu_start: calling init function: 0x400d3774 on core: 0
I (337) cpu_start: Pro cpu start user code
I (341) cpu_start: cpu freq: 160000000 Hz
D (345) cpu_start: calling init function: 0x400d31a0 on core: 0
I (350) app_init: Application information:
I (354) app_init: Project name:     test_modbus_comm_multi_dev
I (360) app_init: App version:      v2.0.0-beta-11-g3117942
I (365) app_init: Compile time:     Dec 20 2024 08:25:58
I (370) app_init: ELF file SHA256:  80e43a0eb...
I (374) app_init: ESP-IDF:          v5.5-dev-1050-gb5ac4fbdf9
D (380) cpu_start: calling init function: 0x400d3274 on core: 0
I (385) efuse_init: Min chip rev:     v0.0
I (389) efuse_init: Max chip rev:     v3.99 
I (393) efuse_init: Chip rev:         v3.0
D (397) cpu_start: calling init function: 0x400d5348 on core: 0
D (403) memory_layout: Checking 9 reserved memory ranges:
D (408) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000
D (414) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0
D (420) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb4990
D (426) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440
D (432) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350
D (438) memory_layout: Reserved memory range 0x40070000 - 0x40078000
D (444) memory_layout: Reserved memory range 0x40078000 - 0x40080000
D (450) memory_layout: Reserved memory range 0x40080000 - 0x4008f8a4
D (456) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000
D (462) memory_layout: Building list of available memory regions:
D (468) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000
D (475) memory_layout: Available memory region 0x3ffb4990 - 0x3ffb8000
D (481) memory_layout: Available memory region 0x3ffb8000 - 0x3ffc0000
D (487) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000
D (493) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000
D (500) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000
D (506) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000
D (512) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000
D (518) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000
D (525) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000
D (531) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000
D (537) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000
D (543) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000
D (550) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000
D (556) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000
D (562) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000
D (568) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000
D (575) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000
D (581) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000
D (587) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20
D (593) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000
D (600) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000
D (606) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000
D (612) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000
D (618) memory_layout: Available memory region 0x3fffc000 - 0x40000000
D (625) memory_layout: Available memory region 0x4008f8a4 - 0x40090000
D (631) memory_layout: Available memory region 0x40090000 - 0x40092000
D (637) memory_layout: Available memory region 0x40092000 - 0x40094000
D (643) memory_layout: Available memory region 0x40094000 - 0x40096000
D (650) memory_layout: Available memory region 0x40096000 - 0x40098000
D (656) memory_layout: Available memory region 0x40098000 - 0x4009a000
D (662) memory_layout: Available memory region 0x4009a000 - 0x4009c000
D (668) memory_layout: Available memory region 0x4009c000 - 0x4009e000
D (675) memory_layout: Available memory region 0x4009e000 - 0x400a0000
I (681) heap_init: Initializing. RAM available for dynamic allocation:
D (687) heap_init: New heap initialised at 0x3ffae6e0
I (692) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM
D (697) heap_init: New heap initialised at 0x3ffb4990
I (702) heap_init: At 3FFB4990 len 0002B670 (173 KiB): DRAM
I (707) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (712) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
D (718) heap_init: New heap initialised at 0x4008f8a4
I (723) heap_init: At 4008F8A4 len 0001075C (65 KiB): IRAM
D (728) cpu_start: calling init function: 0x400d673c on core: 0
D (734) cpu_start: calling init function: 0x400d61a4 on core: 0
D (739) cpu_start: calling init function: 0x400d37b8 on core: 0
D (745) intr_alloc: Connected src 46 to int 1 (cpu 0)
D (750) cpu_start: calling init function: 0x400d37c4 on core: 0
D (755) cpu_start: calling init function: 0x40127008 on core: 0
D (761) cpu_start: calling init function: 0x400d7608 on core: 0
D (766) cpu_start: calling init function: 0x400d7324 on core: 0
D (772) cpu_start: calling init function: 0x400d61b0 on core: 0
D (778) cpu_start: calling init function: 0x400d37d0 on core: 0
D (784) spi_flash: trying chip: issi
D (787) spi_flash: trying chip: gd
D (790) spi_flash: trying chip: mxic
D (793) spi_flash: trying chip: winbond
D (797) spi_flash: trying chip: generic
I (800) spi_flash: detected chip: generic
I (804) spi_flash: flash io: dio
D (807) cpu_start: calling init function: 0x400d3300 on core: 0
D (813) cpu_start: calling init function: 0x4010f69c
D (817) cpu_start: calling init function: 0x4010da48
D (822) cpu_start: calling init function: 0x400f44d0
D (827) cpu_start: calling init function: 0x400f2af0
D (831) cpu_start: calling init function: 0x400d7a14
D (836) cpu_start: calling init function: 0x40086f14
D (841) cpu_start: calling init function: 0x400d489c
D (846) cpu_start: calling init function: 0x400d3d9c
D (850) cpu_start: calling init function: 0x400f2cfc on core: 0
D (856) intr_alloc: Connected src 17 to int 2 (cpu 0)
D (861) cpu_start: calling init function: 0x401224a0 on core: 0
D (866) cpu_start: calling init function: 0x400d37f8 on core: 0
D (872) intr_alloc: Connected src 24 to int 3 (cpu 0)
D (877) app_start: Starting scheduler on CPU0
I (881D (881) intr_alloc: Connected src 25 to int 1 (cpu 1)
D (881) app_start: Starting scheduler on CPU1
) main_task: Started on CPU0
D (891) heap_init: New heap initialised at 0x3ffe0440
D (891) heap_init: New heap initialised at 0x3ffe4350
D (901) intr_alloc: Connected src 16 to int 5 (cpu 0)
I (901) main_task: Calling app_main()


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Running stage 2...
Modbus RS485 multi-device test cases/nD (1031) esp_netif_lwip: LwIP stack has been initialized
D (1031) esp_netif_lwip: esp-netif has been successfully initialized
D (1041) event: running task for loop 0x3ffb92c8
D (1041) event: created task for loop 0x3ffb92c8
D (1051) event: created event loop 0x3ffb92c8
D (1051) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x4010c32c
D (1061) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1061) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x4010c32c
D (1071) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1071) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0
D (1081) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x4010c32c
D (1081) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1091) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x4010c32c
D (1101) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1101) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0
D (1111) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x4010c32c
D (1111) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1121) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x4010c32c
D (1121) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1131) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0
D (1131) esp_netif_lwip: check: remote, if=0x3ffb67e0 fn=0x4010cb68
D (1141) esp_netif_objects: esp_netif_add_to_list_unsafe netif added successfully (total netifs: 1)
D (1151) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1161) intr_alloc: Connected src 38 to int 8 (cpu 0)
D (1181) efuse: BLK0 REG2 [8-15], len=8 bits
D (1181) efuse: BLK0 REG2 [0-7], len=8 bits
D (1181) efuse: BLK0 REG1 [24-31], len=8 bits
D (1181) efuse: BLK0 REG1 [16-23], len=8 bits
D (1181) efuse: BLK0 REG1 [8-15], len=8 bits
D (1181) efuse: BLK0 REG1 [0-7], len=8 bits
D (1191) efuse: BLK0 REG2 [16-23], len=8 bits
D (1211) esp_eth: new ethernet driver @0x3ffbf61c
I (1211) esp_eth.netif.netif_glue: 10:97:bd:d5:51:f3
D (1211) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010c340
D (1211) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (1221) esp_eth.netif.netif_glue: ethernet attached to netif
D (3621) event: running post ETH_EVENT:0 with handler 0x400e7604 and context 0x3ffba414 on loop 0x3ffb92c8
D (3621) event: running post ETH_EVENT:0 with handler 0x400eb324 and context 0x3ffbf6d0 on loop 0x3ffb92c8
D (3621) esp_eth.netif.netif_glue: eth_action_start: 0x3ffbf69c, 0x3f409c4c, 0, 0x3ffbf7d0, 0x3ffbf61c
D (3631) esp_netif_handlers: esp_netif action has started with netif0x3ffbb670 from event_id=0
D (3641) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010cd8c
D (3651) esp_netif_lwip: esp_netif_start_api 0x3ffbb670
D (3651) esp.emac: working in 100Mbps
D (3651) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffbb670
D (3661) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (3671) esp.emac: working in full duplex
D (3671) esp.emac: Flow control not enabled for the link
D (3681) esp.emac: emac started
D (3681) event: running post ETH_EVENT:2 with handler 0x400e7604 and context 0x3ffba414 on loop 0x3ffb92c8
D (3691) esp_netif_lwip: check: remote, if=0x3ffb9f00 fn=0x4010c32c
D (3691) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (3691) ethernet_connect: Waiting for IP(s).
D (3701) event: running post ETH_EVENT:2 with handler 0x400eb294 and context 0x3ffbf730 on loop 0x3ffb92c8
D (3711) esp_eth.netif.netif_glue: eth_action_connected: 0x3ffbf69c, 0x3f409c4c, 2, 0x3ffbf7d0, 0x3ffbf61c
D (3721) esp_netif_handlers: esp_netif action connected with netif0x3ffbb670 from event_id=2
D (3731) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010cfac
D (3741) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffbb670
D (3741) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (3751) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010c7d4
D (3751) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffbb670
D (3761) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb670
D (3771) esp_netif_lwip: if0x3ffbb670 start ip lost tmr: interval=120
D (3771) esp_netif_lwip: starting dhcp client
D (3781) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (3841) esp.emac: receive len= 60
D (3851) esp.emac: receive len= 119
D (3851) esp.emac: receive len= 119
D (5751) esp.emac: receive len= 119
D (7281) esp.emac: receive len= 62
D (7751) esp.emac: receive len= 119
D (8281) esp.emac: receive len= 342
D (8281) esp.emac: receive len= 342
D (8431) esp.emac: receive len= 60
D (9281) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb6fc
D (9281) esp_netif_lwip: check: local, if=0x3ffbb670 fn=0x4010d40c
D (9281) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb670
D (9281) esp_netif_lwip: if0x3ffbb670 ip changed=1
D (9291) event: running post IP_EVENT:4 with handler 0x400e7604 and context 0x3ffba3e0 on loop 0x3ffb92c8
D (9301) event: running post IP_EVENT:4 with handler 0x400eb224 and context 0x3ffbf790 on loop 0x3ffb92c8
D (9311) esp_eth.netif.netif_glue: eth_action_got_ip: 0x3ffbf69c, 0x3f413d58, 4, 0x3ffbf8e4, 0x3ffbb670
D (9321) esp_netif_handlers: esp_netif action got_ip with netif0x3ffbb670 from event_id=4
I (9321) esp_netif_handlers: example_netif_eth ip: 192.168.34.122, mask: 255.255.254.0, gw: 192.168.34.252
D (9331) event: running post IP_EVENT:4 with handler 0x400e9e28 and context 0x3ffbf7b0 on loop 0x3ffb92c8
I (9341) ethernet_connect: Got IPv4 event: Interface "example_netif_eth" address: 192.168.34.122
D (9351) esp_netif_lwip: check: remote, if=0x400e9c78 fn=0x4012389c
D (9361) esp_netif_lwip: check: local, if=0x3ffb8f40 fn=0x4010c32c
I (9361) example_common: Connected to example_netif_eth
D (9371) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
I (9371) example_common: - IPv4 address: 192.168.34.122,
D (9381) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (9381) esp_netif_lwip: check: remote, if=0x3ffb68c0 fn=0x4010c1a8
D (9391) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (9401) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.
D (9451) esp.emac: receive len= 60
D (9751) esp.emac: receive len= 119
D (9831) esp.emac: receive len= 60
D (10491) esp.emac: receive len= 60
D (10761) esp.emac: receive len= 108
D (11441) esp.emac: receive len= 60
D (11751) esp.emac: receive len= 119
D (11821) esp.emac: receive len= 108
D (12341) esp.emac: receive len= 60
D (13751) esp.emac: receive len= 119
D (13881) esp.emac: receive len= 108
E (14271) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:
E (14271) task_wdt:  - IDLE0 (CPU 0)
E (14271) task_wdt: Tasks currently running:
E (14271) task_wdt: CPU 0: main
E (14271) task_wdt: CPU 1: IDLE1
E (14271) task_wdt: Print CPU 0 (current core) backtrace


Backtrace: 0x400F0E3A:0x3FFB1230 0x400F11FC:0x3FFB1250 0x400835FD:0x3FFB1280 0x400092DB:0x3FFB6870 0x400D8F9C:0x3FFB6890 0x400D9082:0x3FFB68C0 0x400D864B:0x3FFB68F0 0x400D8679:0x3FFB6920 0x400D784D:0x3FFB6940 0x400D8AA6:0x3FFB69A0 0x400D8C4D:0x3FFB69D0 0x400D8CC6:0x3FFB6AF0 0x400D8D6B:0x3FFB6B10 0x400D8D9D:0x3FFB6B30 0x400D8F46:0x3FFB6B50 0x400D761D:0x3FFB6C70 0x40128833:0x3FFB6C90 0x40087EDD:0x3FFB6CC0

D (15751) esp.emac: receive len= 119
D (17751) esp.emac: receive len= 119
D (17821) esp.emac: receive len= 108
D (17891) esp.emac: receive len= 337
E (19271) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:
E (19271) task_wdt:  - IDLE0 (CPU 0)
E (19271) task_wdt: Tasks currently running:
E (19271) task_wdt: CPU 0: main
E (19271) task_wdt: CPU 1: IDLE1
E (19271) task_wdt: Print CPU 0 (current core) backtrace


Backtrace: 0x400F0E3A:0x3FFB1230 0x400F11FC:0x3FFB1250 0x400835FD:0x3FFB1280 0x400092DB:0x3FFB6870 0x400D8F9C:0x3FFB6890 0x400D9082:0x3FFB68C0 0x400D864B:0x3FFB68F0 0x400D8679:0x3FFB6920 0x400D784D:0x3FFB6940 0x400D8AA6:0x3FFB69A0 0x400D8C4D:0x3FFB69D0 0x400D8CC6:0x3FFB6AF0 0x400D8D6B:0x3FFB6B10 0x400D8D9D:0x3FFB6B30 0x400D8F46:0x3FFB6B50 0x400D761D:0x3FFB6C70 0x40128833:0x3FFB6C90 0x40087EDD:0x3FFB6CC0

D (19651) esp.emac: receive len= 195
D (19771) esp.emac: receive len= 119
D (21751) esp.emac: receive len= 119
D (23751) esp.emac: receive len= 119
E (24271) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:
E (24271) task_wdt:  - IDLE0 (CPU 0)
E (24271) task_wdt: Tasks currently running:
E (24271) task_wdt: CPU 0: main
E (24271) task_wdt: CPU 1: IDLE1
E (24271) task_wdt: Print CPU 0 (current core) backtrace


Backtrace: 0x400F0E3A:0x3FFB1230 0x400F11FC:0x3FFB1250 0x400835FD:0x3FFB1280 0x400092DB:0x3FFB6870 0x400D8F9C:0x3FFB6890 0x400D9082:0x3FFB68C0 0x400D864B:0x3FFB68F0 0x400D8679:0x3FFB6920 0x400D784D:0x3FFB6940 0x400D8AA6:0x3FFB69A0 0x400D8C4D:0x3FFB69D0 0x400D8CC6:0x3FFB6AF0 0x400D8D6B:0x3FFB6B10 0x400D8D9D:0x3FFB6B30 0x400D8F46:0x3FFB6B50 0x400D761D:0x3FFB6C70 0x40128833:0x3FFB6C90 0x40087EDD:0x3FFB6CC0

D (25441) esp.emac: receive len= 108
D (25751) esp.emac: receive len= 119
D (27751) esp.emac: receive len= 119
E (29271) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:
E (29271) task_wdt:  - IDLE0 (CPU 0)
E (29271) task_wdt: Tasks currently running:
E (29271) task_wdt: CPU 0: main
E (29271) task_wdt: CPU 1: IDLE1
E (29271) task_wdt: Print CPU 0 (current core) backtrace


Backtrace: 0x400F0E3A:0x3FFB1230 0x400F11FC:0x3FFB1250 0x400835FD:0x3FFB1280 0x400092F5:0x3FFB6870 0x400D8F9C:0x3FFB6890 0x400D9082:0x3FFB68C0 0x400D864B:0x3FFB68F0 0x400D8679:0x3FFB6920 0x400D784D:0x3FFB6940 0x400D8AA6:0x3FFB69A0 0x400D8C4D:0x3FFB69D0 0x400D8CC6:0x3FFB6AF0 0x400D8D6B:0x3FFB6B10 0x400D8D9D:0x3FFB6B30 0x400D8F46:0x3FFB6B50 0x400D761D:0x3FFB6C70 0x40128833:0x3FFB6C90 0x40087EDD:0x3FFB6CC0

D (29751) esp.emac: receive len= 119
D (30851) esp.emac: receive len= 60
D (31751) esp.emac: receive len= 119
D (33601) esp.emac: receive len= 60
D (33751) esp.emac: receive len= 119
E (34271) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:
E (34271) task_wdt:  - IDLE0 (CPU 0)
E (34271) task_wdt: Tasks currently running:
E (34271) task_wdt: CPU 0: main
E (34271) task_wdt: CPU 1: IDLE1
E (34271) task_wdt: Print CPU 0 (current core) backtrace


Backtrace: 0x400F0E3A:0x3FFB1230 0x400F11FC:0x3FFB1250 0x400835FD:0x3FFB1280 0x400092F5:0x3FFB6870 0x400D8F9C:0x3FFB6890 0x400D9082:0x3FFB68C0 0x400D864B:0x3FFB68F0 0x400D8679:0x3FFB6920 0x400D784D:0x3FFB6940 0x400D8AA6:0x3FFB69A0 0x400D8C4D:0x3FFB69D0 0x400D8CC6:0x3FFB6AF0 0x400D8D6B:0x3FFB6B10 0x400D8D9D:0x3FFB6B30 0x400D8F46:0x3FFB6B50 0x400D761D:0x3FFB6C70 0x40128833:0x3FFB6C90 0x40087EDD:0x3FFB6CC0

D (35751) esp.emac: receive len= 119
D (37751) esp.emac: receive len= 119
D (39071) esp.emac: receive len= 350
E (39271) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:
E (39271) task_wdt:  - IDLE0 (CPU 0)
E (39271) task_wdt: Tasks currently running:
E (39271) task_wdt: CPU 0: main
E (39271) task_wdt: CPU 1: IDLE1
E (39271) task_wdt: Print CPU 0 (current core) backtrace


Backtrace: 0x400F0E3A:0x3FFB1230 0x400F11FC:0x3FFB1250 0x400835FD:0x3FFB1280 0x400092F5:0x3FFB6870 0x400D8F9C:0x3FFB6890 0x400D9082:0x3FFB68C0 0x400D864B:0x3FFB68F0 0x400D8679:0x3FFB6920 0x400D784D:0x3FFB6940 0x400D8AA6:0x3FFB69A0 0x400D8C4D:0x3FFB69D0 0x400D8CC6:0x3FFB6AF0 0x400D8D6B:0x3FFB6B10 0x400D8D9D:0x3FFB6B30 0x400D8F46:0x3FFB6B50 0x400D761D:0x3FFB6C70 0x40128833:0x3FFB6C90 0x40087EDD:0x3FFB6CC0

D (39751) esp.emac: receive len= 119
D (40061) esp.emac: receive len= 108
D (40081) esp.emac: receive len= 350
D (40081) esp.emac: receive len= 60
D (40571) esp.emac: receive len= 60
D (40921) esp.emac: receive len= 60
D (41731) esp.emac: receive len= 101
D (41731) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (41731) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (41741) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (41751) esp.emac: receive len= 119
D (41921) esp.emac: receive len= 60
D (42061) esp.emac: receive len= 101
D (42061) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42061) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42061) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670

D (42091) event: created event loop 0x3ffc15c0
D (42091) mb_driver: Start of driver task.
D (42301) mb_driver: 0x3ffc11f4, driver check shutdown (8)...
D (42301) mb_driver: 0x3ffc11f4, driver task is suspended...
D (42301) mb_driver: 0x3ffc11f4, stop tcp driver task.
D (42301) mb_driver: 0x3ffc11f4, event 0x1, register.
D (42311) mb_driver: 0x3ffc11f4, event 0x2, register.
D (42311) mb_driver: 0x3ffc11f4, event 0x4, register.
D (42311) mb_driver: 0x3ffc11f4, event 0x8, register.
D (42321) mb_driver: 0x3ffc11f4, event 0x40, register.
D (42321) mb_driver: 0x3ffc11f4, event 0x10, register.
D (42331) mb_driver: 0x3ffc11f4, event 0x20, register.
D (42331) mb_driver: 0x3ffc11f4, event 0x80, register.
D (42331) esp.emac: receive len= 101
D (42341) mb_driver: 0x3ffc11f4, event 0x100, register.
D (42341) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42351) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4
D (42351) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42361) mb_driver: 0x3ffc11f4, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502
D (42381) mb_port.tcp.master: 0x3ffc11f4, open slave: 0, mb_slave_tcp_01:1502
D (42381) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4
D (42401) mb_driver: 0x3ffc11f4, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502
D (42401) mb_port.tcp.master: 0x3ffc11f4, open slave: 1, mb_slave_tcp_c8:502
D (42411) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
I (42421) port.utils: hostname set to: [mb_master_tcp_d551f3]
D (42421) esp.emac: receive len= 60
D (42421) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
I (42431) port.utils: mdns delegate hostname set to: [mb_master_tcp_00]
I (42441) port.utils: IP: 192.168.34.122
I (42441) port.utils: GW: 192.168.34.252
I (42441) port.utils: NETMASK: 255.255.254.0
D (42451) mb_port.tcp.master: created object @0x3ffc1028
D (42451) mb_port.timer: initialized mb_port.timer object @0x3ffc39ec
D (42461) mb_port.event: initialized object @0x3ffc3a24
D (42461) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffc0d6c
D (42471) mb_object.master: created object mbm_tcp#0x3ffbf9e8
I (42481) mbc_tcp.master: mb found config for cid #0, uid=1.
I (42481) mbc_tcp.master: mb found config for cid #1, uid=1.
I (42491) mbc_tcp.master: mb found config for cid #2, uid=200.
I (42491) mbc_tcp.master: mb found config for cid #3, uid=1.
I (42501) mbc_tcp.master: mb found config for cid #4, uid=1.
I (42501) TEST_COMMON: 0x3ffbf9e8, modbus master stack is initialized
D (42511) mb_driver: 0x3ffc11f4, resume tcp driver task.
D (42521) mb_driver: 0x3ffc11f4, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT
D (42521) event: running post loop:0x3ffc11f4:256 with handler 0x40124a18 and context 0x3ffc3174 on loop 0x3ffc15c0
D (42531) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_timeout: fd: -1
D (42541) event: running post loop:0x3ffc11f4:2 with handler 0x40124354 and context 0x3ffc2f40 on loop 0x3ffc15c0
D (42551) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_open: fd: 0
D (42561) event: running post loop:0x3ffc11f4:2 with handler 0x40124354 and context 0x3ffc2f40 on loop 0x3ffc15c0
D (42571) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_open: fd: 1
D (42571) mb_port.timer: mbm_tcp#0x3ffbf9e8, start timer (1000000).
D (42581) mb_driver: 0x3ffc11f4, fd event get: 0x04:-1, |MB_EVENT_RESOLVE
D (42581) event: running post loop:0x3ffc11f4:4 with handler 0x40124860 and context 0x3ffc2f70 on loop 0x3ffc15c0
D (42591) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_resolve: fd: -1
D (42601) event: running post loop:0x3ffc11f4:4 with handler 0x40124860 and context 0x3ffc2f70 on loop 0x3ffc15c0
D (42611) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_resolve: fd: 0
D (42621) esp.emac: receive len= 150
D (42621) port.utils: Incorrect host IP: mb_slave_tcp_01
D (42621) port.utils: Query A: mb_slave_tcp_01.local
D (42631) esp.emac: receive len= 95
D (42631) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42641) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42641) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (42651) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (42731) esp.emac: receive len= 91
D (42731) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42731) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42731) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (42741) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.34.175
I (42751) mb_port.tcp.master: 0x3ffc11f4, slave: 0, resolved with IP:192.168.34.175.
D (42761) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (42761) event: running post loop:0x3ffc11f4:4 with handler 0x40124860 and context 0x3ffc2f70 on loop 0x3ffc15c0
D (42771) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_resolve: fd: 1
D (42781) esp.emac: receive len= 150
D (42781) port.utils: Incorrect host IP: mb_slave_tcp_c8
D (42791) port.utils: Query A: mb_slave_tcp_c8.local
D (42921) esp.emac: receive len= 60
D (42931) esp.emac: receive len= 91
D (42941) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42941) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (42941) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (42951) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (42951) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.34.175
I (42961) mb_port.tcp.master: 0x3ffc11f4, slave: 1, resolved with IP:192.168.34.175.
D (42971) mb_driver: 0x3ffc11f4, fd event get: 0x08:1, |MB_EVENT_CONNECT
D (42971) event: running post loop:0x3ffc11f4:8 with handler 0x40124a48 and context 0x3ffc2fa0 on loop 0x3ffc15c0
D (42981) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_connect: fd: 0
D (42991) mb_port.tcp.master: 0x3ffc11f4, connection phase, slave: #0(-1) [192.168.34.175].
D (43001) esp.emac: receive len= 60
D (43001) esp.emac: receive len= 60
I (43001) mb_port.tcp.master: 0x3ffc11f4, slave: #0, sock:54, IP: 192.168.34.175, is connected.
D (43011) mb_port.tcp.master: Opened/connected: 2, 1.
D (43231) mb_driver: 0x3ffc11f4, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (43231) event: running post loop:0x3ffc11f4:8 with handler 0x40124a48 and context 0x3ffc2fa0 on loop 0x3ffc15c0
D (43231) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_connect: fd: 1
D (43241) mb_port.tcp.master: 0x3ffc11f4, connection phase, slave: #1(-1) [192.168.34.175].
D (43251) esp.emac: receive len= 60
I (43251) mb_port.tcp.master: 0x3ffc11f4, slave: #1, sock:55, IP: 192.168.34.175, is connected.
D (43261) mb_port.tcp.master: Opened/connected: 2, 2.
I (43261) mbc_tcp.master: mb controller connection done.
I (43271) mb_port.tcp.master: 0x3ffc11f4, Connected: 2, 2, start polling.
D (43271) event: running post loop:0x3ffc11f4:256 with handler 0x40124a18 and context 0x3ffc3174 on loop 0x3ffc15c0
D (43281) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_timeout: fd: -1
D (43291) mb_object.master: 0x3ffbf9e8:EV_READY
D (43291) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
I (43301) TEST_COMMON: 0x3ffbf9e8, modbus master start...
Send signal: [Master_started]!
D (43321) TEST_COMMON: Notify task start 0x3ffc58f8
D (43321) TEST_COMMON: Task: 0x3ffc58f8, get notify value = 1
D (43321) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (43331) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (43351) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (43351) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (43351) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (43361) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (43371) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (43371) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (43381) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119
D (43391) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11
D (43401) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (43401) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (43491) esp.emac: receive len= 60
D (43581) esp.emac: receive len= 66
D (43581) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (43581) port.utils: Enqueue data, length=12, TID=0x0
D (43581) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (43591) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (43591) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (43601) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (43611) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (43621) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0000 received.
D (43621) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (43631) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc1088.
D (43641) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 247208.
D (43651) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (43661) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 00 00 01
D (43661) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (43671) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (43671) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (43681) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (43681) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (43691) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 325827
D (43691) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (43711) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (43711) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (43731) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (43731) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (43731) esp.emac: receive len= 95
D (43741) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (43741) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (43751) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (43761) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (43761) esp.emac: receive len= 119
D (43771) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (43771) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (43781) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (43791) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (43801) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (43801) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (43811) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0001, 15 (bytes), errno 119
D (43821) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22
D (43831) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (43831) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (43921) esp.emac: receive len= 60
D (43991) esp.emac: receive len= 60
D (44001) esp.emac: receive len= 66
D (44001) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (44001) port.utils: Enqueue data, length=12, TID=0x1
D (44001) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (44011) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (44021) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (44031) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (44031) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (44031) esp.emac: receive len= 91
D (44041) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0001 received.
D (44041) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (44051) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (44061) esp_netif_lwip: check: local, if=0x3ffb8f10 fn=0x4010c32c
D (44071) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc1088.
D (44081) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 254467.
D (44091) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (44091) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 01 00 01
D (44101) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (44101) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (44111) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (44111) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (44121) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (44121) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 343132
D (44131) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (44151) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (44151) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (44171) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (44171) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (44171) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (44191) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (44191) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 15
D (44191) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (44201) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (44211) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (44221) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (44221) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (44231) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119
D (44241) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (44241) esp.emac: receive len= 60
D (44251) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (44411) esp.emac: receive len= 66
D (44411) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (44421) port.utils: Enqueue data, length=12, TID=0x0
D (44421) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (44421) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (44431) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (44441) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (44451) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (44451) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0000 received.
D (44461) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (44471) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc1088.
D (44471) esp.emac: receive len= 62
D (44481) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 237438.
D (44491) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (44501) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 02 00 01
D (44501) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (44501) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (44511) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (44521) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (44521) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (44531) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 325154
D (44531) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (44551) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (44551) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (44571) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (44571) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (44571) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (44581) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (44591) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (44591) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (44601) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (44611) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (44621) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119
D (44631) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44
D (44641) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (44641) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (44731) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (44761) esp.emac: receive len= 60
D (44841) esp.emac: receive len= 66
D (44841) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (44841) port.utils: Enqueue data, length=12, TID=0x2
D (44841) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (44851) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (44861) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (44871) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (44871) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (44881) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0002 received.
D (44891) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (44891) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc1088.
D (44901) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 273583.
D (44911) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (44921) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 03 00 01
D (44931) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (44931) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (44941) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (44941) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (44951) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (44951) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 362881
D (44971) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (44971) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (44991) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (44991) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (44991) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (45011) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 00 00 01
D (45011) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (45011) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (45021) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (45031) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (45041) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (45051) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119
D (45061) SENT: 00 03 00 00 00 06 01 03 00 00 00 01
D (45061) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (45071) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (45211) esp.emac: receive len= 65
D (45211) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (45221) port.utils: Enqueue data, length=11, TID=0x3
D (45221) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (45221) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (45231) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (45241) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (45251) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (45251) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0003 received.
D (45261) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (45261) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc1088.
D (45281) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 219235.
D (45291) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (45291) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 11 11
D (45301) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (45301) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (45311) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (45311) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (45321) mbm_error_cb_request_success: 03 00 00 00 01
D (45321) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 301361
D (45331) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (45351) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (45351) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (45371) TEST_COMMON: CHAR #0, value is ok.
D (45371) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (45371) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (45371) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 01 00 01
D (45381) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (45391) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (45391) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (45401) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (45411) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (45421) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0004, 12 (bytes), errno 119
D (45431) SENT: 00 04 00 00 00 06 01 03 00 01 00 01
D (45441) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (45441) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (45501) esp.emac: receive len= 60
D (45611) esp.emac: receive len= 65
D (45611) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (45611) port.utils: Enqueue data, length=11, TID=0x4
D (45611) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (45621) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (45621) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (45631) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (45641) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (45651) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0004 received.
D (45651) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (45661) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc1088.
D (45671) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 239137.
D (45681) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (45691) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 22 22
D (45691) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (45701) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (45701) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (45711) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (45711) mbm_error_cb_request_success: 03 00 01 00 01
D (45721) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 327374
D (45731) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (45731) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (45741) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
D (45751) esp.emac: receive len= 119
I (45761) TEST_COMMON: CHAR #1, value is ok.
D (45761) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (45761) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (45781) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 02 00 01
D (45781) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 12
D (45791) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (45791) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (45801) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (45811) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (45821) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0001, 12 (bytes), errno 119
D (45831) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01
D (45831) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (45841) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (45841) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb670
D (46001) esp.emac: receive len= 60
D (46031) esp.emac: receive len= 65
D (46031) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (46031) port.utils: Enqueue data, length=11, TID=0x1
D (46031) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (46041) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (46051) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (46061) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (46061) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (46071) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0001 received.
D (46081) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (46081) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc1088.
D (46091) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 264867.
D (46101) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (46111) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 33 33
D (46111) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (46121) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (46121) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (46131) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (46141) mbm_error_cb_request_success: 03 00 02 00 01
D (46141) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 348865
D (46161) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (46161) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (46161) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (46181) TEST_COMMON: CHAR #2, value is ok.
D (46181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (46181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (46201) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 03 00 01
D (46201) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (46211) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (46211) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (46221) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (46231) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (46241) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119
D (46251) SENT: 00 05 00 00 00 06 01 03 00 03 00 01
D (46251) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (46251) esp.emac: receive len= 60
D (46261) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (46431) esp.emac: receive len= 65
D (46441) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (46441) port.utils: Enqueue data, length=11, TID=0x5
D (46441) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (46451) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (46451) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (46461) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (46471) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (46481) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0005 received.
D (46481) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (46491) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc1088.
D (46501) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 250637.
D (46511) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (46521) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 44 44
D (46521) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (46521) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (46531) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (46531) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (46541) mbm_error_cb_request_success: 03 00 03 00 01
D (46551) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 334619
D (46561) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (46561) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (46581) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (46581) TEST_COMMON: CHAR #3, value is ok.
D (46581) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (46601) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (46601) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 00
D (46601) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (46611) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (46621) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (46631) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (46631) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (46641) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119
D (46651) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00
D (46661) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (46671) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (46751) esp.emac: receive len= 60
D (46801) esp.emac: receive len= 66
D (46811) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (46811) port.utils: Enqueue data, length=12, TID=0x6
D (46811) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (46821) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (46821) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (46831) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (46841) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (46851) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0006 received.
D (46851) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (46861) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc1088.
D (46871) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214160.
D (46881) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (46891) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (46891) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (46891) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (46901) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (46901) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (46911) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00
D (46921) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 303458
D (46931) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (46931) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (46941) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (47021) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (47021) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (47021) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (47021) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (47031) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (47041) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (47051) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (47061) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (47071) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0007, 15 (bytes), errno 119
D (47081) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11
D (47081) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (47091) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (47231) esp.emac: receive len= 66
D (47231) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (47231) port.utils: Enqueue data, length=12, TID=0x7
D (47231) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (47241) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (47251) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (47261) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (47261) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (47271) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0007 received.
D (47281) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (47281) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc1088.
D (47291) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 219050.
D (47301) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (47311) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 00 00 01
D (47321) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (47321) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (47331) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (47331) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (47341) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (47341) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 308328
D (47361) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (47361) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (47381) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (47381) TEST_COMMON: CHAR #0, value is ok.
D (47381) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (47401) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (47401) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (47401) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (47411) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (47411) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (47421) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (47431) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (47441) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119
D (47451) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22
D (47461) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (47461) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (47501) esp.emac: receive len= 60
D (47631) esp.emac: receive len= 66
D (47631) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (47631) port.utils: Enqueue data, length=12, TID=0x8
D (47631) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (47641) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (47651) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (47661) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (47661) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (47671) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0008 received.
D (47681) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (47681) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc1088.
D (47691) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 240345.
D (47691) esp.emac: receive len= 60
D (47711) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (47711) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 01 00 01
D (47721) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (47721) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (47731) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (47731) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (47741) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (47741) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 330826
D (47751) esp.emac: receive len= 119
D (47751) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (47771) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (47771) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (47791) TEST_COMMON: CHAR #1, value is ok.
D (47791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (47791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (47811) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (47811) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 15
D (47811) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (47821) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (47831) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (47831) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (47841) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119
D (47851) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (47861) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (47871) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (48001) esp.emac: receive len= 60
D (48041) esp.emac: receive len= 66
D (48041) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (48041) port.utils: Enqueue data, length=12, TID=0x2
D (48041) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (48051) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (48051) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (48061) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (48071) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (48081) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0002 received.
D (48081) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (48091) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc1088.
D (48101) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 244765.
D (48111) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (48121) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 02 00 01
D (48121) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (48121) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (48131) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (48141) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (48141) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (48151) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 325148
D (48161) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (48161) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (48181) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (48181) TEST_COMMON: CHAR #2, value is ok.
D (48181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (48201) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (48201) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (48201) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (48211) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (48221) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (48231) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (48241) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (48251) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0009, 15 (bytes), errno 119
D (48251) esp.emac: receive len= 60
D (48261) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44
D (48261) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (48271) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (48451) esp.emac: receive len= 66
D (48451) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (48451) port.utils: Enqueue data, length=12, TID=0x9
D (48451) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (48461) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (48461) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (48471) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (48481) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (48491) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0009 received.
D (48491) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (48501) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc1088.
D (48511) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 253892.
D (48521) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (48531) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 03 00 01
D (48531) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (48541) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (48541) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (48551) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (48551) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (48561) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 343227
D (48571) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (48571) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (48591) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (48591) TEST_COMMON: CHAR #3, value is ok.
D (48591) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (48611) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (48611) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 01
D (48611) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (48621) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (48631) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (48641) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (48651) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (48661) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119
D (48671) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01
D (48671) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (48681) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (48751) esp.emac: receive len= 60
D (48821) esp.emac: receive len= 66
D (48821) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (48821) port.utils: Enqueue data, length=12, TID=0xa
D (48821) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (48831) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (48831) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (48841) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (48851) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (48861) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000a received.
D (48861) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (48871) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc1088.
D (48881) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214180.
D (48891) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (48901) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (48901) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (48911) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (48911) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (48921) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (48921) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01
D (48931) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 303450
D (48941) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (48941) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (48961) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (49021) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (49021) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (49021) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 00 00 01
D (49021) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (49031) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (49041) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (49051) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (49051) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (49071) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119
D (49081) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01
D (49081) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (49091) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (49231) esp.emac: receive len= 65
D (49231) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (49231) port.utils: Enqueue data, length=11, TID=0xb
D (49231) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (49241) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (49251) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (49261) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (49261) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (49271) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000b received.
D (49281) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (49281) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc1088.
D (49291) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 217799.
D (49301) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (49311) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 11 11
D (49311) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (49321) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (49321) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (49331) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (49331) mbm_error_cb_request_success: 03 00 00 00 01
D (49341) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 306020
D (49361) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (49361) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (49361) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (49381) TEST_COMMON: CHAR #0, value is ok.
D (49381) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (49381) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (49401) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 01 00 01
D (49401) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (49411) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (49411) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (49421) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (49431) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (49441) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000c, 12 (bytes), errno 119
D (49451) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01
D (49451) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (49461) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (49501) esp.emac: receive len= 60
D (49621) esp.emac: receive len= 65
D (49621) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (49631) port.utils: Enqueue data, length=11, TID=0xc
D (49631) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (49641) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (49641) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (49651) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (49661) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (49671) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000c received.
D (49671) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (49681) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000c:0x000d, 0x3ffc1088.
D (49691) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 239185.
D (49701) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (49701) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 22 22
D (49711) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (49711) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (49721) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (49721) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (49731) mbm_error_cb_request_success: 03 00 01 00 01
D (49731) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 323024
D (49751) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (49751) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
D (49751) esp.emac: receive len= 119
I (49771) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (49771) TEST_COMMON: CHAR #1, value is ok.
D (49791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (49791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (49791) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 02 00 01
D (49791) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 12
D (49801) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (49811) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (49821) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (49831) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (49841) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119
D (49851) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01
D (49851) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (49861) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (50001) esp.emac: receive len= 60
D (50031) esp.emac: receive len= 65
D (50041) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (50041) port.utils: Enqueue data, length=11, TID=0x3
D (50041) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (50051) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (50051) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (50061) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (50071) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (50081) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0003 received.
D (50081) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (50091) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc1088.
D (50101) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 252261.
D (50111) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (50111) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 33 33
D (50121) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (50121) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (50131) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (50131) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (50141) mbm_error_cb_request_success: 03 00 02 00 01
D (50141) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 340506
D (50161) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (50161) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (50181) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (50181) TEST_COMMON: CHAR #2, value is ok.
D (50181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (50201) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (50201) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 03 00 01
D (50201) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (50211) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (50221) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (50231) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (50231) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (50241) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000d, 12 (bytes), errno 119
D (50251) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01
D (50251) esp.emac: receive len= 60
D (50261) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (50271) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (50441) esp.emac: receive len= 65
D (50451) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (50451) port.utils: Enqueue data, length=11, TID=0xd
D (50451) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (50461) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (50461) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (50471) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (50481) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (50491) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000d received.
D (50491) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (50501) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000d:0x000e, 0x3ffc1088.
D (50511) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 255097.
D (50521) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (50521) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 44 44
D (50531) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (50531) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (50541) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (50541) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (50551) mbm_error_cb_request_success: 03 00 03 00 01
D (50551) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 343350
D (50571) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (50571) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (50591) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (50591) TEST_COMMON: CHAR #3, value is ok.
D (50591) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (50611) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (50611) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 02
D (50611) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (50621) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (50631) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (50641) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (50641) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (50651) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000e, 15 (bytes), errno 119
D (50661) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02
D (50671) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (50681) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (50751) esp.emac: receive len= 60
D (50811) esp.emac: receive len= 66
D (50821) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (50821) port.utils: Enqueue data, length=12, TID=0xe
D (50821) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (50831) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (50831) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (50841) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (50851) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (50861) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000e received.
D (50861) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (50871) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000e:0x000f, 0x3ffc1088.
D (50881) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214162.
D (50891) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (50891) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (50901) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (50901) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (50911) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (50911) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (50921) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02
D (50931) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 303460
D (50931) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (50951) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (50951) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (51031) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (51031) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (51031) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (51031) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (51041) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (51051) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (51061) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (51071) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (51081) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000f, 15 (bytes), errno 119
D (51091) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11
D (51091) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (51101) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (51241) esp.emac: receive len= 66
D (51241) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (51241) port.utils: Enqueue data, length=12, TID=0xf
D (51241) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (51251) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (51261) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (51271) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (51271) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (51281) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000f received.
D (51291) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (51291) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000f:0x0010, 0x3ffc1088.
D (51311) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 218981.
D (51311) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (51321) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 00 00 01
D (51331) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (51331) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (51341) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (51341) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (51351) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (51351) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 308263
D (51371) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (51371) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (51391) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (51391) TEST_COMMON: CHAR #0, value is ok.
D (51391) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (51411) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (51411) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (51411) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (51421) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (51421) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (51431) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (51441) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (51451) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0010, 15 (bytes), errno 119
D (51461) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22
D (51471) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (51471) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (51501) esp.emac: receive len= 60
D (51641) esp.emac: receive len= 66
D (51641) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (51641) port.utils: Enqueue data, length=12, TID=0x10
D (51641) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (51651) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (51661) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (51671) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (51671) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (51681) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0010 received.
D (51691) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (51691) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0010:0x0011, 0x3ffc1088.
D (51701) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 240659.
D (51711) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (51721) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 01 00 01
D (51721) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (51731) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (51731) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (51741) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (51741) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (51751) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 327929
D (51761) esp.emac: receive len= 119
D (51771) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (51771) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (51791) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (51791) TEST_COMMON: CHAR #1, value is ok.
D (51791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (51811) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (51811) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (51811) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 15
D (51821) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (51831) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (51841) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (51841) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (51851) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0004, 15 (bytes), errno 119
D (51851) esp.emac: receive len= 337
D (51861) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (51861) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (51881) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (52001) esp.emac: receive len= 60
D (52041) esp.emac: receive len= 66
D (52051) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (52051) port.utils: Enqueue data, length=12, TID=0x4
D (52051) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (52061) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (52061) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (52071) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (52081) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (52091) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0004 received.
D (52091) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (52101) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc1088.
D (52111) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 247388.
D (52121) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (52131) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 02 00 01
D (52131) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (52131) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (52141) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (52151) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (52151) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (52161) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 334903
D (52171) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (52171) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (52191) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (52191) TEST_COMMON: CHAR #2, value is ok.
D (52191) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (52211) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (52211) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (52211) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (52221) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (52231) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (52241) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (52251) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (52261) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0011, 15 (bytes), errno 119
D (52271) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44
D (52271) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (52281) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (52461) esp.emac: receive len= 66
D (52461) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (52461) port.utils: Enqueue data, length=12, TID=0x11
D (52461) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (52471) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (52471) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (52481) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (52491) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (52501) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0011 received.
D (52501) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (52511) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0011:0x0012, 0x3ffc1088.
D (52521) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 254194.
D (52531) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (52541) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 03 00 01
D (52541) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (52551) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (52551) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (52561) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (52561) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (52571) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 343469
D (52581) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (52581) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (52601) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (52601) TEST_COMMON: CHAR #3, value is ok.
D (52601) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (52621) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (52621) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 03
D (52621) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (52631) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (52641) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (52651) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (52661) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (52671) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0012, 15 (bytes), errno 119
D (52681) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03
D (52681) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (52691) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (52751) esp.emac: receive len= 60
D (52831) esp.emac: receive len= 66
D (52831) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (52831) port.utils: Enqueue data, length=12, TID=0x12
D (52831) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (52841) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (52841) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (52851) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (52861) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (52871) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0012 received.
D (52871) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (52881) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0012:0x0013, 0x3ffc1088.
D (52891) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214479.
D (52901) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (52911) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (52911) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (52921) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (52921) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (52931) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (52931) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03
D (52941) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 303749
D (52961) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (52961) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (52961) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (53031) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (53051) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (53051) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 00 00 01
D (53051) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (53061) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (53071) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (53081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (53081) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (53091) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0013, 12 (bytes), errno 119
D (53101) SENT: 00 13 00 00 00 06 01 03 00 00 00 01
D (53111) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (53121) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (53251) esp.emac: receive len= 60
D (53281) esp.emac: receive len= 65
D (53281) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (53281) port.utils: Enqueue data, length=11, TID=0x13
D (53281) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (53291) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (53291) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (53301) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (53311) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (53321) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0013 received.
D (53331) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (53331) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0013:0x0014, 0x3ffc1088.
D (53341) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 236151.
D (53351) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (53361) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 11 11
D (53361) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (53371) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (53371) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (53381) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (53381) mbm_error_cb_request_success: 03 00 00 00 01
D (53391) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 324372
D (53401) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (53401) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (53421) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (53421) TEST_COMMON: CHAR #0, value is ok.
D (53431) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (53451) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (53451) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 01 00 01
D (53451) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (53461) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (53471) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (53481) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (53481) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (53491) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0014, 12 (bytes), errno 119
D (53501) esp.emac: receive len= 60
D (53511) SENT: 00 14 00 00 00 06 01 03 00 01 00 01
D (53511) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (53521) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (53661) esp.emac: receive len= 65
D (53661) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (53661) port.utils: Enqueue data, length=11, TID=0x14
D (53661) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (53671) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (53671) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (53681) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (53691) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (53701) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0014 received.
D (53711) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (53711) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0014:0x0015, 0x3ffc1088.
D (53721) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 216669.
D (53731) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (53741) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 22 22
D (53741) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (53751) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (53751) esp.emac: receive len= 119
D (53761) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (53761) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (53771) mbm_error_cb_request_success: 03 00 01 00 01
D (53771) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 309662
D (53791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (53791) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (53811) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (53811) TEST_COMMON: CHAR #1, value is ok.
D (53811) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (53831) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (53831) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 02 00 01
D (53831) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 12
D (53841) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (53841) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (53851) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (53861) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (53871) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119
D (53881) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01
D (53881) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (53891) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (54001) esp.emac: receive len= 60
D (54051) esp.emac: receive len= 65
D (54051) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (54051) port.utils: Enqueue data, length=11, TID=0x5
D (54061) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (54061) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (54071) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (54081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (54091) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (54091) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0005 received.
D (54101) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (54111) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc1088.
D (54121) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 236019.
D (54131) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (54131) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 33 33
D (54141) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (54141) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (54151) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (54151) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (54161) mbm_error_cb_request_success: 03 00 02 00 01
D (54161) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 321423
D (54181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (54181) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (54201) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (54201) TEST_COMMON: CHAR #2, value is ok.
D (54201) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (54221) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (54221) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 03 00 01
D (54221) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (54231) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (54231) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (54241) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (54251) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (54261) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0015, 12 (bytes), errno 119
D (54271) SENT: 00 15 00 00 00 06 01 03 00 03 00 01
D (54281) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (54281) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (54461) esp.emac: receive len= 65
D (54471) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (54471) port.utils: Enqueue data, length=11, TID=0x15
D (54471) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (54481) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (54481) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (54491) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (54501) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (54511) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0015 received.
D (54511) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (54521) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0015:0x0016, 0x3ffc1088.
D (54531) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 258002.
D (54541) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (54551) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 44 44
D (54551) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (54551) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (54561) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (54561) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (54571) mbm_error_cb_request_success: 03 00 03 00 01
D (54581) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 344517
D (54591) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (54591) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (54611) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (54611) TEST_COMMON: CHAR #3, value is ok.
D (54611) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (54631) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (54631) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 04
D (54631) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (54641) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (54651) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (54661) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (54661) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (54671) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0016, 15 (bytes), errno 119
D (54681) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04
D (54691) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (54701) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (54751) esp.emac: receive len= 60
D (54841) esp.emac: receive len= 66
D (54841) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (54841) port.utils: Enqueue data, length=12, TID=0x16
D (54841) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (54851) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (54851) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (54861) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (54871) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (54881) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0016 received.
D (54881) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (54891) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0016:0x0017, 0x3ffc1088.
D (54901) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214578.
D (54911) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (54921) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (54921) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (54931) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (54931) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (54941) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (54941) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04
D (54951) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 303856
D (54961) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (54961) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (54981) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (55031) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (55051) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (55051) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (55051) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (55061) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (55071) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (55081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (55091) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (55101) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0017, 15 (bytes), errno 119
D (55111) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11
D (55111) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (55121) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (55251) esp.emac: receive len= 60
D (55281) esp.emac: receive len= 66
D (55281) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (55281) port.utils: Enqueue data, length=12, TID=0x17
D (55281) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (55291) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (55301) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (55311) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (55311) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (55321) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0017 received.
D (55331) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (55331) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0017:0x0018, 0x3ffc1088.
D (55341) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 237317.
D (55351) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (55361) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 00 00 01
D (55361) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (55371) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (55371) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (55381) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (55391) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (55391) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 326575
D (55411) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (55411) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (55411) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (55431) TEST_COMMON: CHAR #0, value is ok.
D (55431) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (55431) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (55441) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (55451) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (55461) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (55461) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (55471) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (55481) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (55491) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0018, 15 (bytes), errno 119
D (55501) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22
D (55501) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (55501) esp.emac: receive len= 60
D (55521) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (55651) esp.emac: receive len= 66
D (55651) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (55661) port.utils: Enqueue data, length=12, TID=0x18
D (55661) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (55671) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (55671) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (55681) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (55691) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (55691) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0018 received.
D (55701) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (55711) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0018:0x0019, 0x3ffc1088.
D (55721) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 217824.
D (55731) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (55731) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 01 00 01
D (55741) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (55741) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (55751) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (55751) mb_port.timer: mbm_tcp#0x3ffbfD (55761) esp.emac: receive len= 119
9e8, timer stop, returns 259.
D (55761) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (55771) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 307142
D (55791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (55791) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (55791) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (55811) TEST_COMMON: CHAR #1, value is ok.
D (55811) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (55811) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (55831) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (55831) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 15
D (55831) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (55841) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (55851) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (55861) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (55871) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119
D (55881) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (55881) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (55891) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (56001) esp.emac: receive len= 60
D (56051) esp.emac: receive len= 66
D (56051) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (56051) port.utils: Enqueue data, length=12, TID=0x6
D (56051) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (56061) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (56071) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (56081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (56081) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (56091) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0006 received.
D (56101) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (56101) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc1088.
D (56111) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 237116.
D (56121) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (56131) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 02 00 01
D (56131) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (56141) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (56141) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (56151) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (56161) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (56161) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 319665
D (56181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (56181) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (56201) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (56201) TEST_COMMON: CHAR #2, value is ok.
D (56201) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (56221) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (56221) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (56221) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (56231) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (56231) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (56241) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (56251) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (56261) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0019, 15 (bytes), errno 119
D (56271) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44
D (56281) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (56281) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (56461) esp.emac: receive len= 66
D (56461) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (56461) port.utils: Enqueue data, length=12, TID=0x19
D (56461) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (56471) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (56471) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (56481) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (56491) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (56501) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0019 received.
D (56501) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (56511) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0019:0x001a, 0x3ffc1088.
D (56521) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 249512.
D (56531) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (56541) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 03 00 01
D (56541) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (56551) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (56551) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (56561) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (56561) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (56571) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 335270
D (56581) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (56581) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (56601) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (56601) TEST_COMMON: CHAR #3, value is ok.
D (56601) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (56621) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (56621) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 05
D (56621) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (56631) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (56641) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (56651) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (56661) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (56671) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001a, 15 (bytes), errno 119
D (56681) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05
D (56681) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (56691) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (56751) esp.emac: receive len= 60
D (56831) esp.emac: receive len= 66
D (56831) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (56831) port.utils: Enqueue data, length=12, TID=0x1a
D (56831) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (56841) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (56841) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (56851) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (56861) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (56871) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x001a received.
D (56871) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (56881) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001a:0x001b, 0x3ffc1088.
D (56891) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214734.
D (56901) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (56911) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (56911) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (56921) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (56921) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (56931) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (56931) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05
D (56941) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 304003
D (56961) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (56961) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (56961) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (57031) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (57051) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (57051) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 00 00 01
D (57051) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (57061) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (57071) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (57081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (57081) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (57091) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001b, 12 (bytes), errno 119
D (57101) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01
D (57111) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (57121) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (57251) esp.emac: receive len= 60
D (57281) esp.emac: receive len= 65
D (57281) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (57281) port.utils: Enqueue data, length=11, TID=0x1b
D (57281) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (57291) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (57291) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (57301) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (57311) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (57321) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x001b received.
D (57331) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (57331) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001b:0x001c, 0x3ffc1088.
D (57341) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 236165.
D (57351) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (57361) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 11 11
D (57361) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (57371) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (57371) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (57381) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (57381) mbm_error_cb_request_success: 03 00 00 00 01
D (57391) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 324386
D (57401) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (57401) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (57421) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (57421) TEST_COMMON: CHAR #0, value is ok.
D (57431) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (57451) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (57451) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 01 00 01
D (57451) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (57461) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (57471) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (57481) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (57481) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (57491) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001c, 12 (bytes), errno 119
D (57501) esp.emac: receive len= 60
D (57511) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01
D (57511) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (57521) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (57661) esp.emac: receive len= 65
D (57661) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (57661) port.utils: Enqueue data, length=11, TID=0x1c
D (57661) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (57671) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (57671) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (57681) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (57691) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (57701) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x001c received.
D (57711) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (57711) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001c:0x001d, 0x3ffc1088.
D (57721) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 216660.
D (57731) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (57741) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 22 22
D (57741) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (57751) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (57751) esp.emac: receive len= 119
D (57761) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (57761) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (57771) mbm_error_cb_request_success: 03 00 01 00 01
D (57771) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 309654
D (57791) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (57791) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (57811) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (57811) TEST_COMMON: CHAR #1, value is ok.
D (57811) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (57831) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (57831) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 02 00 01
D (57831) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 12
D (57841) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (57841) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (57851) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (57861) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (57871) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0007, 12 (bytes), errno 119
D (57881) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01
D (57881) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (57891) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (58001) esp.emac: receive len= 60
D (58051) esp.emac: receive len= 65
D (58051) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (58051) port.utils: Enqueue data, length=11, TID=0x7
D (58051) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (58061) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (58071) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (58081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (58091) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (58091) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0007 received.
D (58101) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (58111) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc1088.
D (58121) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 236018.
D (58131) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (58131) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 33 33
D (58141) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (58141) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (58151) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (58151) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (58161) mbm_error_cb_request_success: 03 00 02 00 01
D (58161) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 321406
D (58181) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (58181) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (58201) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (58201) TEST_COMMON: CHAR #2, value is ok.
D (58201) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (58221) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (58221) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 03 00 01
D (58221) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (58231) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (58231) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (58241) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (58251) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (58261) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001d, 12 (bytes), errno 119
D (58271) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01
D (58281) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (58281) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (58331) esp.emac: receive len= 120
D (58471) esp.emac: receive len= 65
D (58471) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (58471) port.utils: Enqueue data, length=11, TID=0x1d
D (58471) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (58481) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (58491) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (58501) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (58501) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (58511) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x001d received.
D (58521) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (58521) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001d:0x001e, 0x3ffc1088.
D (58531) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 261285.
D (58541) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (58551) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 44 44
D (58551) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (58561) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (58561) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (58571) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (58571) mbm_error_cb_request_success: 03 00 03 00 01
D (58581) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 347759
D (58601) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (58601) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (58601) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (58621) TEST_COMMON: CHAR #3, value is ok.
D (58621) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (58621) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (58631) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 06
D (58641) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (58651) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (58651) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (58661) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (58671) esp.emac: receive len= 60
D (58671) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (58681) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001e, 15 (bytes), errno 119
D (58691) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06
D (58671) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (58701) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (58751) esp.emac: receive len= 60
D (58841) esp.emac: receive len= 66
D (58841) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (58841) port.utils: Enqueue data, length=12, TID=0x1e
D (58851) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (58851) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (58861) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (58871) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (58881) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (58881) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x001e received.
D (58891) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (58901) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001e:0x001f, 0x3ffc1088.
D (58911) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214530.
D (58921) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (58921) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (58931) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (58931) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (58941) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (58941) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (58951) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06
D (58951) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 302156
D (58971) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (58971) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (58991) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (59051) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (59051) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (59051) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (59051) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (59061) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (59071) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (59081) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (59091) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (59101) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001f, 15 (bytes), errno 119
D (59111) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11
D (59111) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (59121) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (59251) esp.emac: receive len= 60
D (59321) esp.emac: receive len= 66
D (59321) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (59321) port.utils: Enqueue data, length=12, TID=0x1f
D (59321) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (59331) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (59331) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (59341) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (59351) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (59361) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x001f received.
D (59361) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (59371) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001f:0x0020, 0x3ffc1088.
D (59381) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 273338.
D (59391) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (59401) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 00 00 01
D (59401) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (59411) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (59411) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (59421) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (59421) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (59431) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 362609
D (59431) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (59451) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (59451) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (59471) TEST_COMMON: CHAR #0, value is ok.
D (59471) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (59471) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (59491) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (59491) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (59491) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (59501) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (59511) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (59521) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (59531) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0020, 15 (bytes), errno 119
D (59541) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22
D (59541) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (59551) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (59691) esp.emac: receive len= 66
D (59691) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (59691) port.utils: Enqueue data, length=12, TID=0x20
D (59691) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (59701) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (59701) esp.emac: receive len= 60
D (59711) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (59721) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (59731) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (59731) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0020 received.
D (59741) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (59741) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0020:0x0021, 0x3ffc1088.
D (59751) esp.emac: receive len= 119
D (59761) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 223335.
D (59771) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (59781) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 01 00 01
D (59781) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (59781) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (59791) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (59791) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (59801) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (59811) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 304604
D (59821) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (59821) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (59831) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (59851) TEST_COMMON: CHAR #1, value is ok.
D (59851) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (59851) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (59871) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (59871) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 15
D (59871) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (59881) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (59891) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (59891) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (59901) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119
D (59911) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (59921) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (59931) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (60001) esp.emac: receive len= 60
D (60091) esp.emac: receive len= 66
D (60091) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (60091) port.utils: Enqueue data, length=12, TID=0x8
D (60091) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (60101) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (60111) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (60121) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (60121) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (60131) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0008 received.
D (60141) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (60141) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc1088.
D (60151) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 237125.
D (60161) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (60171) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 02 00 01
D (60171) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (60181) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (60181) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (60191) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (60191) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (60201) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 317941
D (60221) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (60221) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (60221) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (60231) TEST_COMMON: CHAR #2, value is ok.
D (60251) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (60251) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (60251) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (60261) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (60271) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (60271) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (60281) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (60291) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (60301) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0021, 15 (bytes), errno 119
D (60311) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44
D (60311) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (60321) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (60501) esp.emac: receive len= 66
D (60501) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (60501) port.utils: Enqueue data, length=12, TID=0x21
D (60501) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (60511) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (60511) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (60521) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (60531) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (60541) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0021 received.
D (60541) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (60551) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0021:0x0022, 0x3ffc1088.
D (60561) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 251343.
D (60571) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (60581) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 03 00 01
D (60581) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (60591) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (60591) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (60601) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (60601) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (60611) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 340609
D (60621) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (60621) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (60631) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (60651) TEST_COMMON: CHAR #3, value is ok.
D (60651) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (60651) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (60671) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 07
D (60671) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (60671) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (60681) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (60691) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (60701) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (60711) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0022, 15 (bytes), errno 119
D (60721) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07
D (60721) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (60731) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (60731) esp.emac: receive len= 60
D (60751) esp.emac: receive len= 60
D (60871) esp.emac: receive len= 66
D (60871) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (60871) port.utils: Enqueue data, length=12, TID=0x22
D (60871) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (60881) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (60891) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (60901) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (60901) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (60911) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0022 received.
D (60921) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (60921) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0022:0x0023, 0x3ffc1088.
D (60931) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 217828.
D (60941) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (60951) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (60951) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (60961) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (60961) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (60971) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (60981) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07
D (60981) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 299559
D (61001) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (61001) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (61021) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (61081) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (61081) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (61081) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 00 00 01
D (61081) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (61091) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (61101) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (61111) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (61111) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (61131) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0023, 12 (bytes), errno 119
D (61141) SENT: 00 23 00 00 00 06 01 03 00 00 00 01
D (61141) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (61151) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (61251) esp.emac: receive len= 60
D (61341) esp.emac: receive len= 65
D (61351) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (61351) port.utils: Enqueue data, length=11, TID=0x23
D (61351) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (61361) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (61361) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (61371) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (61381) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (61391) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0023 received.
D (61391) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (61401) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0023:0x0024, 0x3ffc1088.
D (61411) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 273124.
D (61421) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (61421) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 11 11
D (61431) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (61431) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (61441) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (61441) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (61451) mbm_error_cb_request_success: 03 00 00 00 01
D (61461) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 361374
D (61471) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (61471) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (61491) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (61491) TEST_COMMON: CHAR #0, value is ok.
D (61491) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (61511) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (61511) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 01 00 01
D (61511) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (61521) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (61531) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (61541) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (61541) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (61551) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0024, 12 (bytes), errno 119
D (61561) SENT: 00 24 00 00 00 06 01 03 00 01 00 01
D (61571) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (61571) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (61711) esp.emac: receive len= 65
D (61711) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (61721) port.utils: Enqueue data, length=11, TID=0x24
D (61721) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (61721) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (61731) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (61741) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (61751) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (61751) esp.emac: receive len= 119
D (61751) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0024 received.
D (61761) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (61771) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0024:0x0025, 0x3ffc1088.
D (61781) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 216542.
D (61791) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (61801) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 22 22
D (61801) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (61811) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (61811) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (61821) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (61821) mbm_error_cb_request_success: 03 00 01 00 01
D (61831) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 304779
D (61831) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (61851) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (61851) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (61871) TEST_COMMON: CHAR #1, value is ok.
D (61871) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (61871) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (61891) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 02 00 01
D (61891) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 12
D (61891) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (61901) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (61911) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (61911) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (61931) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0009, 12 (bytes), errno 119
D (61931) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01
D (61941) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (61951) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (62001) esp.emac: receive len= 60
D (62111) esp.emac: receive len= 65
D (62111) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (62111) port.utils: Enqueue data, length=11, TID=0x9
D (62111) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (62121) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (62121) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (62131) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (62141) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (62151) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0009 received.
D (62161) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (62161) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc1088.
D (62171) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 236019.
D (62181) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (62191) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 33 33
D (62191) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (62201) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (62201) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (62211) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (62211) mbm_error_cb_request_success: 03 00 02 00 01
D (62221) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 316715
D (62231) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (62231) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (62241) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (62261) TEST_COMMON: CHAR #2, value is ok.
D (62261) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (62261) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (62281) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 03 00 01
D (62281) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (62281) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (62291) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (62301) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (62311) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (62321) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0025, 12 (bytes), errno 119
D (62331) SENT: 00 25 00 00 00 06 01 03 00 03 00 01
D (62331) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (62341) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (62501) esp.emac: receive len= 60
D (62511) esp.emac: receive len= 65
D (62521) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (62521) port.utils: Enqueue data, length=11, TID=0x25
D (62521) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (62531) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (62531) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (62541) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (62551) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (62561) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0025 received.
D (62561) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (62571) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0025:0x0026, 0x3ffc1088.
D (62581) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 252060.
D (62591) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (62591) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 44 44
D (62601) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (62601) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (62611) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (62611) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (62621) mbm_error_cb_request_success: 03 00 03 00 01
D (62621) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 333886
D (62631) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (62651) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (62651) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (62671) TEST_COMMON: CHAR #3, value is ok.
D (62671) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (62671) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (62691) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 08
D (62691) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (62691) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (62701) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (62711) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (62711) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (62721) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0026, 15 (bytes), errno 119
D (62731) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08
D (62741) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (62751) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (62751) esp.emac: receive len= 60
D (62881) esp.emac: receive len= 66
D (62891) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (62891) port.utils: Enqueue data, length=12, TID=0x26
D (62891) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (62901) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (62901) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (62911) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (62921) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (62931) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0026 received.
D (62931) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (62941) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0026:0x0027, 0x3ffc1088.
D (62951) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214610.
D (62961) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (62971) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (62971) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (62971) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (62981) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (62981) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (62991) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08
D (63001) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 294677
D (63011) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (63011) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (63031) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (63091) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (63091) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (63091) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (63091) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (63101) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (63111) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (63121) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (63131) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (63141) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0027, 15 (bytes), errno 119
D (63151) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11
D (63151) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (63161) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (63251) esp.emac: receive len= 60
D (63301) esp.emac: receive len= 66
D (63301) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (63301) port.utils: Enqueue data, length=12, TID=0x27
D (63301) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (63311) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (63321) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (63331) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (63331) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (63341) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0027 received.
D (63351) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (63351) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0027:0x0028, 0x3ffc1088.
D (63371) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 219362.
D (63371) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (63381) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 00 00 01
D (63391) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (63391) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (63401) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (63401) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (63411) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (63411) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 308648
D (63431) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (63431) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (63441) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (63451) esp.emac: receive len= 60
I (63471) TEST_COMMON: CHAR #0, value is ok.
D (63471) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (63471) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (63471) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (63481) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (63491) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (63491) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (63501) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (63511) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (63521) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0028, 15 (bytes), errno 119
D (63531) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22
D (63531) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (63541) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (63711) esp.emac: receive len= 66
D (63711) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (63711) port.utils: Enqueue data, length=12, TID=0x28
D (63711) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (63721) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (63731) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (63741) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (63741) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (63751) esp.emac: receive len= 119
D (63751) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0028 received.
D (63761) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (63771) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0028:0x0029, 0x3ffc1088.
D (63781) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 247086.
D (63791) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (63791) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 01 00 01
D (63801) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (63801) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (63811) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (63811) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (63821) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (63821) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 336372
D (63831) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (63851) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (63851) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (63871) TEST_COMMON: CHAR #1, value is ok.
D (63871) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (63871) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (63871) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (63881) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 15
D (63891) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (63901) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (63911) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (63911) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (63921) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119
D (63931) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (63941) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (63941) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (63971) esp.emac: receive len= 60
D (64001) esp.emac: receive len= 60
D (64121) esp.emac: receive len= 66
D (64121) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (64121) port.utils: Enqueue data, length=12, TID=0xa
D (64121) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (64131) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (64131) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (64141) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (64151) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (64161) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000a received.
D (64161) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (64171) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc1088.
D (64181) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 246201.
D (64191) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (64201) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 02 00 01
D (64201) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (64201) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (64211) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (64221) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (64221) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (64231) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 335491
D (64231) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (64251) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (64251) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (64271) TEST_COMMON: CHAR #2, value is ok.
D (64271) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (64271) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (64291) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (64291) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (64291) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (64301) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (64311) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (64321) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (64331) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0029, 15 (bytes), errno 119
D (64341) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44
D (64341) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (64351) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (64501) esp.emac: receive len= 60
D (64511) esp.emac: receive len= 66
D (64511) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (64511) port.utils: Enqueue data, length=12, TID=0x29
D (64511) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (64521) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (64531) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (64541) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (64541) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (64551) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x0029 received.
D (64561) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (64561) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0029:0x002a, 0x3ffc1088.
D (64571) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 239047.
D (64581) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (64591) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 03 00 01
D (64601) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (64601) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (64611) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (64611) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (64621) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (64621) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 320914
D (64631) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (64651) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (64651) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (64671) TEST_COMMON: CHAR #3, value is ok.
D (64671) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (64671) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (64671) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 09
D (64681) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (64691) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (64691) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (64701) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (64711) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (64721) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002a, 15 (bytes), errno 119
D (64731) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09
D (64741) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (64741) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (64751) esp.emac: receive len= 60
D (64881) esp.emac: receive len= 66
D (64881) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (64881) port.utils: Enqueue data, length=12, TID=0x2a
D (64881) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (64891) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (64901) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (64911) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (64911) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (64921) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x002a received.
D (64931) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (64931) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002a:0x002b, 0x3ffc1088.
D (64951) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 214524.
D (64951) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (64961) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (64971) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (64971) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (64981) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (64981) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (64991) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09
D (64991) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 303814
D (65011) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (65011) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (65031) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (65091) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (65091) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (65091) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 00 00 01
D (65091) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (65101) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (65111) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (65121) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (65121) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (65141) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002b, 12 (bytes), errno 119
D (65151) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01
D (65151) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (65161) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (65251) esp.emac: receive len= 60
D (65351) esp.emac: receive len= 65
D (65361) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (65361) port.utils: Enqueue data, length=11, TID=0x2b
D (65361) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (65371) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (65371) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (65381) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (65391) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (65401) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x002b received.
D (65401) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (65411) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002b:0x002c, 0x3ffc1088.
D (65421) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 273186.
D (65431) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (65431) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 11 11
D (65441) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (65441) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (65451) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (65451) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (65461) mbm_error_cb_request_success: 03 00 00 00 01
D (65471) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 361427
D (65481) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (65481) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (65501) TEST_COMMON: 0x3ffbf9e8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (65501) TEST_COMMON: CHAR #0, value is ok.
D (65501) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (65521) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (65521) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 01 00 01
D (65521) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (65531) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (65541) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (65551) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (65551) esp.emac: receive len= 60
D (65551) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (65571) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002c, 12 (bytes), errno 119
D (65581) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01
D (65551) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (65591) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (65731) esp.emac: receive len= 65
D (65731) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (65731) port.utils: Enqueue data, length=11, TID=0x2c
D (65731) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (65741) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (65741) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (65751) esp.emac: receive len= 119
D (65751) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (65761) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (65771) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x002c received.
D (65781) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (65781) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002c:0x002d, 0x3ffc1088.
D (65791) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 216728.
D (65801) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (65811) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 22 22
D (65811) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (65821) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (65821) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (65831) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (65841) mbm_error_cb_request_success: 03 00 01 00 01
D (65841) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 308165
D (65861) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (65861) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (65861) TEST_COMMON: 0x3ffbf9e8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (65881) TEST_COMMON: CHAR #1, value is ok.
D (65881) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (65881) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (65901) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 02 00 01
D (65901) mb_port.tcp.master: 0x3ffc11f4,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0eb3, len: 12
D (65911) mb_driver: 0x3ffc11f4, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (65911) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (65921) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 1
D (65931) mb_port.tcp.master: 0x3ffc11f4, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (65941) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119
D (65951) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01
D (65951) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (65961) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (66001) esp.emac: receive len= 60
D (66101) esp.emac: receive len= 65
D (66101) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (66101) port.utils: Enqueue data, length=11, TID=0xb
D (66111) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), frame received.
D (66111) mb_driver: 0x3ffc11f4, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (66121) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (66131) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 1
D (66141) mb_port.tcp.master: 0x3ffc11f4, slave #1(55) [192.168.34.175], receive data ready.
D (66141) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x000b received.
D (66151) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (66161) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc1088.
D (66171) mb_port.tcp.master: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), processing time[us] = 217852.
D (66181) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (66181) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 33 33
D (66191) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (66191) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (66201) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (66201) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (66211) mbm_error_cb_request_success: 03 00 02 00 01
D (66211) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 301975
D (66231) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (66231) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (66241) TEST_COMMON: 0x3ffbf9e8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (66261) TEST_COMMON: CHAR #2, value is ok.
D (66261) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (66261) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (66261) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 03 00 03 00 01
D (66271) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 12
D (66281) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (66281) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (66291) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (66301) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (66311) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002d, 12 (bytes), errno 119
D (66321) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01
D (66331) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (66331) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (66481) esp.emac: receive len= 65
D (66481) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (66481) port.utils: Enqueue data, length=11, TID=0x2d
D (66481) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (66491) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (66491) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (66501) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (66511) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (66521) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x002d received.
D (66521) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (66531) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002d:0x002e, 0x3ffc1088.
D (66541) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 218018.
D (66551) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (66561) mbm_tcp#0x3ffbf9e8:MB_RECV: 03 02 44 44
D (66561) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (66561) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (66571) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (66581) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (66581) mbm_error_cb_request_success: 03 00 03 00 01
D (66591) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 306267
D (66601) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (66601) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (66621) TEST_COMMON: 0x3ffbf9e8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (66621) TEST_COMMON: CHAR #3, value is ok.
D (66621) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (66631) mb_port.event: mbm_tcp#0x3ffbf9e8, mb take resource, (300 ticks).
D (66651) mbm_tcp#0x3ffbf9e8:MB_TRANSMIT: 10 00 04 00 01 02 00 0a
D (66651) mb_port.tcp.master: 0x3ffc11f4,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0eb3, len: 15
D (66651) mb_driver: 0x3ffc11f4, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (66661) event: running post loop:0x3ffc11f4:16 with handler 0x40124fe0 and context 0x3ffc3000 on loop 0x3ffc15c0
D (66671) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_send_data: fd: 0
D (66671) mb_port.tcp.master: 0x3ffc11f4, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (66691) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002e, 15 (bytes), errno 119
D (66701) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a
D (66701) mb_port.timer: mbm_tcp#0x3ffbf9e8, respond enable timeout (3000).
D (66711) mb_object.master: 0x3ffbf9e8:EV_FRAME_SENT
D (66751) esp.emac: receive len= 60
D (66871) esp.emac: receive len= 66
D (66871) mb_driver: 0x3ffc11f4, socket event active: 40000000000000
D (66871) port.utils: Enqueue data, length=12, TID=0x2e
D (66871) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), frame received.
D (66881) mb_driver: 0x3ffc11f4, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (66891) event: running post loop:0x3ffc11f4:32 with handler 0x401251e4 and context 0x3ffc3030 on loop 0x3ffc15c0
D (66901) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_recv_data: fd: 0
D (66901) mb_port.tcp.master: 0x3ffc11f4, slave #0(54) [192.168.34.175], receive data ready.
D (66911) mb_port.tcp.master: 0x3ffc11f4, packet TID: 0x002e received.
D (66921) mb_object.master: 0x3ffbf9e8:EV_FRAME_RECEIVED
D (66921) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002e:0x002f, 0x3ffc1088.
D (66931) mb_port.tcp.master: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), processing time[us] = 237308.
D (66941) mb_object.master: 0x3ffbf9e8, frame data received successfully, (0).
D (66951) mbm_tcp#0x3ffbf9e8:MB_RECV: 10 00 04 00 01
D (66951) mb_object.master: 0x3ffbf9e8:EV_EXECUTE
D (66961) mb_object.master: 0x3ffbf9e8, set event EV_ERROR_OK
D (66961) mb_object.master: 0x3ffbf9e8:EV_ERROR_PROCESS
D (66971) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (66971) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a
D (66981) mb_object.master: 0x3ffbf9e8, transaction processing time(us) = 318556
D (67001) mb_port.event: mbm_tcp#0x3ffbf9e8, mb_port_event_wait_req_finish: returned event = 0x400
D (67001) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (67001) TEST_COMMON: 0x3ffbf9e8, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
D (67011) esp.emac: receive len= 60
D (67021) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
D (67021) port.utils: Socket (#55)(192.168.34.175), fail to read modbus header. ret=0
E (67031) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), critical error=-6, errno=128.
D (67041) mb_driver: 0x3ffc11f4, socket event active: 80000000000000
E (67051) port.utils: socket(#55)(192.168.34.175) connection closed, ret=-1, errno=128.
E (67051) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), connection lost.
D (67061) mb_driver: 0x3ffc11f4, fd event get: 0x40:1, |MB_EVENT_ERROR
D (67071) event: running post loop:0x3ffc11f4:64 with handler 0x40124d84 and context 0x3ffc2fd0 on loop 0x3ffc15c0
D (67111) esp.emac: receive len= 60
D (67131) mb_driver: 0x3ffc11f4, socket event active: c0000000000000
D (67131) port.utils: Socket (#54)(192.168.34.175), fail to read modbus header. ret=0
E (67131) mb_driver: 0x3ffc11f4, node #0, socket(#54)(192.168.34.175), critical error=-6, errno=128.
E (67141) port.utils: socket(#55)(192.168.34.175) connection closed, ret=-1, errno=128.
E (67151) mb_driver: 0x3ffc11f4, node #1, socket(#55)(192.168.34.175), connection lost.
D (67151) mb_driver: 0x3ffc11f4, fd event get: 0x40:1, |MB_EVENT_ERROR
D (67161) event: running post loop:0x3ffc11f4:64 with handler 0x40124d84 and context 0x3ffc2fd0 on loop 0x3ffc15c0
I (67181) TEST_COMMON: Destroy master, inst: 0x3ffbf9e8.
D (67181) mbc_tcp.master: mb stack is active, try to disable.
D (67181) event: running post loop:0x3ffc11f4:128 with handler 0x401252f8 and context 0x3ffc30cc on loop 0x3ffc15c0
D (67191) mb_port.tcp.master: loop:0x3ffc11f4  mbm_on_close, fd: -1
D (67201) esp.emac: receive len= 60
D (67201) esp.emac: receive len= 60
D (67211) mb_port.timer: mbm_tcp#0x3ffbf9e8, timer stop, returns 259.
D (67211) mb_port.tcp.master: 0x3ffc11f4, event handler 0x3ffc3184, unregister.
D (67231) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x1, unregister.
D (67231) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x2, unregister.
D (67231) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x4, unregister.
D (67241) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x8, unregister.
D (67241) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x40, unregister.
D (67251) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x10, unregister.
D (67261) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x20, unregister.
D (67271) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x80, unregister.
D (67271) mb_driver: 0x3ffc11f4, event handler 0x3ffc3184, event 0x100, unregister.
D (67251) mb_driver: 0x3ffc11f4, fd event get: 0x80:-1, |MB_EVENT_CLOSE
D (67301) esp_netif_lwip: check: local, if=0x3ffb8f40 fn=0x4010c32c
D (67301) esp_netif_lwip: check: local, if=0x3ffb8f40 fn=0x4010c32c
D (67301) esp_netif_lwip: check: local, if=0x3ffb8f40 fn=0x4010c32c
D (67311) esp_netif_lwip: check: local, if=0x3ffb8f40 fn=0x4010c32c
D (67311) mb_driver: 0x3ffc11f4, driver unregister.
D (67551) mb_driver: 0x3ffc11f4, driver check shutdown (18)...
D (67551) mb_driver: 0x3ffc11f4, driver task shutdown...
D (67551) mb_driver: delete loop inst: loop:0x3ffc11f4.
D (67551) event: deleting loop 0x3ffc15c0
D (67551) mb_driver: delete event loop: 0x3ffc15c0.
D (67561) mb_driver: close eventfd (4).
D (67561) mb_driver: 0x3ffc11f4, close node instance #0(mb_slave_tcp_01).
D (67571) port.utils: wrong socket info or disconnected socket: 0, skip.
D (67571) mb_driver: 0x3ffc11f4, close node instance #1(mb_slave_tcp_c8).
D (67581) port.utils: wrong socket info or disconnected socket: 1, skip.
I (67601) TEST_COMMON: Test task 0x3ffc58f8, done successfully.
D (67611) TEST_COMMON: Delete task 0x3ffc58f8
MALLOC_CAP_8BIT usage: Free memory delta: 5340 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 5340 Leak threshold: -64 
D (67611) esp_netif_lwip: check: remote, if=0x3ffb6860 fn=0x4010c1a8
D (67621) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (67621) esp.emac: emac stopped
D (67631) event: running post ETH_EVENT:3 with handler 0x400eb25c and context 0x3ffbf760 on loop 0x3ffb92c8
D (67641) esp_eth.netif.netif_glue: eth_action_disconnected: 0x3ffbf69c, 0x3f409c4c, 3, 0x3ffb8208, 0x3ffbf61c
D (67651) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbb670 from event_id=3
D (67651) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010d010
D (67661) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbb670
D (67671) esp_eth: Ethernet link is not up, can't transmit
D (67671) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb6fc
D (67681) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb670
D (67681) esp_netif_lwip: if0x3ffbb670 start ip lost tmr: already started
D (67691) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb670
D (67701) esp_netif_lwip: if0x3ffbb670 start ip lost tmr: already started
D (67701) esp_netif_lwip: check: local, if=0x3ffbb670 fn=0x4010d40c
D (67711) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb670
D (67721) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (67721) event: running post ETH_EVENT:1 with handler 0x400eb2ec and context 0x3ffbf700 on loop 0x3ffb92c8
D (67731) esp_eth.netif.netif_glue: eth_action_stop: 0x3ffbf69c, 0x3f409c4c, 1, 0x3ffba3e0, 0x3ffbf61c
D (67741) esp_netif_handlers: esp_netif action stopped with netif0x3ffbb670 from event_id=1
D (67751) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010cf30
D (67751) esp_netif_lwip: call api in lwip: ret=0x5002, give sem
I (67761) gpio: GPIO[0]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67771) gpio: GPIO[18]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67781) gpio: GPIO[19]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67791) gpio: GPIO[21]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67791) gpio: GPIO[22]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67801) gpio: GPIO[23]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67811) gpio: GPIO[25]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67821) gpio: GPIO[26]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
I (67831) gpio: GPIO[27]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 
D (67841) esp_netif_lwip: check: remote, if=0x3ffbb670 fn=0x4010caf8
D (67841) esp_netif_objects: esp_netif_remove_from_list_unsafe netif successfully removed (total netifs: 0)
D (67851) esp_netif_lwip: check: local, if=0x3ffbb670 fn=0x4010d40c
D (67861) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb670
D (67861) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (67871) event: deleting loop 0x3ffb92c8
I (67871) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 13252ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
