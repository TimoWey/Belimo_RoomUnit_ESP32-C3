Serial port /dev/ttyUSB1
Connecting.....
Connecting....
esptool.py v4.8.1
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x00097fff...
SHA digest in image updated
Compressed 26720 bytes to 16357...
Writing at 0x00001000... (100 %)Wrote 26720 bytes (16357 compressed) at 0x00001000 in 0.8 seconds (effective 284.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 308.2 kbit/s)...
Hash of data verified.
Compressed 554704 bytes to 305380...
Writing at 0x00010000... (5 %)Writing at 0x0001e7ad... (10 %)Writing at 0x0002c647... (15 %)Writing at 0x00034721... (21 %)Writing at 0x0003a424... (26 %)Writing at 0x00040584... (31 %)Writing at 0x00045f88... (36 %)Writing at 0x0004b901... (42 %)Writing at 0x000513d3... (47 %)Writing at 0x00056d04... (52 %)Writing at 0x0005c9d1... (57 %)Writing at 0x00062764... (63 %)Writing at 0x0006892a... (68 %)Writing at 0x0006ef49... (73 %)Writing at 0x00076425... (78 %)Writing at 0x00080e02... (84 %)Writing at 0x000873b3... (89 %)Writing at 0x0008d24d... (94 %)Writing at 0x00093593... (100 %)Wrote 554704 bytes (305380 compressed) at 0x00010000 in 5.9 seconds (effective 749.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7172
load:0x40078000,len:15540
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.2.3-617-g91baeeb61c 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:21:51[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (40) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (85) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1cc10h (117776) map[0m
[0;32mI (146) esp_image: segment 1: paddr=0002cc38 vaddr=3ffb0000 size=026d0h (  9936) load[0m
[0;32mI (150) esp_image: segment 2: paddr=0002f310 vaddr=40080000 size=00d08h (  3336) load[0m
[0;32mI (153) esp_image: segment 3: paddr=00030020 vaddr=400d0020 size=597b8h (366520) map[0m
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7172
load:0x40078000,len:15540
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.2.3-617-g91baeeb61c 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:21:51[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (40) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (85) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1cc10h (117776) map[0m
[0;32mI (146) esp_image: segment 1: paddr=0002cc38 vaddr=3ffb0000 size=026d0h (  9936) load[0m
[0;32mI (150) esp_image: segment 2: paddr=0002f310 vaddr=40080000 size=00d08h (  3336) load[0m
[0;32mI (153) esp_image: segment 3: paddr=00030020 vaddr=400d0020 size=597b8h (366520) map[0m
[0;32mI (286) esp_image: segment 4: paddr=000897e0 vaddr=40080d08 size=0dec4h ( 57028) load[0m
[0;32mI (316) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (316) boot: Disabling RNG early entropy source...[0m
[0;32mI (327) cpu_start: Multicore app[0m
D (328) cpu_start: Pro cpu up[0m
D (328) cpu_start: Starting app cpu, entry point is 0x400812ac[0m
D (0) cpu_start: App cpu up[0m
D (337) clk: RTC_SLOW_CLK calibration value: 3134963[0m
[0;32mI (349) cpu_start: Pro cpu start user code[0m
[0;32mI (349) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (349) cpu_start: Application information:[0m
[0;32mI (353) cpu_start: Project name:     test_modbus_comm_multi_dev[0m
[0;32mI (360) cpu_start: App version:      v2.0.0-beta-11-g3117942[0m
[0;32mI (366) cpu_start: Compile time:     Dec 20 2024 08:21:43[0m
[0;32mI (372) cpu_start: ELF file SHA256:  4006e6408...[0m
[0;32mI (378) cpu_start: ESP-IDF:          v5.2.3-617-g91baeeb61c[0m
[0;32mI (384) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (389) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (394) cpu_start: Chip rev:         v3.0[0m
D (399) memory_layout: Checking 9 reserved memory ranges:[0m
D (404) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000[0m
D (410) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0[0m
D (417) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb47e0[0m
D (423) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440[0m
D (429) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350[0m
D (436) memory_layout: Reserved memory range 0x40070000 - 0x40078000[0m
D (442) memory_layout: Reserved memory range 0x40078000 - 0x40080000[0m
D (449) memory_layout: Reserved memory range 0x40080000 - 0x4008ebcc[0m
D (455) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000[0m
D (462) memory_layout: Building list of available memory regions:[0m
D (468) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000[0m
D (474) memory_layout: Available memory region 0x3ffb47e0 - 0x3ffb8000[0m
D (481) memory_layout: Available memory region 0x3ffb8000 - 0x3ffc0000[0m
D (488) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000[0m
D (494) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000[0m
D (501) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000[0m
D (507) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000[0m
D (514) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000[0m
D (521) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000[0m
D (527) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000[0m
D (534) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000[0m
D (540) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000[0m
D (547) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000[0m
D (554) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000[0m
D (560) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000[0m
D (567) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000[0m
D (573) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000[0m
D (580) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000[0m
D (587) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000[0m
D (593) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20[0m
D (600) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000[0m
D (606) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000[0m
D (613) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000[0m
D (619) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000[0m
D (626) memory_layout: Available memory region 0x3fffc000 - 0x40000000[0m
D (633) memory_layout: Available memory region 0x4008ebcc - 0x40090000[0m
D (639) memory_layout: Available memory region 0x40090000 - 0x40092000[0m
D (646) memory_layout: Available memory region 0x40092000 - 0x40094000[0m
D (652) memory_layout: Available memory region 0x40094000 - 0x40096000[0m
D (659) memory_layout: Available memory region 0x40096000 - 0x40098000[0m
D (666) memory_layout: Available memory region 0x40098000 - 0x4009a000[0m
D (672) memory_layout: Available memory region 0x4009a000 - 0x4009c000[0m
D (679) memory_layout: Available memory region 0x4009c000 - 0x4009e000[0m
D (685) memory_layout: Available memory region 0x4009e000 - 0x400a0000[0m
[0;32mI (692) heap_init: Initializing. RAM available for dynamic allocation:[0m
D (699) heap_init: New heap initialised at 0x3ffae6e0[0m
[0;32mI (704) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
D (711) heap_init: New heap initialised at 0x3ffb47e0[0m
[0;32mI (716) heap_init: At 3FFB47E0 len 0002B820 (174 KiB): DRAM[0m
[0;32mI (722) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (728) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
D (735) heap_init: New heap initialised at 0x4008ebcc[0m
[0;32mI (740) heap_init: At 4008EBCC len 00011434 (69 KiB): IRAM[0m
D (747) intr_alloc: Connected src 46 to int 1 (cpu 0)[0m
D (752) spi_flash: trying chip: issi[0m
D (755) spi_flash: trying chip: gd[0m
D (758) spi_flash: trying chip: mxic[0m
D (762) spi_flash: trying chip: winbond[0m
D (766) spi_flash: trying chip: generic[0m
[0;32mI (770) spi_flash: detected chip: generic[0m
[0;32mI (774) spi_flash: flash io: dio[0m
D (778) cpu_start: calling init function: 0x4010d1a0[0m
D (783) cpu_start: calling init function: 0x40106b64[0m
D (788) cpu_start: calling init function: 0x400eaf98[0m
D (793) cpu_start: calling init function: 0x400d66ac[0m
D (798) cpu_start: calling init function: 0x40086acc[0m
D (803) cpu_start: calling init function: 0x400d3108[0m
D (809) cpu_start: calling init function: 0x400d5e6c on core: 0[0m
D (815) intr_alloc: Connected src 17 to int 2 (cpu 0)[0m
D (820) cpu_start: calling init function: 0x40121700 on core: 0[0m
D (826) intr_alloc: Connected src 24 to int 3 (cpu 0)[0m
D (831) app_start: Starting scheduler on CPU0[0m
[0;32D (835) intr_alloc: Connected src 25 to int 1 (cpu 1)[0m
D (835) app_start: Starting scheduler on CPU1[0m
mI (835) main_task: Started on CPU0[0m
D (855) heap_init: New heap initialised at 0x3ffe0440[0m
D (855) heap_init: New heap initialised at 0x3ffe4350[0m
D (855) intr_alloc: Connected src 16 to int 5 (cpu 0)[0m
[0;32mI (855) main_task: Calling app_main()[0m


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Modbus RS485 multi-device test cases/nD (985) esp_netif_lwip: LwIP stack has been initialized[0m
D (985) esp_netif_lwip: esp-netif has been successfully initialized[0m
D (995) event: running task for loop 0x3ffb9240[0m
D (995) event: created task for loop 0x3ffb9240[0m
D (995) event: created event loop 0x3ffb9240[0m
D (1005) esp_netif_lwip: check: remote, if=0x3ffb66a0 fn=0x40105438[0m
D (1015) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1015) esp_netif_lwip: check: remote, if=0x3ffb66a0 fn=0x40105438[0m
D (1025) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1025) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1035) esp_netif_lwip: check: remote, if=0x3ffb66a0 fn=0x40105438[0m
D (1045) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1045) esp_netif_lwip: check: remote, if=0x3ffb66a0 fn=0x40105438[0m
D (1055) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1055) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1065) esp_netif_lwip: check: remote, if=0x3ffb66a0 fn=0x40105438[0m
D (1075) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1075) esp_netif_lwip: check: remote, if=0x3ffb66a0 fn=0x40105438[0m
D (1085) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1085) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1095) esp_netif_lwip: check: remote, if=0x3ffb6640 fn=0x40105c98[0m
D (1105) esp_netif_objects: esp_netif_add_to_list_unsafe netif added successfully (total netifs: 1)[0m
D (1105) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1115) intr_alloc: Connected src 38 to int 8 (cpu 0)[0m
D (1145) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1145) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1145) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1155) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1155) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1165) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1175) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1195) esp_eth: new ethernet driver @0x3ffbf530[0m
[0;32mI (1195) esp_eth.netif.netif_glue: 10:97:bd:d5:51:f3[0m
D (1195) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x4010544c[0m
D (1195) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (1205) esp_eth.netif.netif_glue: ethernet attached to netif[0m
D (3515) event: running post ETH_EVENT:0 with handler 0x400e63dc and context 0x3ffba36c on loop 0x3ffb9240[0m
D (3515) event: running post ETH_EVENT:0 with handler 0x4010811c and context 0x3ffbf5dc on loop 0x3ffb9240[0m
D (3515) esp_eth.netif.netif_glue: eth_action_start: 0x3ffbf5a8, 0x3f411c00, 0, 0x3ffbf6dc, 0x3ffbf530[0m
D (3525) esp_netif_handlers: esp_netif action has started with netif0x3ffbb5bc from event_id=0[0m
D (3535) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x40105eb4[0m
D (3545) esp_netif_lwip: esp_netif_start_api 0x3ffbb5bc[0m
D (3545) esp.emac: working in 100Mbps[0m
D (3545) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffbb5bc[0m
D (3555) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3565) esp.emac: working in full duplex[0m
D (3565) esp.emac: Flow control not enabled for the link[0m
D (3575) esp.emac: emac started[0m
D (3575) event: running post ETH_EVENT:2 with handler 0x400e63dc and context 0x3ffba36c on loop 0x3ffb9240[0m
D (3585) esp_netif_lwip: check: remote, if=0x3ffb9e70 fn=0x40105438[0m
D (3595) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (3595) ethernet_connect: Waiting for IP(s).[0m
D (3595) event: running post ETH_EVENT:2 with handler 0x40108084 and context 0x3ffbf63c on loop 0x3ffb9240[0m
D (3615) esp_eth.netif.netif_glue: eth_action_connected: 0x3ffbf5a8, 0x3f411c00, 2, 0x3ffbf6dc, 0x3ffbf530[0m
D (3625) esp_netif_handlers: esp_netif action connected with netif0x3ffbb5bc from event_id=2[0m
D (3635) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x40106104[0m
D (3635) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffbb5bc[0m
D (3645) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3645) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x401058e0[0m
D (3655) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffbb5bc[0m
D (3665) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb5bc[0m
D (3675) esp_netif_lwip: if0x3ffbb5bc start ip lost tmr: interval=120[0m
D (3675) esp_netif_lwip: starting dhcp client[0m
D (3685) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3745) esp.emac: receive len= 60[0m
D (3755) esp.emac: receive len= 119[0m
D (3755) esp.emac: receive len= 119[0m
D (5665) esp.emac: receive len= 119[0m
D (6965) esp.emac: receive len= 350[0m
D (7185) esp.emac: receive len= 62[0m
D (7665) esp.emac: receive len= 119[0m
D (7885) esp.emac: receive len= 195[0m
D (7965) esp.emac: receive len= 350[0m
D (7965) esp.emac: receive len= 60[0m
D (8185) esp.emac: receive len= 342[0m
D (8185) esp.emac: receive len= 342[0m
D (8465) esp.emac: receive len= 60[0m
D (8615) esp.emac: receive len= 60[0m
D (9035) esp.emac: receive len= 60[0m
D (9185) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb644[0m
D (9185) esp_netif_lwip: check: local, if=0x3ffbb5bc fn=0x40106510[0m
D (9185) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb5bc[0m
D (9185) esp_netif_lwip: if0x3ffbb5bc ip changed=1[0m
D (9195) event: running post IP_EVENT:4 with handler 0x400e63dc and context 0x3ffba338 on loop 0x3ffb9240[0m
D (9205) event: running post IP_EVENT:4 with handler 0x4010800c and context 0x3ffbf69c on loop 0x3ffb9240[0m
D (9215) esp_eth.netif.netif_glue: eth_action_got_ip: 0x3ffbf5a8, 0x3f410ea0, 4, 0x3ffbf7d4, 0x3ffbb5bc[0m
D (9225) esp_netif_handlers: esp_netif action got_ip with netif0x3ffbb5bc from event_id=4[0m
[0;32mI (9235) esp_netif_handlers: example_netif_eth ip: 192.168.34.122, mask: 255.255.254.0, gw: 192.168.34.252[0m
D (9245) event: running post IP_EVENT:4 with handler 0x400e8c54 and context 0x3ffbf6bc on loop 0x3ffb9240[0m
[0;32mI (9255) ethernet_connect: Got IPv4 event: Interface "example_netif_eth" address: 192.168.34.122[0m
D (9265) esp_netif_lwip: check: remote, if=0x400e8aa4 fn=0x40122a5c[0m
[0;32mI (9265) example_common: Connected to example_netif_eth[0m
D (9275) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
[0;32mI (9275) example_common: - IPv4 address: 192.168.34.122,[0m
D (9285) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (9295) esp_netif_lwip: check: local, if=0x3ffb8ec0 fn=0x40105438[0m
D (9295) esp_netif_lwip: check: remote, if=0x3ffb6710 fn=0x401052b8[0m
D (9305) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (9305) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).[0m
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.
D (9645) esp.emac: receive len= 70[0m
D (9645) esp.emac: receive len= 60[0m
D (9665) esp.emac: receive len= 119[0m
D (10435) esp.emac: receive len= 60[0m
D (10635) esp.emac: receive len= 60[0m
D (11635) esp.emac: receive len= 60[0m
D (11665) esp.emac: receive len= 119[0m
D (12255) esp.emac: receive len= 60[0m
D (13665) esp.emac: receive len= 119[0m
[0;31mE (14175) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (14175) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (14175) task_wdt: Tasks currently running:[0m
[0;31mE (14175) task_wdt: CPU 0: main[0m
[0;31mE (14175) task_wdt: CPU 1: IDLE1[0m
[0;31mE (14175) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EB3C7:0x3FFB0FE0 0x400EB78C:0x3FFB1000 0x400836A1:0x3FFB1030 0x400D7BB0:0x3FFB66E0 0x400D7C9A:0x3FFB6710 0x400D72EB:0x3FFB6740 0x400D7319:0x3FFB6770 0x400D64E5:0x3FFB6790 0x400D76C2:0x3FFB67F0 0x400D784D:0x3FFB6820 0x400D78CA:0x3FFB6940 0x400D797A:0x3FFB6960 0x400D79AD:0x3FFB6980 0x400D7B5A:0x3FFB69A0 0x400D62B1:0x3FFB6AC0 0x40126B2F:0x3FFB6AE0 0x40087A4D:0x3FFB6B10

D (15665) esp.emac: receive len= 119[0m
D (17665) esp.emac: receive len= 119[0m
[0;31mE (19175) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (19175) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (19175) task_wdt: Tasks currently running:[0m
[0;31mE (19175) task_wdt: CPU 0: main[0m
[0;31mE (19175) task_wdt: CPU 1: IDLE1[0m
[0;31mE (19175) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EB3C7:0x3FFB0FE0 0x400EB78C:0x3FFB1000 0x400836A1:0x3FFB1030 0x400D7BB0:0x3FFB66E0 0x400D7C9A:0x3FFB6710 0x400D72EB:0x3FFB6740 0x400D7319:0x3FFB6770 0x400D64E5:0x3FFB6790 0x400D76C2:0x3FFB67F0 0x400D784D:0x3FFB6820 0x400D78CA:0x3FFB6940 0x400D797A:0x3FFB6960 0x400D79AD:0x3FFB6980 0x400D7B5A:0x3FFB69A0 0x400D62B1:0x3FFB6AC0 0x40126B2F:0x3FFB6AE0 0x40087A4D:0x3FFB6B10

D (19665) esp.emac: receive len= 119[0m
D (21665) esp.emac: receive len= 119[0m
D (23665) esp.emac: receive len= 119[0m
[0;31mE (24175) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (24175) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (24175) task_wdt: Tasks currently running:[0m
[0;31mE (24175) task_wdt: CPU 0: main[0m
[0;31mE (24175) task_wdt: CPU 1: IDLE1[0m
[0;31mE (24175) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EB3C7:0x3FFB0FE0 0x400EB78C:0x3FFB1000 0x400836A1:0x3FFB1030 0x400092F5:0x3FFB66C0 0x400D7BB0:0x3FFB66E0 0x400D7C9A:0x3FFB6710 0x400D72EB:0x3FFB6740 0x400D7319:0x3FFB6770 0x400D64E5:0x3FFB6790 0x400D76C2:0x3FFB67F0 0x400D784D:0x3FFB6820 0x400D78CA:0x3FFB6940 0x400D797A:0x3FFB6960 0x400D79AD:0x3FFB6980 0x400D7B5A:0x3FFB69A0 0x400D62B1:0x3FFB6AC0 0x40126B2F:0x3FFB6AE0 0x40087A4D:0x3FFB6B10

D (25665) esp.emac: receive len= 119[0m
D (27665) esp.emac: receive len= 119[0m
[0;31mE (29175) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (29175) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (29175) task_wdt: Tasks currently running:[0m
[0;31mE (29175) task_wdt: CPU 0: main[0m
[0;31mE (29175) task_wdt: CPU 1: IDLE1[0m
[0;31mE (29175) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EB3C7:0x3FFB0FE0 0x400EB78C:0x3FFB1000 0x400836A1:0x3FFB1030 0x400D7BB0:0x3FFB66E0 0x400D7C9A:0x3FFB6710 0x400D72EB:0x3FFB6740 0x400D7319:0x3FFB6770 0x400D64E5:0x3FFB6790 0x400D76C2:0x3FFB67F0 0x400D784D:0x3FFB6820 0x400D78CA:0x3FFB6940 0x400D797A:0x3FFB6960 0x400D79AD:0x3FFB6980 0x400D7B5A:0x3FFB69A0 0x400D62B1:0x3FFB6AC0 0x40126B2F:0x3FFB6AE0 0x40087A4D:0x3FFB6B10

D (29665) esp.emac: receive len= 119[0m
D (31095) esp.emac: receive len= 350[0m
D (31095) esp.emac: receive len= 350[0m
D (31095) esp.emac: receive len= 60[0m
D (31595) esp.emac: receive len= 60[0m
D (31665) esp.emac: receive len= 119[0m
D (31745) esp.emac: receive len= 60[0m
D (32235) esp.emac: receive len= 60[0m
D (32435) esp.emac: receive len= 337[0m
D (32745) esp.emac: receive len= 60[0m
D (33285) esp.emac: receive len= 60[0m
D (33425) esp.emac: receive len= 60[0m
D (33665) esp.emac: receive len= 119[0m
D (33745) esp.emac: receive len= 60[0m
[0;31mE (34175) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (34175) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (34175) task_wdt: Tasks currently running:[0m
[0;31mE (34175) task_wdt: CPU 0: main[0m
[0;31mE (34175) task_wdt: CPU 1: IDLE1[0m
[0;31mE (34175) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EB3C7:0x3FFB0FE0 0x400EB78C:0x3FFB1000 0x400836A1:0x3FFB1030 0x400092D3:0x3FFB66C0 0x400D7BB0:0x3FFB66E0 0x400D7C9A:0x3FFB6710 0x400D72EB:0x3FFB6740 0x400D7319:0x3FFB6770 0x400D64E5:0x3FFB6790 0x400D76C2:0x3FFB67F0 0x400D784D:0x3FFB6820 0x400D78CA:0x3FFB6940 0x400D797A:0x3FFB6960 0x400D79AD:0x3FFB6980 0x400D7B5A:0x3FFB69A0 0x400D62B1:0x3FFB6AC0 0x40126B2F:0x3FFB6AE0 0x40087A4D:0x3FFB6B10

D (34745) esp.emac: receive len= 60[0m
D (35665) esp.emac: receive len= 119[0m
D (37665) esp.emac: receive len= 119[0m
D (39165) esp.emac: receive len= 350[0m
[0;31mE (39175) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (39175) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (39175) task_wdt: Tasks currently running:[0m
[0;31mE (39175) task_wdt: CPU 0: main[0m
[0;31mE (39175) task_wdt: CPU 1: IDLE1[0m
[0;31mE (39175) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EB3C7:0x3FFB0FE0 0x400EB78C:0x3FFB1000 0x400836A1:0x3FFB1030 0x400092E1:0x3FFB66C0 0x400D7BB0:0x3FFB66E0 0x400D7C9A:0x3FFB6710 0x400D72EB:0x3FFB6740 0x400D7319:0x3FFB6770 0x400D64E5:0x3FFB6790 0x400D76C2:0x3FFB67F0 0x400D784D:0x3FFB6820 0x400D78CA:0x3FFB6940 0x400D797A:0x3FFB6960 0x400D79AD:0x3FFB6980 0x400D7B5A:0x3FFB69A0 0x400D62B1:0x3FFB6AC0 0x40126B2F:0x3FFB6AE0 0x40087A4D:0x3FFB6B10

D (39295) esp.emac: receive len= 60[0m
D (39665) esp.emac: receive len= 119[0m
D (40175) esp.emac: receive len= 350[0m
D (40175) esp.emac: receive len= 60[0m
D (40335) esp.emac: receive len= 60[0m
D (40665) esp.emac: receive len= 60[0m
D (40875) esp.emac: receive len= 60[0m
D (41165) esp.emac: receive len= 60[0m
D (41385) esp.emac: receive len= 60[0m
D (41665) esp.emac: receive len= 119[0m
D (41795) esp.emac: receive len= 101[0m
D (41795) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (41795) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (41795) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (41875) esp.emac: receive len= 60[0m
D (42105) esp.emac: receive len= 101[0m
D (42105) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42105) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42105) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m

D (42185) event: created event loop 0x3ffc14d8[0m
D (42185) mb_driver: Start of driver task.[0m
D (42395) mb_driver: 0x3ffc10c8, driver check shutdown (8)...[0m
D (42395) mb_driver: 0x3ffc10c8, driver task is suspended...[0m
D (42395) mb_driver: 0x3ffc10c8, stop tcp driver task.[0m
D (42395) esp.emac: receive len= 101[0m
D (42395) mb_driver: 0x3ffc10c8, event 0x1, register.[0m
D (42405) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42405) mb_driver: 0x3ffc10c8, event 0x2, register.[0m
D (42415) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42415) mb_driver: 0x3ffc10c8, event 0x4, register.[0m
D (42425) mb_driver: 0x3ffc10c8, event 0x8, register.[0m
D (42435) mb_driver: 0x3ffc10c8, event 0x40, register.[0m
D (42435) mb_driver: 0x3ffc10c8, event 0x10, register.[0m
D (42445) mb_driver: 0x3ffc10c8, event 0x20, register.[0m
D (42445) mb_driver: 0x3ffc10c8, event 0x80, register.[0m
D (42455) mb_driver: 0x3ffc10c8, event 0x100, register.[0m
D (42455) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4[0m
D (42475) mb_driver: 0x3ffc10c8, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502[0m
D (42475) mb_port.tcp.master: 0x3ffc10c8, open slave: 0, mb_slave_tcp_01:1502[0m
D (42485) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4[0m
D (42495) mb_driver: 0x3ffc10c8, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502[0m
D (42505) mb_port.tcp.master: 0x3ffc10c8, open slave: 1, mb_slave_tcp_c8:502[0m
D (42515) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
[0;32mI (42515) port.utils: hostname set to: [mb_master_tcp_d551f3][0m
D (42525) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
[0;32mI (42535) port.utils: mdns delegate hostname set to: [mb_master_tcp_00][0m
[0;32mI (42535) port.utils: IP: 192.168.34.122[0m
[0;32mI (42545) port.utils: GW: 192.168.34.252[0m
[0;32mI (42545) port.utils: NETMASK: 255.255.254.0[0m
D (42555) mb_port.tcp.master: created object @0x3ffc0f04[0m
D (42555) mb_port.timer: initialized mb_port.timer object @0x3ffc3890[0m
D (42565) mb_port.event: initialized object @0x3ffc38c8[0m
D (42575) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffc0c50[0m
D (42575) mb_object.master: created object mbm_tcp#0x3ffbf8d8[0m
[0;32mI (42585) mbc_tcp.master: mb found config for cid #0, uid=1.[0m
[0;32mI (42585) mbc_tcp.master: mb found config for cid #1, uid=1.[0m
[0;32mI (42595) mbc_tcp.master: mb found config for cid #2, uid=200.[0m
[0;32mI (42605) mbc_tcp.master: mb found config for cid #3, uid=1.[0m
[0;32mI (42605) mbc_tcp.master: mb found config for cid #4, uid=1.[0m
[0;32mI (42615) TEST_COMMON: 0x3ffbf8d8, modbus master stack is initialized[0m
D (42625) mb_driver: 0x3ffc10c8, resume tcp driver task.[0m
D (42625) mb_driver: 0x3ffc10c8, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT[0m
D (42635) event: running post loop:0x3ffc10c8:256 with handler 0x40123cf8 and context 0x3ffc3050 on loop 0x3ffc14d8[0m
D (42645) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_timeout: fd: -1[0m
D (42655) event: running post loop:0x3ffc10c8:2 with handler 0x40123640 and context 0x3ffc2f00 on loop 0x3ffc14d8[0m
D (42665) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_open: fd: 0[0m
D (42665) event: running post loop:0x3ffc10c8:2 with handler 0x40123640 and context 0x3ffc2f00 on loop 0x3ffc14d8[0m
D (42675) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_open: fd: 1[0m
D (42685) mb_port.timer: mbm_tcp#0x3ffbf8d8, start timer (1000000).[0m
D (42695) esp.emac: receive len= 95[0m
D (42695) mb_driver: 0x3ffc10c8, fd event get: 0x04:-1, |MB_EVENT_RESOLVE[0m
D (42695) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42705) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42715) event: running post loop:0x3ffc10c8:4 with handler 0x40123b40 and context 0x3ffc2f30 on loop 0x3ffc14d8[0m
D (42725) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_resolve: fd: -1[0m
D (42735) event: running post loop:0x3ffc10c8:4 with handler 0x40123b40 and context 0x3ffc2f30 on loop 0x3ffc14d8[0m
D (42745) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_resolve: fd: 0[0m
D (42695) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (42755) esp.emac: receive len= 150[0m
D (42755) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (42755) port.utils: Incorrect host IP: mb_slave_tcp_01[0m
D (42775) port.utils: Query A: mb_slave_tcp_01.local[0m
D (42875) esp.emac: receive len= 60[0m
D (42895) esp.emac: receive len= 91[0m
D (42895) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42895) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (42895) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (42905) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.34.175[0m
[0;32mI (42905) mb_port.tcp.master: 0x3ffc10c8, slave: 0, resolved with IP:192.168.34.175.[0m
D (42915) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (42925) event: running post loop:0x3ffc10c8:4 with handler 0x40123b40 and context 0x3ffc2f30 on loop 0x3ffc14d8[0m
D (42935) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_resolve: fd: 1[0m
D (42945) esp.emac: receive len= 150[0m
D (42945) port.utils: Incorrect host IP: mb_slave_tcp_c8[0m
D (42955) port.utils: Query A: mb_slave_tcp_c8.local[0m
D (43095) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (43195) esp.emac: receive len= 91[0m
D (43195) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (43195) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (43195) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (43205) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.34.175[0m
[0;32mI (43215) mb_port.tcp.master: 0x3ffc10c8, slave: 1, resolved with IP:192.168.34.175.[0m
D (43215) mb_driver: 0x3ffc10c8, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (43225) event: running post loop:0x3ffc10c8:8 with handler 0x40123d28 and context 0x3ffc2f60 on loop 0x3ffc14d8[0m
D (43235) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_connect: fd: 0[0m
D (43245) mb_port.tcp.master: 0x3ffc10c8, connection phase, slave: #0(-1) [192.168.34.175].[0m
D (43255) esp.emac: receive len= 60[0m
D (43255) esp.emac: receive len= 60[0m
[0;32mI (43255) mb_port.tcp.master: 0x3ffc10c8, slave: #0, sock:54, IP: 192.168.34.175, is connected.[0m
D (43265) mb_port.tcp.master: Opened/connected: 2, 1.[0m
D (43395) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (43485) mb_driver: 0x3ffc10c8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (43485) event: running post loop:0x3ffc10c8:8 with handler 0x40123d28 and context 0x3ffc2f60 on loop 0x3ffc14d8[0m
D (43485) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_connect: fd: 1[0m
D (43495) mb_port.tcp.master: 0x3ffc10c8, connection phase, slave: #1(-1) [192.168.34.175].[0m
D (43505) esp.emac: receive len= 60[0m
[0;32mI (43505) mb_port.tcp.master: 0x3ffc10c8, slave: #1, sock:55, IP: 192.168.34.175, is connected.[0m
D (43515) mb_port.tcp.master: Opened/connected: 2, 2.[0m
[0;32mI (43525) mbc_tcp.master: mb controller connection done.[0m
[0;32mI (43525) mb_port.tcp.master: 0x3ffc10c8, Connected: 2, 2, start polling.[0m
D (43535) mb_object.master: 0x3ffbf8d8:EV_READY[0m
[0;32mI (43535) TEST_COMMON: 0x3ffbf8d8, modbus master start...[0m
Send signal: [Master_started]!
D (43555) TEST_COMMON: Notify task start 0x3ffc57ec[0m
D (43555) TEST_COMMON: Task: 0x3ffc57ec, get notify value = 1[0m
D (43555) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (43575) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (43575) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (43575) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (43585) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (43595) event: running post loop:0x3ffc10c8:256 with handler 0x40123cf8 and context 0x3ffc3050 on loop 0x3ffc14d8[0m
D (43605) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_timeout: fd: -1[0m
D (43615) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (43625) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (43625) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (43645) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (43655) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (43655) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (43665) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (43665) esp.emac: receive len= 119[0m
D (43695) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (43745) esp.emac: receive len= 60[0m
D (43825) esp.emac: receive len= 66[0m
D (43825) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (43825) port.utils: Enqueue data, length=12, TID=0x0[0m
D (43825) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (43835) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (43845) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (43855) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (43865) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (43875) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0000 received.[0m
D (43875) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (43875) esp.emac: receive len= 60[0m
D (43885) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc0f64.[0m
D (43895) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 246547.[0m
D (43905) esp.emac: receive len= 95[0m
D (43915) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (43915) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (43925) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (43935) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 00 00 01 [0m
D (43935) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (43945) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (43945) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (43955) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (43955) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (43965) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 373359[0m
D (43975) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (43985) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (43985) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
D (43995) esp.emac: receive len= 91[0m
D (43995) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (44005) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (44015) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
[0;32mI (44025) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
D (44025) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (44045) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (44045) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (44045) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (44055) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (44065) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (44075) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (44085) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (44095) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0001, 15 (bytes), errno 119[0m
D (44105) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (44105) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (44115) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (44245) esp.emac: receive len= 60[0m
D (44315) esp.emac: receive len= 66[0m
D (44315) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (44315) port.utils: Enqueue data, length=12, TID=0x1[0m
D (44315) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (44325) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (44335) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (44345) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (44345) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (44355) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0001 received.[0m
D (44365) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (44365) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc0f64.[0m
D (44385) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 278115.[0m
D (44395) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (44395) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 01 00 01 [0m
D (44405) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (44405) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (44415) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (44415) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (44425) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (44435) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 371712[0m
D (44445) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44445) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (44465) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
D (44465) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (44485) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (44485) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (44485) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 15[0m
D (44495) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (44505) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (44515) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (44525) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (44535) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (44545) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (44545) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (44555) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (44725) esp.emac: receive len= 66[0m
D (44725) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (44725) port.utils: Enqueue data, length=12, TID=0x0[0m
D (44725) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (44735) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (44745) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (44755) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (44755) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (44765) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0000 received.[0m
D (44775) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (44785) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc0f64.[0m
D (44795) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 250391.[0m
D (44805) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (44805) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 02 00 01 [0m
D (44815) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (44815) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (44825) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (44825) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (44835) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (44845) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 344004[0m
D (44845) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (44865) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44865) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (44885) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
D (44885) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (44895) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (44895) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (44905) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (44915) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (44925) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (44935) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (44935) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (44945) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (44955) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (44965) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (44975) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (44995) esp.emac: receive len= 60[0m
D (45145) esp.emac: receive len= 66[0m
D (45145) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (45145) port.utils: Enqueue data, length=12, TID=0x2[0m
D (45145) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45155) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45165) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (45175) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (45175) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45185) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0002 received.[0m
D (45195) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (45195) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc0f64.[0m
D (45205) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250708.[0m
D (45215) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (45225) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 03 00 01 [0m
D (45235) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (45235) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (45245) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (45245) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (45255) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (45255) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 344317[0m
D (45275) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45275) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (45295) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
D (45305) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (45305) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (45305) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (45315) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (45325) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45335) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (45345) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (45345) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (45355) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (45365) SENT: 00 03 00 00 00 06 01 03 00 00 00 01 [0m
D (45375) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (45385) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (45495) esp.emac: receive len= 60[0m
D (45525) esp.emac: receive len= 65[0m
D (45525) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (45525) port.utils: Enqueue data, length=11, TID=0x3[0m
D (45535) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45535) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45545) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (45555) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (45565) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45575) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0003 received.[0m
D (45575) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (45585) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc0f64.[0m
D (45595) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 225381.[0m
D (45605) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (45615) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 11 11 [0m
D (45615) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (45625) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (45625) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (45635) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (45635) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (45645) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 317909[0m
D (45665) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45665) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
D (45665) esp.emac: receive len= 119[0m
[0;32mI (45685) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (45685) TEST_COMMON: CHAR #0, value is ok.[0m
D (45685) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (45695) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (45715) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (45715) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (45715) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45725) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (45735) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (45745) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (45755) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0004, 12 (bytes), errno 119[0m
D (45765) SENT: 00 04 00 00 00 06 01 03 00 01 00 01 [0m
D (45765) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (45775) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (45895) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (45955) esp.emac: receive len= 65[0m
D (45965) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (45965) port.utils: Enqueue data, length=11, TID=0x4[0m
D (45965) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45975) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45975) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (45985) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (45995) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (46005) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0004 received.[0m
D (46015) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (46015) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc0f64.[0m
D (46025) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 265750.[0m
D (46035) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (46045) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 22 22 [0m
D (46045) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (46055) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (46065) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (46065) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (46075) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (46075) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 351003[0m
D (46095) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46095) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (46105) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (46125) TEST_COMMON: CHAR #1, value is ok.[0m
D (46125) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (46125) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (46145) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (46145) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 12[0m
D (46145) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (46155) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (46165) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (46175) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (46185) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0001, 12 (bytes), errno 119[0m
D (46195) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01 [0m
D (46195) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (46205) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (46245) esp.emac: receive len= 60[0m
D (46385) esp.emac: receive len= 65[0m
D (46385) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (46385) port.utils: Enqueue data, length=11, TID=0x1[0m
D (46385) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (46395) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (46405) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (46415) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (46415) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (46425) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0001 received.[0m
D (46435) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (46435) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc0f64.[0m
D (46445) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 257920.[0m
D (46455) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (46465) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 33 33 [0m
D (46475) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (46475) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (46485) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (46485) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (46495) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (46495) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 342231[0m
D (46515) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46515) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (46535) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (46535) TEST_COMMON: CHAR #2, value is ok.[0m
D (46555) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (46555) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (46555) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (46555) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (46565) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (46575) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (46585) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (46595) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (46605) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (46615) SENT: 00 05 00 00 00 06 01 03 00 03 00 01 [0m
D (46615) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (46625) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (46745) esp.emac: receive len= 60[0m
D (46795) esp.emac: receive len= 65[0m
D (46795) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (46795) port.utils: Enqueue data, length=11, TID=0x5[0m
D (46795) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (46805) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (46815) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (46825) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (46835) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (46835) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0005 received.[0m
D (46845) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (46855) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc0f64.[0m
D (46865) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249269.[0m
D (46875) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (46885) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 44 44 [0m
D (46885) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (46895) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (46895) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (46905) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (46905) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (46915) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 341813[0m
D (46935) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46935) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (46935) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (46955) TEST_COMMON: CHAR #3, value is ok.[0m
D (46955) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (46975) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (46975) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 00 [0m
D (46975) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (46985) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (46995) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (47005) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (47005) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47015) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (47025) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00 [0m
D (47035) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (47045) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (47185) esp.emac: receive len= 66[0m
D (47185) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (47195) port.utils: Enqueue data, length=12, TID=0x6[0m
D (47195) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47205) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47205) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (47215) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (47225) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47235) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0006 received.[0m
D (47235) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (47245) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc0f64.[0m
D (47255) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226463.[0m
D (47265) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (47275) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (47275) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (47285) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (47285) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (47295) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (47295) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 [0m
D (47305) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 317211[0m
D (47325) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (47325) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (47345) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.[0m
D (47395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (47395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (47395) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (47405) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (47415) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (47425) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (47435) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (47435) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47445) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0007, 15 (bytes), errno 119[0m
D (47455) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (47465) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (47475) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (47495) esp.emac: receive len= 60[0m
D (47665) esp.emac: receive len= 119[0m
D (47665) esp.emac: receive len= 66[0m
D (47675) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (47675) port.utils: Enqueue data, length=12, TID=0x7[0m
D (47675) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47685) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47685) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (47695) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (47705) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47715) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0007 received.[0m
D (47725) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (47725) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc0f64.[0m
D (47735) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 279987.[0m
D (47745) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (47755) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 00 00 01 [0m
D (47765) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (47765) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (47775) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (47775) esp.emac: receive len= 60[0m
D (47785) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (47785) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (47795) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 373637[0m
D (47805) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (47805) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (47825) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (47825) TEST_COMMON: CHAR #0, value is ok.[0m
D (47845) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (47845) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (47845) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (47855) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (47865) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (47865) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (47875) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (47885) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47895) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (47905) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (47915) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (47915) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (47995) esp.emac: receive len= 60[0m
D (48065) esp.emac: receive len= 66[0m
D (48065) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (48065) port.utils: Enqueue data, length=12, TID=0x8[0m
D (48075) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (48075) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (48085) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (48095) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (48105) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (48115) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0008 received.[0m
D (48115) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (48125) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc0f64.[0m
D (48135) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226631.[0m
D (48145) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (48155) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 01 00 01 [0m
D (48155) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (48165) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (48165) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (48175) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (48175) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (48185) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 320212[0m
D (48195) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48215) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (48215) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (48215) TEST_COMMON: CHAR #1, value is ok.[0m
D (48235) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (48235) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (48235) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (48245) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 15[0m
D (48255) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (48265) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (48275) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (48275) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (48285) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (48295) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (48305) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (48315) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (48485) esp.emac: receive len= 66[0m
D (48485) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (48485) port.utils: Enqueue data, length=12, TID=0x2[0m
D (48485) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (48495) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (48505) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (48515) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (48525) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (48525) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0002 received.[0m
D (48535) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (48545) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc0f64.[0m
D (48555) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 254153.[0m
D (48565) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (48575) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 02 00 01 [0m
D (48575) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (48585) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (48585) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (48595) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (48595) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (48605) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 347734[0m
D (48625) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48625) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (48625) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (48645) TEST_COMMON: CHAR #2, value is ok.[0m
D (48645) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (48665) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (48665) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (48665) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (48675) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (48685) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (48695) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (48695) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (48705) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0009, 15 (bytes), errno 119[0m
D (48715) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (48725) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (48735) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (48745) esp.emac: receive len= 60[0m
D (48905) esp.emac: receive len= 66[0m
D (48905) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (48905) port.utils: Enqueue data, length=12, TID=0x9[0m
D (48905) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (48915) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (48925) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (48935) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (48935) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (48945) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0009 received.[0m
D (48955) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (48955) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc0f64.[0m
D (48965) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250631.[0m
D (48975) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (48985) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 03 00 01 [0m
D (48995) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (48995) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (49005) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (49005) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (49015) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (49015) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 341744[0m
D (49035) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49035) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (49055) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (49055) TEST_COMMON: CHAR #3, value is ok.[0m
D (49055) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (49075) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (49075) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 01 [0m
D (49075) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (49095) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (49095) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (49105) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (49115) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (49125) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (49135) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01 [0m
D (49145) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (49145) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (49245) esp.emac: receive len= 60[0m
D (49295) esp.emac: receive len= 66[0m
D (49295) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (49295) port.utils: Enqueue data, length=12, TID=0xa[0m
D (49295) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49305) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49315) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (49325) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (49325) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (49335) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000a received.[0m
D (49345) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (49345) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc0f64.[0m
D (49365) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226506.[0m
D (49375) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (49375) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (49385) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (49385) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (49395) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (49395) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (49405) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 [0m
D (49415) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 320103[0m
D (49425) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49425) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (49445) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.[0m
D (49495) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (49495) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (49495) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (49505) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (49515) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (49515) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (49525) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (49535) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (49545) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (49555) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01 [0m
D (49565) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (49565) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (49665) esp.emac: receive len= 119[0m
D (49745) esp.emac: receive len= 60[0m
D (49775) mb_driver: 0x3ffc10c8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (49775) event: running post loop:0x3ffc10c8:256 with handler 0x40123cf8 and context 0x3ffc3050 on loop 0x3ffc14d8[0m
D (49775) esp.emac: receive len= 65[0m
D (49775) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_timeout: fd: -1[0m
D (49835) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (49835) port.utils: Enqueue data, length=11, TID=0xb[0m
D (49835) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49845) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49845) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (49855) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (49865) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (49875) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000b received.[0m
D (49875) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (49885) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc0f64.[0m
D (49895) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 337861.[0m
D (49905) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (49915) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 11 11 [0m
D (49915) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (49925) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (49925) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (49935) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (49935) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (49945) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 430400[0m
D (49965) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49965) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (49985) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (49985) TEST_COMMON: CHAR #0, value is ok.[0m
D (49985) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (49995) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (49995) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (50005) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (50015) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (50025) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (50035) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (50035) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (50045) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000c, 12 (bytes), errno 119[0m
D (50055) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01 [0m
D (50065) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (50075) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (50225) esp.emac: receive len= 65[0m
D (50225) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (50225) port.utils: Enqueue data, length=11, TID=0xc[0m
D (50225) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (50235) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (50245) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (50255) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (50255) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (50265) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000c received.[0m
D (50275) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (50275) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000c:0x000d, 0x3ffc0f64.[0m
D (50285) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 230312.[0m
D (50295) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (50305) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 22 22 [0m
D (50315) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (50315) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (50325) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (50325) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (50335) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (50335) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 322875[0m
D (50355) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50355) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (50375) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (50375) TEST_COMMON: CHAR #1, value is ok.[0m
D (50395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (50395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (50405) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (50405) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 12[0m
D (50405) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (50415) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (50425) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (50435) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (50445) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (50455) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01 [0m
D (50455) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (50465) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (50495) esp.emac: receive len= 60[0m
D (50635) esp.emac: receive len= 65[0m
D (50635) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (50635) port.utils: Enqueue data, length=11, TID=0x3[0m
D (50635) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (50645) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (50655) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (50665) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (50675) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (50685) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0003 received.[0m
D (50685) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (50695) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc0f64.[0m
D (50705) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 249383.[0m
D (50715) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (50725) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 33 33 [0m
D (50725) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (50735) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (50735) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (50745) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (50745) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (50755) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 335841[0m
D (50775) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50775) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (50775) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (50795) TEST_COMMON: CHAR #2, value is ok.[0m
D (50795) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (50805) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (50805) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (50815) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (50825) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (50825) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (50835) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (50845) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (50855) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000d, 12 (bytes), errno 119[0m
D (50865) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01 [0m
D (50875) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (50875) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (50995) esp.emac: receive len= 60[0m
D (51045) esp.emac: receive len= 65[0m
D (51055) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (51055) port.utils: Enqueue data, length=11, TID=0xd[0m
D (51055) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51065) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51065) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (51075) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (51085) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51095) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000d received.[0m
D (51105) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (51105) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000d:0x000e, 0x3ffc0f64.[0m
D (51115) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249381.[0m
D (51125) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (51135) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 44 44 [0m
D (51135) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (51145) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (51145) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (51155) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (51165) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (51165) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 341909[0m
D (51185) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (51185) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (51195) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (51215) TEST_COMMON: CHAR #3, value is ok.[0m
D (51215) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (51215) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (51235) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 02 [0m
D (51235) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (51235) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (51245) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (51255) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (51265) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51275) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000e, 15 (bytes), errno 119[0m
D (51285) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02 [0m
D (51285) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (51295) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (51445) esp.emac: receive len= 66[0m
D (51445) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (51445) port.utils: Enqueue data, length=12, TID=0xe[0m
D (51445) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51455) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51455) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (51475) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (51475) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51485) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000e received.[0m
D (51495) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (51495) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000e:0x000f, 0x3ffc0f64.[0m
D (51505) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226617.[0m
D (51515) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (51525) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (51535) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (51535) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (51545) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (51545) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (51555) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 [0m
D (51555) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 311286[0m
D (51575) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (51575) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (51595) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.[0m
D (51655) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (51655) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (51655) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (51655) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (51665) esp.emac: receive len= 119[0m
D (51675) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (51675) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (51695) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (51695) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51705) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000f, 15 (bytes), errno 119[0m
D (51715) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (51725) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (51735) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (51745) esp.emac: receive len= 60[0m
D (51905) esp.emac: receive len= 66[0m
D (51905) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (51905) port.utils: Enqueue data, length=12, TID=0xf[0m
D (51905) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51915) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51915) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (51935) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (51935) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51945) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000f received.[0m
D (51955) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (51955) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000f:0x0010, 0x3ffc0f64.[0m
D (51965) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250535.[0m
D (51975) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (51985) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 00 00 01 [0m
D (51995) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (51995) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (52005) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (52005) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (52015) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (52015) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 347781[0m
D (52035) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52035) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (52055) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (52055) TEST_COMMON: CHAR #0, value is ok.[0m
D (52055) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (52075) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (52075) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (52075) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (52085) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (52095) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (52105) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (52115) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (52125) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0010, 15 (bytes), errno 119[0m
D (52135) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (52135) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (52145) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (52245) esp.emac: receive len= 60[0m
D (52295) esp.emac: receive len= 66[0m
D (52295) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (52295) port.utils: Enqueue data, length=12, TID=0x10[0m
D (52295) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (52305) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (52315) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (52325) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (52325) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (52335) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0010 received.[0m
D (52345) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (52345) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0010:0x0011, 0x3ffc0f64.[0m
D (52365) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226700.[0m
D (52375) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (52375) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 01 00 01 [0m
D (52385) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (52385) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (52395) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (52395) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (52405) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (52415) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 320305[0m
D (52425) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52425) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (52445) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (52445) TEST_COMMON: CHAR #1, value is ok.[0m
D (52465) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (52465) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (52465) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (52475) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 15[0m
D (52485) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (52485) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (52495) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (52505) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (52515) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0004, 15 (bytes), errno 119[0m
D (52525) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (52535) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (52535) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (52705) esp.emac: receive len= 66[0m
D (52715) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (52715) port.utils: Enqueue data, length=12, TID=0x4[0m
D (52715) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (52725) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (52725) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (52735) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (52745) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (52755) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0004 received.[0m
D (52765) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (52765) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc0f64.[0m
D (52775) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 251546.[0m
D (52785) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (52795) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 02 00 01 [0m
D (52795) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (52805) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (52815) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (52815) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (52825) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (52825) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 346035[0m
D (52845) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52845) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (52865) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (52865) TEST_COMMON: CHAR #2, value is ok.[0m
D (52865) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (52885) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (52885) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (52885) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (52895) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (52905) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (52915) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (52925) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (52935) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0011, 15 (bytes), errno 119[0m
D (52945) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (52945) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (52955) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (52995) esp.emac: receive len= 60[0m
D (53125) esp.emac: receive len= 66[0m
D (53125) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (53125) port.utils: Enqueue data, length=12, TID=0x11[0m
D (53125) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (53135) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (53145) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (53155) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (53165) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (53175) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0011 received.[0m
D (53175) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (53185) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0011:0x0012, 0x3ffc0f64.[0m
D (53195) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250758.[0m
D (53205) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (53215) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 03 00 01 [0m
D (53215) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (53225) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (53225) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (53235) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (53235) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (53245) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 344348[0m
D (53265) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53265) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (53265) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (53285) TEST_COMMON: CHAR #3, value is ok.[0m
D (53285) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (53295) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (53295) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 03 [0m
D (53305) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (53315) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53325) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (53335) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (53335) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53345) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0012, 15 (bytes), errno 119[0m
D (53355) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03 [0m
D (53365) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (53375) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (53495) esp.emac: receive len= 60[0m
D (53515) esp.emac: receive len= 66[0m
D (53515) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (53525) port.utils: Enqueue data, length=12, TID=0x12[0m
D (53525) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (53535) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (53535) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (53545) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (53555) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (53565) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0012 received.[0m
D (53565) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (53575) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0012:0x0013, 0x3ffc0f64.[0m
D (53585) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226584.[0m
D (53595) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (53605) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (53605) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (53615) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (53615) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (53625) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (53635) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 [0m
D (53635) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 320153[0m
D (53655) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53655) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
D (53665) esp.emac: receive len= 119[0m
[0;32mI (53675) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.[0m
D (53735) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (53735) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (53735) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (53735) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (53745) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53755) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (53765) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (53775) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53785) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0013, 12 (bytes), errno 119[0m
D (53795) SENT: 00 13 00 00 00 06 01 03 00 00 00 01 [0m
D (53795) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (53805) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (53995) esp.emac: receive len= 65[0m
D (54005) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (54005) port.utils: Enqueue data, length=11, TID=0x13[0m
D (54005) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (54015) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (54015) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (54025) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (54035) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (54045) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0013 received.[0m
D (54045) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (54055) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0013:0x0014, 0x3ffc0f64.[0m
D (54065) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 273034.[0m
D (54075) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (54085) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 11 11 [0m
D (54085) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (54095) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (54095) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (54105) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (54115) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (54115) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 365565[0m
D (54135) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54135) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (54155) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (54155) TEST_COMMON: CHAR #0, value is ok.[0m
D (54155) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (54175) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (54175) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (54175) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (54185) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (54195) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (54205) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (54205) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (54225) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0014, 12 (bytes), errno 119[0m
D (54235) SENT: 00 14 00 00 00 06 01 03 00 01 00 01 [0m
D (54235) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (54245) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (54245) esp.emac: receive len= 60[0m
D (54395) esp.emac: receive len= 65[0m
D (54395) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (54395) port.utils: Enqueue data, length=11, TID=0x14[0m
D (54395) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (54405) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (54415) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (54425) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (54425) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (54435) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0014 received.[0m
D (54445) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (54445) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0014:0x0015, 0x3ffc0f64.[0m
D (54455) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 229489.[0m
D (54465) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (54475) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 22 22 [0m
D (54485) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (54485) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (54495) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (54495) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (54505) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (54505) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 322052[0m
D (54525) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54525) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (54545) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (54545) TEST_COMMON: CHAR #1, value is ok.[0m
D (54565) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (54565) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (54565) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (54565) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 12[0m
D (54575) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (54585) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (54595) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (54605) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (54615) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (54625) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01 [0m
D (54625) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (54635) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (54635) esp.emac: receive len= 60[0m
D (54745) esp.emac: receive len= 60[0m
D (54805) esp.emac: receive len= 65[0m
D (54815) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (54815) port.utils: Enqueue data, length=11, TID=0x5[0m
D (54815) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (54825) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (54825) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (54835) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (54845) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (54855) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0005 received.[0m
D (54865) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (54865) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc0f64.[0m
D (54875) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 252925.[0m
D (54885) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (54895) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 33 33 [0m
D (54895) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (54905) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (54905) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (54915) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (54925) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (54925) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 345457[0m
D (54945) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54945) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (54965) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (54965) TEST_COMMON: CHAR #2, value is ok.[0m
D (54965) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (54985) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (54985) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (54985) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (54995) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55005) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (55015) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (55025) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55035) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0015, 12 (bytes), errno 119[0m
D (55045) SENT: 00 15 00 00 00 06 01 03 00 03 00 01 [0m
D (55045) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (55055) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (55225) esp.emac: receive len= 65[0m
D (55235) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (55235) port.utils: Enqueue data, length=11, TID=0x15[0m
D (55235) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (55245) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (55245) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (55255) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (55265) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (55275) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0015 received.[0m
D (55275) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (55285) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0015:0x0016, 0x3ffc0f64.[0m
D (55295) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 255041.[0m
D (55305) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (55315) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 44 44 [0m
D (55315) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (55325) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (55325) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (55335) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (55345) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (55345) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 347577[0m
D (55365) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55365) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (55385) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (55385) TEST_COMMON: CHAR #3, value is ok.[0m
D (55385) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (55395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (55415) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 04 [0m
D (55415) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (55415) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55425) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (55435) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (55445) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55455) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0016, 15 (bytes), errno 119[0m
D (55465) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04 [0m
D (55465) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (55475) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (55495) esp.emac: receive len= 60[0m
D (55625) esp.emac: receive len= 66[0m
D (55625) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (55625) port.utils: Enqueue data, length=12, TID=0x16[0m
D (55625) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (55635) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (55635) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (55655) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (55655) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (55665) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0016 received.[0m
D (55675) esp.emac: receive len= 119[0m
D (55675) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (55685) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0016:0x0017, 0x3ffc0f64.[0m
D (55695) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 230615.[0m
D (55705) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (55705) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (55715) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (55715) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (55725) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (55735) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (55735) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 [0m
D (55745) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 314842[0m
D (55765) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55765) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (55765) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.[0m
D (55845) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (55845) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (55845) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (55845) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (55855) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55865) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (55875) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (55885) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55895) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0017, 15 (bytes), errno 119[0m
D (55905) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (55905) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (55915) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (55995) esp.emac: receive len= 60[0m
D (56115) esp.emac: receive len= 66[0m
D (56115) esp.emac: receive len= 60[0m
D (56115) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (56115) port.utils: Enqueue data, length=12, TID=0x17[0m
D (56125) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (56135) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (56135) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (56145) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (56155) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (56165) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0017 received.[0m
D (56175) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (56175) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0017:0x0018, 0x3ffc0f64.[0m
D (56185) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 282767.[0m
D (56195) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (56205) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 00 00 01 [0m
D (56205) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (56215) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (56215) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (56225) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (56235) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (56235) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 376336[0m
D (56255) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (56255) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (56275) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (56275) TEST_COMMON: CHAR #0, value is ok.[0m
D (56275) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (56295) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (56295) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (56295) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (56305) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (56315) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (56325) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (56335) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (56345) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0018, 15 (bytes), errno 119[0m
D (56355) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (56355) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (56365) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (56495) esp.emac: receive len= 60[0m
D (56525) esp.emac: receive len= 66[0m
D (56525) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (56525) port.utils: Enqueue data, length=12, TID=0x18[0m
D (56525) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (56535) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (56545) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (56555) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (56555) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (56565) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0018 received.[0m
D (56575) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (56585) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0018:0x0019, 0x3ffc0f64.[0m
D (56595) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 238958.[0m
D (56605) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (56605) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 01 00 01 [0m
D (56615) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (56615) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (56625) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (56625) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (56635) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (56645) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 332563[0m
D (56655) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (56655) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (56675) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (56675) TEST_COMMON: CHAR #1, value is ok.[0m
D (56695) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (56695) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (56705) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (56705) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 15[0m
D (56715) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (56715) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (56725) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (56735) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (56745) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (56745) esp.emac: receive len= 60[0m
D (56755) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (56755) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (56775) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (56945) esp.emac: receive len= 66[0m
D (56945) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (56945) port.utils: Enqueue data, length=12, TID=0x6[0m
D (56945) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (56955) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (56965) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (56975) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (56975) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (56985) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0006 received.[0m
D (56995) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (56995) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc0f64.[0m
D (57015) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 254281.[0m
D (57025) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (57025) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 02 00 01 [0m
D (57035) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (57035) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (57045) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (57045) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (57055) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (57065) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 343295[0m
D (57075) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57075) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (57095) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (57105) TEST_COMMON: CHAR #2, value is ok.[0m
D (57105) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (57105) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (57125) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (57125) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (57135) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (57135) esp.emac: receive len= 60[0m
D (57145) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (57155) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (57155) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (57165) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0019, 15 (bytes), errno 119[0m
D (57175) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (57185) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (57195) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (57245) esp.emac: receive len= 60[0m
D (57365) esp.emac: receive len= 66[0m
D (57365) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (57365) port.utils: Enqueue data, length=12, TID=0x19[0m
D (57365) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (57375) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (57385) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (57395) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (57395) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (57405) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0019 received.[0m
D (57415) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (57415) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0019:0x001a, 0x3ffc0f64.[0m
D (57425) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250685.[0m
D (57435) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (57445) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 03 00 01 [0m
D (57455) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (57455) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (57465) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (57465) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (57475) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (57485) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 342847[0m
D (57495) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57505) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (57505) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (57525) TEST_COMMON: CHAR #3, value is ok.[0m
D (57525) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (57525) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (57545) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 05 [0m
D (57545) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (57555) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (57555) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (57565) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (57575) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (57585) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001a, 15 (bytes), errno 119[0m
D (57595) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05 [0m
D (57605) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (57605) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (57665) esp.emac: receive len= 119[0m
D (57745) esp.emac: receive len= 60[0m
D (57755) esp.emac: receive len= 66[0m
D (57755) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (57755) port.utils: Enqueue data, length=12, TID=0x1a[0m
D (57755) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (57765) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (57775) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (57785) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (57795) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (57805) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x001a received.[0m
D (57805) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (57815) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001a:0x001b, 0x3ffc0f64.[0m
D (57825) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 227880.[0m
D (57835) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (57845) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (57845) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (57855) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (57855) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (57865) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (57865) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 [0m
D (57875) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 316028[0m
D (57895) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57895) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (57905) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.[0m
D (57965) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (57965) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (57965) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (57965) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (57975) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (57985) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (57995) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (58005) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (58015) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001b, 12 (bytes), errno 119[0m
D (58025) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01 [0m
D (58025) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (58035) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (58165) esp.emac: receive len= 60[0m
D (58175) esp.emac: receive len= 60[0m
D (58245) esp.emac: receive len= 60[0m
D (58255) esp.emac: receive len= 65[0m
D (58255) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (58255) port.utils: Enqueue data, length=11, TID=0x1b[0m
D (58255) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (58265) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (58275) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (58285) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (58295) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (58305) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x001b received.[0m
D (58305) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (58315) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001b:0x001c, 0x3ffc0f64.[0m
D (58325) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 300037.[0m
D (58335) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (58345) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 11 11 [0m
D (58345) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (58355) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (58355) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (58365) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (58365) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (58375) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 392580[0m
D (58395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58395) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (58405) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (58405) TEST_COMMON: CHAR #0, value is ok.[0m
D (58425) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (58425) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (58425) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (58435) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (58445) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (58445) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (58465) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (58465) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (58475) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001c, 12 (bytes), errno 119[0m
D (58485) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01 [0m
D (58495) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (58495) esp.emac: receive len= 60[0m
D (58505) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (58655) esp.emac: receive len= 65[0m
D (58655) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (58655) port.utils: Enqueue data, length=11, TID=0x1c[0m
D (58655) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (58665) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (58665) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (58675) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (58685) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (58695) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x001c received.[0m
D (58705) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (58705) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001c:0x001d, 0x3ffc0f64.[0m
D (58715) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 230448.[0m
D (58725) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (58735) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 22 22 [0m
D (58745) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (58745) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (58755) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (58755) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (58765) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (58765) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 323325[0m
D (58785) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58785) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (58795) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (58815) TEST_COMMON: CHAR #1, value is ok.[0m
D (58815) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (58815) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (58835) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (58835) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 12[0m
D (58835) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (58845) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (58855) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (58865) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (58875) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0007, 12 (bytes), errno 119[0m
D (58885) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01 [0m
D (58885) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (58895) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (58995) esp.emac: receive len= 60[0m
D (59065) esp.emac: receive len= 65[0m
D (59065) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (59065) port.utils: Enqueue data, length=11, TID=0x7[0m
D (59065) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (59075) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (59085) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (59095) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (59105) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (59105) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0007 received.[0m
D (59115) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (59125) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc0f64.[0m
D (59135) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 249451.[0m
D (59145) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (59145) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 33 33 [0m
D (59155) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (59155) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (59165) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (59165) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (59175) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (59185) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 334242[0m
D (59195) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (59205) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (59205) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (59225) TEST_COMMON: CHAR #2, value is ok.[0m
D (59225) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (59225) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (59245) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (59245) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (59255) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (59255) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (59265) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (59275) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (59285) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001d, 12 (bytes), errno 119[0m
D (59295) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01 [0m
D (59305) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (59305) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (59475) esp.emac: receive len= 65[0m
D (59485) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (59485) port.utils: Enqueue data, length=11, TID=0x1d[0m
D (59485) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (59495) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (59495) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (59505) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (59515) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (59525) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x001d received.[0m
D (59535) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (59535) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001d:0x001e, 0x3ffc0f64.[0m
D (59545) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 251736.[0m
D (59555) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (59565) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 44 44 [0m
D (59565) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (59575) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (59585) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (59585) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (59595) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (59595) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 340978[0m
D (59615) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (59615) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (59635) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (59635) TEST_COMMON: CHAR #3, value is ok.[0m
D (59635) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (59655) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (59655) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 06 [0m
D (59655) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (59665) esp.emac: receive len= 119[0m
D (59675) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (59675) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (59685) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (59695) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (59705) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001e, 15 (bytes), errno 119[0m
D (59715) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06 [0m
D (59725) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (59725) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (59745) esp.emac: receive len= 60[0m
D (59765) esp.emac: receive len= 60[0m
D (59875) esp.emac: receive len= 66[0m
D (59875) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (59885) port.utils: Enqueue data, length=12, TID=0x1e[0m
D (59885) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (59895) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (59895) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (59905) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (59915) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (59925) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x001e received.[0m
D (59925) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (59935) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001e:0x001f, 0x3ffc0f64.[0m
D (59945) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 230124.[0m
D (59955) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (59965) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (59965) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (59975) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (59975) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (59985) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (59995) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 [0m
D (59995) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 327359[0m
D (60015) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60015) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (60035) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.[0m
D (60095) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (60095) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (60095) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (60095) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (60105) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (60115) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (60125) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (60135) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (60145) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001f, 15 (bytes), errno 119[0m
D (60155) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (60155) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (60165) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (60245) esp.emac: receive len= 60[0m
D (60335) esp.emac: receive len= 66[0m
D (60335) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (60335) port.utils: Enqueue data, length=12, TID=0x1f[0m
D (60345) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (60355) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (60355) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (60365) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (60375) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60385) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x001f received.[0m
D (60385) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (60395) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001f:0x0020, 0x3ffc0f64.[0m
D (60405) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250790.[0m
D (60415) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (60425) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 00 00 01 [0m
D (60425) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (60435) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (60435) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (60445) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (60445) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (60455) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 344359[0m
D (60475) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60475) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (60495) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (60495) TEST_COMMON: CHAR #0, value is ok.[0m
D (60505) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (60505) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (60505) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (60515) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (60525) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (60535) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (60545) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (60545) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (60555) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0020, 15 (bytes), errno 119[0m
D (60575) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (60575) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (60585) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (60725) esp.emac: receive len= 66[0m
D (60735) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (60735) port.utils: Enqueue data, length=12, TID=0x20[0m
D (60735) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (60745) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (60745) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (60755) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (60765) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60775) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0020 received.[0m
D (60785) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (60785) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0020:0x0021, 0x3ffc0f64.[0m
D (60795) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226739.[0m
D (60805) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (60815) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 01 00 01 [0m
D (60815) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (60825) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (60825) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (60835) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (60845) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (60845) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 320320[0m
D (60865) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60865) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (60885) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (60885) TEST_COMMON: CHAR #1, value is ok.[0m
D (60885) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (60895) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (60915) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (60915) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 15[0m
D (60915) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (60925) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (60935) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (60945) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (60955) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (60965) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (60965) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (60975) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (60995) esp.emac: receive len= 60[0m
D (61145) esp.emac: receive len= 66[0m
D (61145) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (61145) port.utils: Enqueue data, length=12, TID=0x8[0m
D (61145) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (61155) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (61165) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (61175) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (61185) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (61185) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0008 received.[0m
D (61195) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (61205) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc0f64.[0m
D (61215) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 250607.[0m
D (61225) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (61235) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 02 00 01 [0m
D (61235) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (61245) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (61245) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (61255) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (61255) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (61265) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 335755[0m
D (61285) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (61285) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (61285) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (61295) TEST_COMMON: CHAR #2, value is ok.[0m
D (61315) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (61315) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (61315) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (61325) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (61335) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (61345) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (61355) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (61355) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (61365) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0021, 15 (bytes), errno 119[0m
D (61375) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (61385) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (61395) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (61495) esp.emac: receive len= 60[0m
D (61565) esp.emac: receive len= 66[0m
D (61565) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (61565) port.utils: Enqueue data, length=12, TID=0x21[0m
D (61565) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (61575) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (61585) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (61595) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (61595) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (61605) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0021 received.[0m
D (61615) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (61615) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0021:0x0022, 0x3ffc0f64.[0m
D (61625) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250733.[0m
D (61635) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (61645) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 03 00 01 [0m
D (61655) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (61655) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (61665) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (61665) esp.emac: receive len= 119[0m
D (61675) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (61675) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (61685) esp.emac: receive len= 60[0m
D (61685) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 344333[0m
D (61705) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (61705) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (61725) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (61725) TEST_COMMON: CHAR #3, value is ok.[0m
D (61725) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (61745) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (61745) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 07 [0m
D (61745) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (61755) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (61765) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (61775) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (61785) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (61795) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0022, 15 (bytes), errno 119[0m
D (61805) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07 [0m
D (61805) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (61815) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (61965) esp.emac: receive len= 66[0m
D (61965) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (61965) port.utils: Enqueue data, length=12, TID=0x22[0m
D (61965) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (61975) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (61975) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (61995) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (61995) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62005) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0022 received.[0m
D (62015) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (62015) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0022:0x0023, 0x3ffc0f64.[0m
D (62025) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226853.[0m
D (62035) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (62045) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (62055) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (62055) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (62065) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (62065) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (62075) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 [0m
D (62075) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 320446[0m
D (62095) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62105) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (62105) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.[0m
D (62185) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (62185) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (62185) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (62185) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (62195) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62205) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (62215) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (62225) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (62235) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0023, 12 (bytes), errno 119[0m
D (62245) SENT: 00 23 00 00 00 06 01 03 00 00 00 01 [0m
D (62245) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (62245) esp.emac: receive len= 60[0m
D (62255) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (62445) esp.emac: receive len= 65[0m
D (62445) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (62455) port.utils: Enqueue data, length=11, TID=0x23[0m
D (62455) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62465) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (62465) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (62475) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (62485) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62495) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0023 received.[0m
D (62495) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (62505) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0023:0x0024, 0x3ffc0f64.[0m
D (62515) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 272386.[0m
D (62515) esp.emac: receive len= 337[0m
D (62525) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (62535) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 11 11 [0m
D (62545) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (62545) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (62555) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (62555) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (62565) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (62565) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 368543[0m
D (62585) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62585) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (62595) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (62615) TEST_COMMON: CHAR #0, value is ok.[0m
D (62615) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (62615) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (62635) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (62635) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (62635) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62645) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (62655) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (62665) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (62675) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0024, 12 (bytes), errno 119[0m
D (62685) SENT: 00 24 00 00 00 06 01 03 00 01 00 01 [0m
D (62685) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (62695) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (62745) esp.emac: receive len= 60[0m
D (62845) esp.emac: receive len= 65[0m
D (62845) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (62845) port.utils: Enqueue data, length=11, TID=0x24[0m
D (62845) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62855) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (62865) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (62875) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (62875) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62885) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0024 received.[0m
D (62895) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (62895) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0024:0x0025, 0x3ffc0f64.[0m
D (62905) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 225749.[0m
D (62915) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (62925) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 22 22 [0m
D (62935) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (62935) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (62945) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (62945) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (62955) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (62955) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 311837[0m
D (62975) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62975) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (62995) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (63005) TEST_COMMON: CHAR #1, value is ok.[0m
D (63005) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (63005) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (63025) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (63025) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 12[0m
D (63025) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (63035) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (63045) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (63055) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (63065) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0009, 12 (bytes), errno 119[0m
D (63075) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01 [0m
D (63075) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (63085) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (63245) esp.emac: receive len= 60[0m
D (63255) esp.emac: receive len= 65[0m
D (63255) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (63255) port.utils: Enqueue data, length=11, TID=0x9[0m
D (63255) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (63265) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (63275) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (63285) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (63295) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (63305) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0009 received.[0m
D (63305) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (63315) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc0f64.[0m
D (63325) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 249846.[0m
D (63335) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (63345) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 33 33 [0m
D (63345) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (63355) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (63355) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (63365) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (63365) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (63375) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 335825[0m
D (63395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63395) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (63405) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (63405) TEST_COMMON: CHAR #2, value is ok.[0m
D (63425) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (63425) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (63425) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (63435) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (63445) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (63445) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (63455) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (63465) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (63475) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0025, 12 (bytes), errno 119[0m
D (63485) SENT: 00 25 00 00 00 06 01 03 00 03 00 01 [0m
D (63495) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (63495) esp.emac: receive len= 60[0m
D (63505) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (63535) esp.emac: receive len= 60[0m
D (63665) esp.emac: receive len= 119[0m
D (63675) esp.emac: receive len= 65[0m
D (63675) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (63675) port.utils: Enqueue data, length=11, TID=0x25[0m
D (63675) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (63685) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (63695) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (63705) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (63705) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (63715) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0025 received.[0m
D (63725) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (63725) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0025:0x0026, 0x3ffc0f64.[0m
D (63745) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 252888.[0m
D (63755) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (63755) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 44 44 [0m
D (63765) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (63765) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (63775) esp.emac: receive len= 60[0m
D (63775) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (63785) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (63785) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (63795) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 349310[0m
D (63815) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63815) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (63815) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (63835) TEST_COMMON: CHAR #3, value is ok.[0m
D (63835) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (63855) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (63855) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 08 [0m
D (63855) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (63865) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (63875) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (63885) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (63885) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (63895) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0026, 15 (bytes), errno 119[0m
D (63905) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08 [0m
D (63915) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (63925) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (63995) esp.emac: receive len= 60[0m
D (64065) esp.emac: receive len= 66[0m
D (64065) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (64075) port.utils: Enqueue data, length=12, TID=0x26[0m
D (64075) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (64085) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (64085) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (64095) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (64105) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (64115) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0026 received.[0m
D (64115) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (64125) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0026:0x0027, 0x3ffc0f64.[0m
D (64135) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226828.[0m
D (64145) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (64155) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (64155) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (64165) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (64165) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (64175) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (64185) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 [0m
D (64185) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 318413[0m
D (64205) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (64205) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (64225) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.[0m
D (64285) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (64285) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (64285) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (64285) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (64295) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64305) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (64315) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (64325) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64335) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0027, 15 (bytes), errno 119[0m
D (64345) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (64355) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (64355) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (64495) esp.emac: receive len= 60[0m
D (64545) esp.emac: receive len= 66[0m
D (64555) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (64555) port.utils: Enqueue data, length=12, TID=0x27[0m
D (64555) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (64565) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (64565) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (64575) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (64585) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (64595) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0027 received.[0m
D (64605) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (64605) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0027:0x0028, 0x3ffc0f64.[0m
D (64615) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 273049.[0m
D (64625) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (64635) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 00 00 01 [0m
D (64635) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (64645) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (64655) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (64655) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (64665) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (64665) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 367386[0m
D (64685) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (64685) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (64695) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (64715) TEST_COMMON: CHAR #0, value is ok.[0m
D (64715) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (64715) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (64735) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (64735) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (64735) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64745) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (64755) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (64765) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64775) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0028, 15 (bytes), errno 119[0m
D (64785) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (64785) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (64795) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (64945) esp.emac: receive len= 66[0m
D (64945) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (64945) port.utils: Enqueue data, length=12, TID=0x28[0m
D (64945) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (64955) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (64965) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (64975) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (64975) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (64985) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0028 received.[0m
D (64995) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (64995) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0028:0x0029, 0x3ffc0f64.[0m
D (65005) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 226846.[0m
D (65015) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (65025) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 01 00 01 [0m
D (65035) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (65035) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (65045) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (65045) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (65055) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (65065) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 312353[0m
D (65075) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65075) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (65095) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (65105) TEST_COMMON: CHAR #1, value is ok.[0m
D (65105) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (65105) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (65125) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (65125) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 15[0m
D (65135) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (65135) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (65145) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (65155) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (65165) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (65175) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (65185) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (65185) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (65245) esp.emac: receive len= 60[0m
D (65355) esp.emac: receive len= 66[0m
D (65355) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (65365) port.utils: Enqueue data, length=12, TID=0xa[0m
D (65365) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (65375) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (65375) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (65385) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (65395) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (65405) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000a received.[0m
D (65405) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (65415) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc0f64.[0m
D (65425) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 250544.[0m
D (65435) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (65445) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 02 00 01 [0m
D (65445) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (65455) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (65455) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (65465) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (65475) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (65475) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 338182[0m
D (65495) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65495) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (65505) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (65525) TEST_COMMON: CHAR #2, value is ok.[0m
D (65525) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (65525) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (65545) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (65545) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (65545) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (65555) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (65565) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (65565) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (65585) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0029, 15 (bytes), errno 119[0m
D (65595) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (65595) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (65605) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (65665) esp.emac: receive len= 119[0m
D (65745) esp.emac: receive len= 60[0m
D (65775) esp.emac: receive len= 66[0m
D (65775) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (65775) port.utils: Enqueue data, length=12, TID=0x29[0m
D (65775) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (65785) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (65795) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (65805) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (65805) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (65815) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x0029 received.[0m
D (65825) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (65835) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0029:0x002a, 0x3ffc0f64.[0m
D (65845) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250532.[0m
D (65855) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (65855) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 03 00 01 [0m
D (65865) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (65865) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (65875) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (65875) mb_port.timer: D (65885) esp.emac: receive len= 85[0m
D (65885) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (65895) esp.emac: receive len= 105[0m
D (65895) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (65895) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (65915) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 334114[0m
D (65915) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (65905) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65935) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (65955) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (65955) TEST_COMMON: CHAR #3, value is ok.[0m
D (65955) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (65975) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (65975) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 09 [0m
D (65975) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (65985) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (65995) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (66005) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (66015) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (66025) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002a, 15 (bytes), errno 119[0m
D (66035) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09 [0m
D (66035) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (66045) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (66245) esp.emac: receive len= 60[0m
D (66265) esp.emac: receive len= 66[0m
D (66265) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (66265) port.utils: Enqueue data, length=12, TID=0x2a[0m
D (66265) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (66275) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (66285) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (66295) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (66295) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (66305) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x002a received.[0m
D (66315) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (66315) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002a:0x002b, 0x3ffc0f64.[0m
D (66335) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 297873.[0m
D (66345) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (66345) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (66355) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (66355) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (66365) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (66365) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (66375) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 [0m
D (66385) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 391474[0m
D (66395) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66405) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (66405) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.[0m
D (66485) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (66485) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (66485) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (66485) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (66495) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (66505) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (66515) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (66525) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (66535) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002b, 12 (bytes), errno 119[0m
D (66545) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01 [0m
D (66545) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (66555) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (66725) esp.emac: receive len= 65[0m
D (66725) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (66725) port.utils: Enqueue data, length=11, TID=0x2b[0m
D (66725) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (66735) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (66745) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (66755) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (66765) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (66765) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x002b received.[0m
D (66775) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (66785) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002b:0x002c, 0x3ffc0f64.[0m
D (66795) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249108.[0m
D (66805) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (66805) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 11 11 [0m
D (66815) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (66815) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (66825) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (66835) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (66835) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (66845) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 341672[0m
D (66855) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66855) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (66875) TEST_COMMON: 0x3ffbf8d8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (66875) TEST_COMMON: CHAR #0, value is ok.[0m
D (66885) esp.emac: receive len= 85[0m
D (66885) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (66895) esp.emac: receive len= 105[0m
D (66895) esp_netif_lwip: check: local, if=0x3ffb8e90 fn=0x40105438[0m
D (66905) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb5bc[0m
D (66895) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (66915) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (66935) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (66935) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (66935) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (66945) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (66955) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (66965) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (66975) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002c, 12 (bytes), errno 119[0m
D (66985) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01 [0m
D (66985) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (66995) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (66995) esp.emac: receive len= 60[0m
D (67205) esp.emac: receive len= 65[0m
D (67215) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (67215) port.utils: Enqueue data, length=11, TID=0x2c[0m
D (67215) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (67225) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (67225) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (67235) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (67245) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (67255) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x002c received.[0m
D (67265) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (67265) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002c:0x002d, 0x3ffc0f64.[0m
D (67275) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 293794.[0m
D (67285) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (67295) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 22 22 [0m
D (67295) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (67305) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (67305) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (67315) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (67325) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (67325) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 379242[0m
D (67345) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (67345) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (67365) TEST_COMMON: 0x3ffbf8d8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (67365) TEST_COMMON: CHAR #1, value is ok.[0m
D (67365) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (67385) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (67385) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (67385) mb_port.tcp.master: 0x3ffc10c8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0d97, len: 12[0m
D (67395) mb_driver: 0x3ffc10c8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (67405) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (67415) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 1[0m
D (67415) mb_port.tcp.master: 0x3ffc10c8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (67435) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (67445) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01 [0m
D (67445) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (67455) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (67495) esp.emac: receive len= 60[0m
D (67625) esp.emac: receive len= 65[0m
D (67625) mb_driver: 0x3ffc10c8, socket event active: 80000000000000[0m
D (67625) port.utils: Enqueue data, length=11, TID=0xb[0m
D (67625) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (67635) mb_driver: 0x3ffc10c8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (67645) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (67655) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 1[0m
D (67655) mb_port.tcp.master: 0x3ffc10c8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (67665) esp.emac: receive len= 119[0m
D (67665) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x000b received.[0m
D (67675) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (67685) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc0f64.[0m
D (67695) mb_port.tcp.master: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), processing time[us] = 253004.[0m
D (67705) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (67715) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 33 33 [0m
D (67715) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (67725) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (67725) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (67735) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (67735) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (67745) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 345544[0m
D (67765) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (67765) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (67765) TEST_COMMON: 0x3ffbf8d8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (67785) TEST_COMMON: CHAR #2, value is ok.[0m
D (67785) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (67795) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (67795) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (67805) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 12[0m
D (67815) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (67825) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (67835) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (67835) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (67845) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002d, 12 (bytes), errno 119[0m
D (67855) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01 [0m
D (67865) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (67875) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (67885) esp.emac: receive len= 195[0m
D (67995) esp.emac: receive len= 60[0m
D (68035) esp.emac: receive len= 65[0m
D (68045) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (68045) port.utils: Enqueue data, length=11, TID=0x2d[0m
D (68045) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (68055) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (68055) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (68065) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (68075) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (68085) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x002d received.[0m
D (68095) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (68095) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002d:0x002e, 0x3ffc0f64.[0m
D (68105) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249323.[0m
D (68115) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (68125) mbm_tcp#0x3ffbf8d8:MB_RECV: 03 02 44 44 [0m
D (68125) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (68135) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (68145) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (68145) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (68155) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (68155) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 342760[0m
D (68175) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (68175) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (68195) TEST_COMMON: 0x3ffbf8d8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (68195) TEST_COMMON: CHAR #3, value is ok.[0m
D (68205) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (68205) mb_port.event: mbm_tcp#0x3ffbf8d8, mb take resource, (300 ticks).[0m
D (68225) mbm_tcp#0x3ffbf8d8:MB_TRANSMIT: 10 00 04 00 01 02 00 0a [0m
D (68225) mb_port.tcp.master: 0x3ffc10c8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0d97, len: 15[0m
D (68225) mb_driver: 0x3ffc10c8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (68235) event: running post loop:0x3ffc10c8:16 with handler 0x401242d8 and context 0x3ffc2fc0 on loop 0x3ffc14d8[0m
D (68245) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_send_data: fd: 0[0m
D (68255) mb_port.tcp.master: 0x3ffc10c8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (68265) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002e, 15 (bytes), errno 119[0m
D (68275) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a [0m
D (68275) mb_port.timer: mbm_tcp#0x3ffbf8d8, respond enable timeout (3000).[0m
D (68285) mb_object.master: 0x3ffbf8d8:EV_FRAME_SENT[0m
D (68435) esp.emac: receive len= 66[0m
D (68435) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (68445) port.utils: Enqueue data, length=12, TID=0x2e[0m
D (68445) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (68455) mb_driver: 0x3ffc10c8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (68455) event: running post loop:0x3ffc10c8:32 with handler 0x401244d8 and context 0x3ffc2ff0 on loop 0x3ffc14d8[0m
D (68465) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_recv_data: fd: 0[0m
D (68475) mb_port.tcp.master: 0x3ffc10c8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (68485) mb_port.tcp.master: 0x3ffc10c8, packet TID: 0x002e received.[0m
D (68485) mb_object.master: 0x3ffbf8d8:EV_FRAME_RECEIVED[0m
D (68495) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002e:0x002f, 0x3ffc0f64.[0m
D (68505) mb_port.tcp.master: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), processing time[us] = 232558.[0m
D (68515) mb_object.master: 0x3ffbf8d8, frame data received successfully, (0).[0m
D (68525) mbm_tcp#0x3ffbf8d8:MB_RECV: 10 00 04 00 01 [0m
D (68525) mb_object.master: 0x3ffbf8d8:EV_EXECUTE[0m
D (68535) mb_object.master: 0x3ffbf8d8, set event EV_ERROR_OK[0m
D (68535) mb_object.master: 0x3ffbf8d8:EV_ERROR_PROCESS[0m
D (68545) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (68545) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a [0m
D (68555) mb_object.master: 0x3ffbf8d8, transaction processing time(us) = 317803[0m
D (68575) mb_port.event: mbm_tcp#0x3ffbf8d8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (68575) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
D (68575) esp.emac: receive len= 60[0m
D (68585) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (68595) port.utils: Socket (#54)(192.168.34.175), fail to read modbus header. ret=0[0m
[0;31mE (68595) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), critical error=-6, errno=128.[0m
D (68605) mb_driver: 0x3ffc10c8, socket event active: 40000000000000[0m
D (68615) esp.emac: receive len= 60[0m
[0;31mE (68615) port.utils: socket(#54)(192.168.34.175) connection closed, ret=-1, errno=128.[0m
[0;31mE (68625) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), connection lost.[0m
D (68635) mb_driver: 0x3ffc10c8, fd event get: 0x40:0, |MB_EVENT_ERROR[0m
D (68645) event: running post loop:0x3ffc10c8:64 with handler 0x40124068 and context 0x3ffc2f90 on loop 0x3ffc14d8[0m
[0;32mI (68665) TEST_COMMON: 0x3ffbf8d8, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.[0m
D (68705) mb_driver: 0x3ffc10c8, socket event active: c0000000000000[0m
[0;31mE (68705) port.utils: socket(#54)(192.168.34.175) connection closed, ret=-1, errno=128.[0m
[0;31mE (68705) mb_driver: 0x3ffc10c8, node #0, socket(#54)(192.168.34.175), connection lost.[0m
D (68715) port.utils: Socket (#55)(192.168.34.175), fail to read modbus header. ret=0[0m
[0;31mE (68725) mb_driver: 0x3ffc10c8, node #1, socket(#55)(192.168.34.175), critical error=-6, errno=128.[0m
D (68735) mb_driver: 0x3ffc10c8, fd event get: 0x40:0, |MB_EVENT_ERROR[0m
D (68735) event: running post loop:0x3ffc10c8:64 with handler 0x40124068 and context 0x3ffc2f90 on loop 0x3ffc14d8[0m
[0;32mI (68755) TEST_COMMON: Destroy master, inst: 0x3ffbf8d8.[0m
D (68755) mbc_tcp.master: mb stack is active, try to disable.[0m
D (68775) event: running post loop:0x3ffc10c8:128 with handler 0x401245ec and context 0x3ffc3020 on loop 0x3ffc14d8[0m
D (68775) mb_port.tcp.master: loop:0x3ffc10c8  mbm_on_close, fd: -1[0m
D (68775) esp.emac: receive len= 60[0m
D (68785) esp.emac: receive len= 60[0m
D (68785) mb_port.timer: mbm_tcp#0x3ffbf8d8, timer stop, returns 259.[0m
D (68795) mb_port.tcp.master: 0x3ffc10c8, event handler 0x3ffc3060, unregister.[0m
D (68795) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x1, unregister.[0m
D (68815) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x2, unregister.[0m
D (68815) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x4, unregister.[0m
D (68825) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x8, unregister.[0m
D (68825) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x40, unregister.[0m
D (68835) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x10, unregister.[0m
D (68845) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x20, unregister.[0m
D (68855) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x80, unregister.[0m
D (68855) mb_driver: 0x3ffc10c8, event handler 0x3ffc3060, event 0x100, unregister.[0m
D (68825) mb_driver: 0x3ffc10c8, fd event get: 0x80:-1, |MB_EVENT_CLOSE[0m
D (68885) esp_netif_lwip: check: local, if=0x3ffb8ec0 fn=0x40105438[0m
D (68885) esp_netif_lwip: check: local, if=0x3ffb8ec0 fn=0x40105438[0m
D (68885) esp_netif_lwip: check: local, if=0x3ffb8ec0 fn=0x40105438[0m
D (68895) esp_netif_lwip: check: local, if=0x3ffb8ec0 fn=0x40105438[0m
D (68895) mb_driver: 0x3ffc10c8, driver unregister.[0m
D (69135) mb_driver: 0x3ffc10c8, driver check shutdown (18)...[0m
D (69135) mb_driver: 0x3ffc10c8, driver task shutdown...[0m
D (69135) mb_driver: delete loop inst: loop:0x3ffc10c8.[0m
D (69135) event: deleting loop 0x3ffc14d8[0m
D (69145) mb_driver: delete event loop: 0x3ffc14d8.[0m
D (69145) mb_driver: close eventfd (3).[0m
D (69145) mb_driver: 0x3ffc10c8, close node instance #0(mb_slave_tcp_01).[0m
D (69155) port.utils: wrong socket info or disconnected socket: 0, skip.[0m
D (69165) mb_driver: 0x3ffc10c8, close node instance #1(mb_slave_tcp_c8).[0m
D (69165) port.utils: wrong socket info or disconnected socket: 1, skip.[0m
[0;32mI (69185) TEST_COMMON: Test task 0x3ffc57ec, done successfully.[0m
D (69195) TEST_COMMON: Delete task 0x3ffc57ec[0m
MALLOC_CAP_8BIT usage: Free memory delta: 5308 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 5308 Leak threshold: -64 
D (69195) esp_netif_lwip: check: remote, if=0x3ffb66b0 fn=0x401052b8[0m
D (69205) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (69215) esp.emac: emac stopped[0m
D (69215) event: running post ETH_EVENT:3 with handler 0x40108048 and context 0x3ffbf66c on loop 0x3ffb9240[0m
D (69225) esp_eth.netif.netif_glue: eth_action_disconnected: 0x3ffbf5a8, 0x3f411c00, 3, 0x3ffb8190, 0x3ffbf530[0m
D (69235) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbb5bc from event_id=3[0m
D (69245) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x40106168[0m
D (69245) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbb5bc[0m
D (69255) esp_eth: Ethernet link is not up, can't transmit[0m
D (69265) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb644[0m
D (69265) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb5bc[0m
D (69275) esp_netif_lwip: if0x3ffbb5bc start ip lost tmr: already started[0m
D (69285) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb5bc[0m
D (69285) esp_netif_lwip: if0x3ffbb5bc start ip lost tmr: already started[0m
D (69295) esp_netif_lwip: check: local, if=0x3ffbb5bc fn=0x40106510[0m
D (69305) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb5bc[0m
D (69305) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (69315) event: running post ETH_EVENT:1 with handler 0x401080e0 and context 0x3ffbf60c on loop 0x3ffb9240[0m
D (69325) esp_eth.netif.netif_glue: eth_action_stop: 0x3ffbf5a8, 0x3f411c00, 1, 0x3ffbf6bc, 0x3ffbf530[0m
D (69335) esp_netif_handlers: esp_netif action stopped with netif0x3ffbb5bc from event_id=1[0m
D (69345) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x40106088[0m
D (69345) esp_netif_lwip: call api in lwip: ret=0x5002, give sem[0m
D (69355) esp_netif_lwip: check: remote, if=0x3ffbb5bc fn=0x40105c28[0m
D (69365) esp_netif_objects: esp_netif_remove_from_list_unsafe netif successfully removed (total netifs: 0)[0m
D (69375) esp_netif_lwip: check: local, if=0x3ffbb5bc fn=0x40106510[0m
D (69375) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb5bc[0m
D (69385) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (69395) event: deleting loop 0x3ffb9240[0m
[0;32mI (69395) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).[0m
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 14834ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
