<testsuite errors="0" failures="0" skipped="0" tests="2"><testcase file="./main/test_modbus_rs485_comm_master_slave.c" line="126" time="12.438" name="Modbus RS485 RTU multi device master - slave case."><system-out>Please press "Enter" key once any board send this signal.

D (1112) TEST_COMMON: Notify task start 0x3ffbad50
D (1112) TEST_COMMON: Task: 0x3ffbad50, get notify value = 1
D (1152) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1162) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (1162) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (1162) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1172) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (1172) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (1182) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c
D (1182) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 551431
D (1192) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (1202) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1202) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (1212) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1212) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (1222) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (1232) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1232) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (1242) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (1242) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 01 c9
D (1252) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (1252) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87942
I (1272) SLAVE: OBJ 0x3ffb6030, WRITE (593038 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (1352) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1352) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (1352) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (1362) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1362) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (1372) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (1372) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38
D (1382) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 117111
D (1392) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (1392) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1402) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (1402) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1412) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (1422) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 01 00 01
D (1422) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1432) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (1432) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (1442) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 50 09
D (1442) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (1452) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87930
I (1462) SLAVE: OBJ 0x3ffb6030, WRITE (787234 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (1542) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1542) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (1542) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (1552) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1552) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (1562) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (1572) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57
D (1572) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 116182
D (1582) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (1582) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1592) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (1602) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1602) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (1612) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 02 00 01
D (1612) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1622) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (1622) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (1632) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 a0 09
D (1642) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (1642) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87930
I (1652) SLAVE: OBJ 0x3ffb6030, WRITE (980513 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (1742) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1742) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (1742) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (1752) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1752) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (1762) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (1762) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50
D (1772) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 119582
D (1782) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (1782) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1792) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (1792) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1802) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (1812) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (1812) SLAVE: OBJ 0x3ffb6030, WRITE (1177193 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (1812) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1832) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (1832) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (1842) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 f1 c9
D (1842) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (1852) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (1932) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (1932) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (1932) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (1942) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1942) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (1952) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (1952) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 00 00 01 84 0a
D (1962) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 105178
D (1972) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (1972) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1982) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (1982) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (1992) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (2002) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 11 11
D (2002) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2012) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (2012) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (2022) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 11 11 74 18
D (2022) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2032) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 85673
I (2042) SLAVE: OBJ 0x3ffb6030, READ (1367455 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (2122) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2122) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (2122) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (2132) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2142) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (2142) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (2152) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 01 00 01 d5 ca
D (2152) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 118434
D (2162) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (2162) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2172) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (2182) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2182) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (2192) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 22 22
D (2192) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2202) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (2202) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (2212) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 22 22 20 fd
D (2222) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2222) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 85673
I (2232) SLAVE: OBJ 0x3ffb6030, READ (1560730 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (2322) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2322) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (2322) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (2322) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2332) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (2342) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (2342) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 02 00 01 25 ca
D (2352) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 119479
D (2352) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (2362) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2362) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (2372) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2382) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (2382) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 33 33
I (2392) SLAVE: OBJ 0x3ffb6030, READ (1755050 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (2392) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2402) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (2412) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (2422) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 33 33 ec a1
D (2422) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2432) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (2512) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2512) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (2512) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (2522) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2522) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (2532) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (2542) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 03 00 01 74 0a
D (2542) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108806
D (2552) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (2552) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2562) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (2562) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2572) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (2582) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 44 44
I (2582) SLAVE: OBJ 0x3ffb6030, READ (1948333 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (2582) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2602) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (2602) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (2612) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 44 44 8b 77
D (2612) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2622) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (2712) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2712) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (2712) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (2712) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2722) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (2722) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (2732) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 00 a7 d4
D (2742) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 109949
D (2742) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 00
D (2752) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2752) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (2762) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2772) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (2772) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (2782) SLAVE: OBJ 0x3ffb6030, WRITE (2144494 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x0), SIZE:1
D (2782) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2792) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (2802) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (2802) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (2812) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2822) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97391
D (2952) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (2952) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (2952) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (2952) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2962) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (2962) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (2972) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c
D (2982) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 153842
D (2982) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (2992) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2992) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3002) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3012) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (3012) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (3022) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3022) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (3032) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (3042) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 01 c9
D (3042) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3052) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87930
I (3052) SLAVE: OBJ 0x3ffb6030, WRITE (2384896 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (3142) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3142) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (3142) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (3152) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3162) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (3162) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (3172) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38
D (3172) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 120063
D (3182) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (3192) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3192) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3202) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3202) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (3212) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (3222) SLAVE: OBJ 0x3ffb6030, WRITE (2582057 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (3222) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3232) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (3242) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (3242) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 50 09
D (3252) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3252) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (3342) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3342) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (3342) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (3352) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3352) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (3362) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (3362) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57
D (3372) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110419
D (3382) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (3382) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3392) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3392) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3402) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (3412) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (3412) SLAVE: OBJ 0x3ffb6030, WRITE (2779296 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (3412) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3432) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (3432) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (3442) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 a0 09
D (3452) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3452) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (3542) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3542) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (3542) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (3552) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3552) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (3562) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (3562) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50
D (3572) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 111109
D (3582) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (3582) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3592) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3592) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3602) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (3612) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (3612) SLAVE: OBJ 0x3ffb6030, WRITE (2977224 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (3612) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3632) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (3632) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (3642) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 f1 c9
D (3642) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3652) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (3742) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3742) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (3742) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (3742) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3752) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (3752) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (3762) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 01 66 14
D (3772) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110276
D (3772) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 01
D (3782) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3782) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3792) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3792) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (3802) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (3812) SLAVE: OBJ 0x3ffb6030, WRITE (3174321 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x1), SIZE:1
D (3812) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3822) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (3832) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (3832) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (3842) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3852) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97392
D (3982) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (3982) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (3982) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (3982) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3992) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (3992) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (4002) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 00 00 01 84 0a
D (4002) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 152835
D (4012) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (4022) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4022) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (4032) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4032) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (4042) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 11 11
D (4052) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4052) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (4062) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (4062) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 11 11 74 18
D (4072) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4072) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 85673
I (4082) SLAVE: OBJ 0x3ffb6030, READ (3411979 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (4172) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4172) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (4172) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (4182) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4182) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (4192) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (4192) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 01 00 01 d5 ca
D (4202) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 118435
D (4202) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (4212) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4212) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (4222) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4232) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (4232) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 22 22
I (4242) SLAVE: OBJ 0x3ffb6030, READ (3605254 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (4242) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4252) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (4262) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (4272) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 22 22 20 fd
D (4272) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4282) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (4362) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4362) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (4362) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (4372) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4372) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (4382) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (4392) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 02 00 01 25 ca
D (4392) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108807
D (4402) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (4402) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4412) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (4412) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4422) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (4432) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 33 33
I (4432) SLAVE: OBJ 0x3ffb6030, READ (3798537 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (4432) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4452) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (4452) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (4462) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 33 33 ec a1
D (4462) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4472) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (4562) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4562) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (4562) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (4562) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4572) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (4572) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (4582) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 03 00 01 74 0a
D (4582) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108802
D (4592) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (4602) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4602) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (4612) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4612) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (4622) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 44 44
I (4632) SLAVE: OBJ 0x3ffb6030, READ (3991816 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (4632) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4642) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (4652) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (4652) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 44 44 8b 77
D (4662) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4662) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (4752) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4752) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (4752) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (4762) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4762) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (4772) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (4772) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 02 26 15
D (4782) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110018
D (4792) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 02
D (4792) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4802) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (4802) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4812) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (4822) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (4822) SLAVE: OBJ 0x3ffb6030, WRITE (4188046 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x2), SIZE:1
D (4822) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4842) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (4842) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (4852) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (4852) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4862) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97392
D (4992) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (4992) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (4992) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (4992) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5002) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (5002) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (5012) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c
D (5022) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 150303
D (5022) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (5032) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5032) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5042) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5052) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (5052) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (5062) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5062) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (5072) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (5082) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 01 c9
D (5082) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5092) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87929
I (5092) SLAVE: OBJ 0x3ffb6030, WRITE (4424909 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (5182) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5182) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (5182) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (5192) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5202) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (5202) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (5212) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38
D (5212) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 120063
D (5222) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (5232) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5232) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5242) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5242) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (5252) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (5262) SLAVE: OBJ 0x3ffb6030, WRITE (4622070 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (5262) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5272) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (5282) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (5282) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 50 09
D (5292) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5292) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (5382) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5382) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (5382) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (5392) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5392) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (5402) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (5402) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57
D (5412) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110419
D (5422) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (5422) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5432) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5432) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5442) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (5452) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (5452) SLAVE: OBJ 0x3ffb6030, WRITE (4819309 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (5452) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5472) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (5472) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (5482) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 a0 09
D (5492) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5492) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (5582) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5582) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (5582) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (5592) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5592) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (5602) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (5602) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50
D (5612) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 111109
D (5622) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (5622) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5632) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5632) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5642) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (5652) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (5652) SLAVE: OBJ 0x3ffb6030, WRITE (5017238 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (5652) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5672) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (5672) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (5682) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 f1 c9
D (5682) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5692) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (5782) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5782) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (5782) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (5782) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5792) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (5792) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (5802) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 03 e7 d5
D (5812) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110276
D (5812) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 03
D (5822) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5822) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5832) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5832) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (5842) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (5852) SLAVE: OBJ 0x3ffb6030, WRITE (5214334 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x3), SIZE:1
D (5852) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (5862) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (5872) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (5872) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (5882) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5892) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97392
D (6022) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6022) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (6022) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (6022) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6032) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (6032) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (6042) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 00 00 01 84 0a
D (6042) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 152834
D (6052) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (6062) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6062) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (6072) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6072) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (6082) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 11 11
D (6092) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6092) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (6102) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (6102) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 11 11 74 18
D (6112) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6112) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 85673
I (6122) SLAVE: OBJ 0x3ffb6030, READ (5451992 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (6212) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6212) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (6212) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (6222) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6222) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (6232) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (6232) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 01 00 01 d5 ca
D (6242) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 118434
D (6242) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (6252) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6252) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (6262) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6272) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (6272) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 22 22
I (6282) SLAVE: OBJ 0x3ffb6030, READ (5645267 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (6282) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6292) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (6302) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (6312) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 22 22 20 fd
D (6312) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6322) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (6402) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6402) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (6402) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (6412) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6412) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (6422) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (6432) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 02 00 01 25 ca
D (6432) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108806
D (6442) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (6442) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6452) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (6452) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6462) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (6472) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 33 33
I (6472) SLAVE: OBJ 0x3ffb6030, READ (5838550 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (6472) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6492) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (6492) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (6502) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 33 33 ec a1
D (6502) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6512) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (6602) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6602) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (6602) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (6602) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6612) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (6612) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (6622) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 03 00 01 74 0a
D (6622) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108802
D (6632) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (6642) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6642) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (6652) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6652) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (6662) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 44 44
I (6672) SLAVE: OBJ 0x3ffb6030, READ (6031829 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (6672) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6682) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (6692) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (6692) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 44 44 8b 77
D (6702) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6702) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (6792) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6792) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (6792) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (6802) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6802) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (6812) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (6812) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 04 a6 17
D (6822) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110018
D (6832) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 04
D (6832) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6842) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (6842) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6852) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (6862) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (6862) SLAVE: OBJ 0x3ffb6030, WRITE (6228059 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x4), SIZE:1
D (6862) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (6882) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (6882) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (6892) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (6892) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6902) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97392
D (7032) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7032) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (7032) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (7032) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7042) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (7042) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (7052) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c
D (7062) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 150303
D (7062) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (7072) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7072) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (7082) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7092) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (7092) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (7102) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7102) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (7112) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (7122) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 01 c9
D (7122) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7132) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87930
I (7132) SLAVE: OBJ 0x3ffb6030, WRITE (6464922 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (7222) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7222) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (7222) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (7232) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7242) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (7242) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (7252) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38
D (7252) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 120063
D (7262) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (7272) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7272) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (7282) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7282) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (7292) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (7302) SLAVE: OBJ 0x3ffb6030, WRITE (6662083 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (7302) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7312) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (7322) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (7322) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 50 09
D (7332) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7332) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (7422) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7422) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (7422) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (7432) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7432) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (7442) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (7442) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57
D (7452) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110419
D (7462) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (7462) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7472) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (7472) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7482) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (7492) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (7492) SLAVE: OBJ 0x3ffb6030, WRITE (6859322 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (7492) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7512) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (7512) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (7522) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 a0 09
D (7532) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7532) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (7622) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7622) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (7622) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (7632) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7632) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (7642) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (7642) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50
D (7652) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 111109
D (7662) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (7662) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7672) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (7672) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7682) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (7692) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (7692) SLAVE: OBJ 0x3ffb6030, WRITE (7057251 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (7692) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7712) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (7712) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (7722) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 f1 c9
D (7722) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7732) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (7822) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7822) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (7822) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (7822) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7832) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (7832) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (7842) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 05 67 d7
D (7852) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110276
D (7852) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 05
D (7862) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7862) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (7872) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7872) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (7882) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (7892) SLAVE: OBJ 0x3ffb6030, WRITE (7254347 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x5), SIZE:1
D (7892) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (7902) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (7912) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (7912) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (7922) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7932) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97392
D (8062) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8062) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (8062) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (8062) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8072) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (8072) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (8082) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 00 00 01 84 0a
D (8082) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 152765
D (8092) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (8102) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8102) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (8112) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8112) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (8122) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 11 11
D (8132) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8132) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (8142) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (8142) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 11 11 74 18
D (8152) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8152) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 85673
I (8162) SLAVE: OBJ 0x3ffb6030, READ (7491936 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (8252) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8252) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (8252) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (8262) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8262) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (8272) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (8272) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 01 00 01 d5 ca
D (8282) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 118434
D (8282) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (8292) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8292) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (8302) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8312) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (8312) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 22 22
I (8322) SLAVE: OBJ 0x3ffb6030, READ (7685211 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (8322) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8332) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (8342) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (8352) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 22 22 20 fd
D (8352) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8362) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (8442) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8442) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (8442) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (8452) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8452) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (8462) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (8472) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 02 00 01 25 ca
D (8472) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108806
D (8482) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (8482) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8492) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (8492) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8502) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (8512) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 33 33
I (8512) SLAVE: OBJ 0x3ffb6030, READ (7878494 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (8512) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8532) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (8532) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (8542) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 33 33 ec a1
D (8542) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8552) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (8642) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8642) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (8642) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (8642) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8652) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (8652) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (8662) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 03 00 01 74 0a
D (8662) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 108803
D (8672) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (8682) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8682) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (8692) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8692) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (8702) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 44 44
I (8712) SLAVE: OBJ 0x3ffb6030, READ (8071773 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (8712) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8722) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (8732) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (8732) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 44 44 8b 77
D (8742) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8742) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95308
D (8832) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8832) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (8832) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (8842) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8842) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (8852) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (8852) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 06 27 d6
D (8862) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 109949
D (8872) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 06
D (8872) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8882) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (8882) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8892) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (8902) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (8902) SLAVE: OBJ 0x3ffb6030, WRITE (8267934 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x6), SIZE:1
D (8902) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (8922) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (8922) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (8932) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (8932) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8942) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97391
D (9072) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9072) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (9072) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (9072) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9082) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (9082) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (9092) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c
D (9102) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 150441
D (9102) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (9112) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9112) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (9122) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9132) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (9132) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (9142) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9142) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (9152) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (9162) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 01 c9
D (9162) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9172) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 87930
I (9172) SLAVE: OBJ 0x3ffb6030, WRITE (8504935 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (9262) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9262) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (9262) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (9272) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9282) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (9282) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (9292) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38
D (9292) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 120063
D (9302) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (9312) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9312) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (9322) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9322) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (9332) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (9342) SLAVE: OBJ 0x3ffb6030, WRITE (8702096 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (9342) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9352) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (9362) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (9362) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 50 09
D (9372) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9372) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (9462) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9462) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (9462) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (9472) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9472) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (9482) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (9482) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57
D (9492) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110419
D (9502) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (9502) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9512) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (9512) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9522) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (9532) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (9532) SLAVE: OBJ 0x3ffb6030, WRITE (8899335 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (9532) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9552) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (9552) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (9562) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 a0 09
D (9572) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9572) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (9662) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9662) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (9662) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (9672) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9672) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (9682) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (9682) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50
D (9692) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 111040
D (9702) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (9702) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9712) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (9712) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9722) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (9732) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (9732) SLAVE: OBJ 0x3ffb6030, WRITE (9097194 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (9732) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9752) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (9752) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (9762) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 f1 c9
D (9762) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9772) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97652
D (9862) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9862) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (9862) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (9862) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9872) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (9872) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (9882) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 07 e6 16
D (9892) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110275
D (9892) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 07
D (9902) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9902) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (9912) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9912) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (9922) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (9932) SLAVE: OBJ 0x3ffb6030, WRITE (9294290 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x7), SIZE:1
D (9932) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (9942) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (9952) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (9952) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (9962) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9962) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97392
D (10102) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10102) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (10102) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (10102) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10112) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (10112) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (10122) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 00 00 01 84 0a
D (10132) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 153270
D (10132) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (10142) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10142) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (10152) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10152) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (10162) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 11 11
D (10172) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10172) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (10182) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (10182) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 11 11 74 18
D (10192) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10192) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 86975
I (10202) SLAVE: OBJ 0x3ffb6030, READ (9532991 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (10292) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10292) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (10292) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (10302) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10302) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (10312) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (10322) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 01 00 01 d5 ca
D (10322) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 120428
D (10332) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (10332) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10342) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (10342) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10352) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (10362) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 22 22
I (10362) SLAVE: OBJ 0x3ffb6030, READ (9729389 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (10362) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10382) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (10382) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (10392) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 22 22 20 fd
D (10402) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10402) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 96697
D (10492) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10492) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (10492) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (10502) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10502) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (10512) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (10512) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 02 00 01 25 ca
D (10522) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110992
D (10532) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (10532) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10532) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (10542) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10552) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (10562) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 33 33
I (10562) SLAVE: OBJ 0x3ffb6030, READ (9926073 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (10562) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10572) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (10582) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (10592) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 33 33 ec a1
D (10592) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10602) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 96697
D (10692) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10692) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (10692) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (10692) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10702) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (10702) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (10712) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 03 00 01 74 0a
D (10712) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110711
D (10722) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (10732) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10732) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (10742) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10742) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (10752) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 44 44
D (10762) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10762) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (10772) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (10772) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 44 44 8b 77
D (10782) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10782) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 86975
I (10792) SLAVE: OBJ 0x3ffb6030, READ (10122475 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (10882) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10882) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (10882) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (10892) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10892) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (10902) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (10912) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 08 a6 12
D (10912) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 121644
D (10922) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 08
D (10932) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10932) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (10942) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10942) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (10952) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (10962) SLAVE: OBJ 0x3ffb6030, WRITE (10321824 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x8), SIZE:1
D (10962) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (10972) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (10982) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (10982) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (10992) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10992) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 98867
D (11132) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11132) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (11132) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (11132) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11142) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (11142) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (11152) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c
D (11162) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 156499
D (11162) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (11172) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11172) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (11182) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11192) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (11202) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (11202) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11212) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (11212) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (11222) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 01 c9
D (11222) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11232) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 89232
I (11252) SLAVE: OBJ 0x3ffb6030, WRITE (10566186 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (11332) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11332) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (11332) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (11332) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11342) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (11342) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (11352) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38
D (11362) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 122058
D (11362) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (11372) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11372) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (11382) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11392) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (11402) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 01 00 01
D (11402) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11412) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (11412) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (11422) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 50 09
D (11422) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11432) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 89232
I (11442) SLAVE: OBJ 0x3ffb6030, WRITE (10766470 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (11532) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11532) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (11532) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (11532) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11542) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (11552) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (11552) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57
D (11562) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 122063
D (11572) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (11572) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11572) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (11582) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11592) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (11602) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (11602) SLAVE: OBJ 0x3ffb6030, WRITE (10966759 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (11602) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11622) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (11622) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (11632) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 a0 09
D (11632) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11642) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 99128
D (11732) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11732) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (11732) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (11732) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11742) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (11752) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (11752) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50
D (11762) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 112171
D (11772) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (11772) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11782) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (11782) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11792) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (11802) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (11802) SLAVE: OBJ 0x3ffb6030, WRITE (11167051 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (11802) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11822) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (11822) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (11832) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 f1 c9
D (11832) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11842) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 99127
D (11932) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (11932) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (11932) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (11942) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11942) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (11952) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (11952) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 09 67 d2
D (11962) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 113068
D (11972) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 09
D (11972) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11982) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (11982) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11992) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (12002) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (12002) SLAVE: OBJ 0x3ffb6030, WRITE (11368242 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x9), SIZE:1
D (12002) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12022) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (12022) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (12032) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (12032) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12042) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 98868
D (12182) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12182) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (12182) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (12182) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12192) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (12192) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (12202) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 00 00 01 84 0a
D (12212) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 158889
D (12212) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (12222) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12222) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (12232) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12232) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (12242) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 11 11
D (12252) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12252) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (12262) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (12262) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 11 11 74 18
D (12272) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12272) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 86975
I (12282) SLAVE: OBJ 0x3ffb6030, READ (11613257 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (12372) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12372) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (12372) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (12382) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12382) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (12392) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (12402) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 01 00 01 d5 ca
D (12402) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 120428
D (12412) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (12412) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12422) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (12422) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12432) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (12442) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 22 22
I (12442) SLAVE: OBJ 0x3ffb6030, READ (11809655 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (12442) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12462) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (12462) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (12472) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 22 22 20 fd
D (12482) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12482) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 96784
D (12572) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12572) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (12572) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (12582) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12582) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (12592) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (12592) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 02 00 01 25 ca
D (12602) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110627
D (12612) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (12612) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12612) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (12622) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12632) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (12642) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 33 33
I (12642) SLAVE: OBJ 0x3ffb6030, READ (12006061 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (12642) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12652) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (12662) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (12672) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 33 33 ec a1
D (12672) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12682) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 96784
D (12772) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12772) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 8.
D (12772) mb_port.serial: mbs_rtu@0x3ffb6030, frame 8 bytes is ready.
D (12772) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12782) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (12782) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 8 bytes.
D (12792) mbs_rtu@0x3ffb6030:PORT_RECV: 01 03 00 03 00 01 74 0a
D (12792) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 110623
D (12802) mbs_rtu@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (12812) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12812) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (12822) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12822) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (12832) mbs_rtu@0x3ffb6030:MB_SEND: 03 02 44 44
D (12842) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12842) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (12852) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (7) bytes.
D (12852) mbs_rtu@0x3ffb6030:PORT_SEND: 01 03 02 44 44 8b 77
D (12862) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12862) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 86975
I (12872) SLAVE: OBJ 0x3ffb6030, READ (12202463 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (12962) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (12962) mb_port.serial: mbs_rtu@0x3ffb6030, data event, len: 11.
D (12962) mb_port.serial: mbs_rtu@0x3ffb6030, frame 11 bytes is ready.
D (12972) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12972) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (12982) mb_port.serial: mbs_rtu@0x3ffb6030, received data: 11 bytes.
D (12992) mbs_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 02 00 0a 27 d3
D (12992) mb_port.serial: mbs_rtu@0x3ffb6030, serial processing time[us] = 121644
D (13002) mbs_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 0a
D (13012) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (13012) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (13022) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13022) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (13032) mbs_rtu@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (13042) SLAVE: OBJ 0x3ffb6030, WRITE (12401812 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0xa), SIZE:1
D (13042) mb_port.serial: mbs_rtu@0x3ffb6030, UART[1] event:
D (13052) mb_port.serial: mbs_rtu@0x3ffb6030, uart rx break.
D (13062) mb_port.serial: mbs_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (13062) mbs_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 40 08
D (13072) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (13072) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 98868
D (13152) TEST_COMMON: Stop slave: 0x3ffb6030.
I (13212) TEST_COMMON: Destroy slave, inst: 0x3ffb6030.
D (13212) mb_port.serial: mbs_rtu@0x3ffb6030, suspend port.
D (13212) mb_port.timer: mbs_rtu@0x3ffb6030, timer stop, returns 259.
D (13222) TEST_COMMON: Notify task done, inst: 0x3ffbad50.
./main/test_modbus_rs485_comm_master_slave.c:126:Modbus RS485 RTU multi device master - slave case.:PASS
Test ran in 12396ms

&amp;lt;-------------------&amp;gt;

I (952) uart: queue free spaces: 20
D (952) intr_alloc: Connected src 35 to int 8 (cpu 0)
I (962) mb_port.serial: mbm_rtu@0x3ffb6030, suspend port from task.
D (962) mb_port.serial: created object @0x3ffb7640
D (962) mb_port.timer: initialized mb_port.timer object @0x3ffb91f0
D (972) mb_port.event: initialized object @0x3ffb9228
D (972) mb_transp.rtu_master: created mb_transp.rtu_master object @0x3ffb7384
D (982) mb_object.master: created object mbm_rtu@0x3ffb6030
I (992) TEST_COMMON: 0x3ffb6030, modbus master stack is initialized
D (992) mb_port.serial: mbm_rtu@0x3ffb6030, resume port.
D (1002) mb_port.timeD (1002) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (1002) mb_port.timer: timer mode: (0) triggered
r: mbm_rtu@0x3ffb6030, start timer (1750).
D (1012) mb_object.master: 0x3ffb6030:EV_READY
I (1022) TEST_COMMON: 0x3ffb6030, modbus master start...
D (1032) TEST_COMMON: Notify task start 0x3ffbab0c
D (1032) TEST_COMMON: Task: 0x3ffbab0c, get notify value = 1
D (1032) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1052) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1052) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (1052) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1062) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (1062) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (1072) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c
D (1072) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (1082) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1132) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1132) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (1132) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (1132) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1142) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (1142) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 01 c9
D (1152) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62020
D (1152) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1162) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (1172) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1172) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1182) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1182) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (1192) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (1192) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130733
D (1212) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1212) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (1232) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (1232) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1232) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1252) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (1252) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1252) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (1262) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (1262) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38
D (1272) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (1272) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1322) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1322) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (1322) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (1332) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1332) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (1342) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 50 09
D (1342) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62655
D (1352) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1362) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (1362) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1362) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1372) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1382) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (1382) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (1392) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125139
D (1402) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1402) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (1422) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (1422) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1442) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1442) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (1442) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1442) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (1452) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (1462) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57
D (1462) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (1472) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1512) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1512) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (1512) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (1522) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1522) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (1532) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 a0 09
D (1542) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61753
D (1542) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1552) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (1552) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1562) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1562) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1572) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (1572) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (1582) mb_object.master: 0x3ffb6030, transaction processing time(us) = 128281
D (1602) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1602) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (1602) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (1622) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1622) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1642) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (1642) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1642) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (1642) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (1652) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50
D (1662) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (1662) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1712) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1712) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (1712) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (1722) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1722) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (1732) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 f1 c9
D (1732) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 65084
D (1742) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1752) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (1752) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1752) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1762) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1762) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (1772) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (1782) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125045
D (1792) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1792) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (1812) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (1812) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1832) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (1832) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (1832) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1832) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (1842) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (1842) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 00 00 01 84 0a
D (1852) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (1862) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1902) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (1902) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (1902) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (1912) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1912) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (1922) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 11 11 74 18
D (1922) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60063
D (1932) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1942) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 11 11
D (1942) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1942) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1952) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1952) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (1962) mbm_error_cb_request_success: 03 00 00 00 01
D (1972) mb_object.master: 0x3ffb6030, transaction processing time(us) = 124255
D (1982) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1982) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (2002) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (2002) TEST_COMMON: CHAR #0, value is ok.
D (2002) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2022) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2022) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (2022) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2032) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (2032) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (2042) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 01 00 01 d5 ca
D (2042) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (2052) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2092) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2092) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (2092) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (2102) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2102) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (2112) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 22 22 20 fd
D (2112) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60088
D (2122) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2132) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 22 22
D (2132) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2142) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2152) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (2152) mbm_error_cb_request_success: 03 00 01 00 01
D (2162) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126750
D (2182) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2182) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (2182) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (2202) TEST_COMMON: CHAR #1, value is ok.
D (2202) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2202) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2222) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (2222) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2222) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (2222) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (2232) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 02 00 01 25 ca
D (2242) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (2242) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2292) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2292) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (2292) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (2292) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2302) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (2302) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 33 33 ec a1
D (2312) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61128
D (2322) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2322) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 33 33
D (2332) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2332) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2342) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2342) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (2352) mbm_error_cb_request_success: 03 00 02 00 01
D (2352) mb_object.master: 0x3ffb6030, transaction processing time(us) = 122045
D (2372) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2372) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (2392) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (2392) TEST_COMMON: CHAR #2, value is ok.
D (2392) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2412) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2412) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (2412) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2412) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (2422) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (2432) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 03 00 01 74 0a
D (2432) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (2442) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2482) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2482) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (2482) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (2492) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2492) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (2502) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 44 44 8b 77
D (2502) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (2512) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2522) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 44 44
D (2522) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2532) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2532) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2542) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (2542) mbm_error_cb_request_success: 03 00 03 00 01
D (2552) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125154
D (2562) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2562) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (2582) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (2582) TEST_COMMON: CHAR #3, value is ok.
D (2582) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2602) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2602) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 00
D (2602) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2612) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (2612) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (2622) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 00 a7 d4
D (2632) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (2632) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2682) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2682) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (2682) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (2682) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2692) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (2692) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (2702) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61712
D (2712) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2712) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (2722) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2722) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2732) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2732) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (2742) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00
D (2742) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130541
D (2762) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2762) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (2782) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (2842) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2842) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (2842) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (2842) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2852) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (2852) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (2862) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c
D (2872) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (2872) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2922) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (2922) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (2922) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (2922) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2932) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (2932) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 01 c9
D (2942) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61675
D (2952) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2952) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (2962) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2962) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2972) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2972) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (2982) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (2982) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130488
D (3002) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3002) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (3022) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (3022) TEST_COMMON: CHAR #0, value is ok.
D (3022) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3042) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3042) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (3042) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3052) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (3052) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (3062) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38
D (3062) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (3072) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3112) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3112) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (3112) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (3122) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3132) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (3132) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 50 09
D (3142) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61803
D (3142) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3152) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (3162) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3162) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3172) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3172) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (3182) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (3182) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129812
D (3202) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3202) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (3222) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (3222) TEST_COMMON: CHAR #1, value is ok.
D (3222) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3242) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3242) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (3242) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3242) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (3252) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (3252) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57
D (3262) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (3272) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3312) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3312) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (3312) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (3322) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3322) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (3332) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 a0 09
D (3332) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61803
D (3342) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3352) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (3352) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3362) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3362) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3372) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (3372) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (3382) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127069
D (3402) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3402) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (3402) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (3422) TEST_COMMON: CHAR #2, value is ok.
D (3422) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3422) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3442) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (3442) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3442) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (3452) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (3452) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50
D (3462) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (3462) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3512) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3512) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (3512) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (3522) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3522) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (3532) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 f1 c9
D (3532) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62427
D (3542) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3552) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (3552) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3552) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3562) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3572) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (3572) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (3582) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125054
D (3592) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3592) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (3612) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (3612) TEST_COMMON: CHAR #3, value is ok.
D (3612) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3632) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3632) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 01
D (3632) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3642) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (3642) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (3652) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 01 66 14
D (3662) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (3662) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3712) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3712) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (3712) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (3712) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3722) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (3722) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (3732) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61732
D (3742) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3742) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (3752) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3752) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3762) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3762) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (3772) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01
D (3772) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130557
D (3792) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3792) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (3812) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (3872) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3872) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (3872) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (3872) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3882) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (3882) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (3892) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 00 00 01 84 0a
D (3892) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (3902) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3942) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (3942) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (3942) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (3952) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3952) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (3962) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 11 11 74 18
D (3972) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60101
D (3972) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3982) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 11 11
D (3982) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3992) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3992) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4002) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (4002) mbm_error_cb_request_success: 03 00 00 00 01
D (4012) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126756
D (4032) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4032) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (4032) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (4052) TEST_COMMON: CHAR #0, value is ok.
D (4052) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4052) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4072) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (4072) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4072) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (4082) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (4082) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 01 00 01 d5 ca
D (4092) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (4092) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4142) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4142) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (4142) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (4142) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4152) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (4152) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 22 22 20 fd
D (4162) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (4172) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4172) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 22 22
D (4182) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4182) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4192) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4192) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (4202) mbm_error_cb_request_success: 03 00 01 00 01
D (4202) mb_object.master: 0x3ffb6030, transaction processing time(us) = 122231
D (4222) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4222) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (4242) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (4242) TEST_COMMON: CHAR #1, value is ok.
D (4242) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4262) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4262) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (4262) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4262) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (4272) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (4282) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 02 00 01 25 ca
D (4282) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (4292) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4332) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4332) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (4332) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (4342) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4342) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (4352) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 33 33 ec a1
D (4352) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (4362) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4372) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 33 33
D (4372) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4382) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4382) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4392) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (4392) mbm_error_cb_request_success: 03 00 02 00 01
D (4402) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125356
D (4412) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4412) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (4432) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (4432) TEST_COMMON: CHAR #2, value is ok.
D (4432) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4452) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4452) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (4452) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4462) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (4462) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (4472) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 03 00 01 74 0a
D (4472) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (4482) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4522) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4522) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (4522) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (4532) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4532) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (4542) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 44 44 8b 77
D (4552) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (4552) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4562) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 44 44
D (4562) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4572) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4572) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4582) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (4582) mbm_error_cb_request_success: 03 00 03 00 01
D (4592) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126754
D (4612) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4612) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (4612) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (4632) TEST_COMMON: CHAR #3, value is ok.
D (4632) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4632) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4652) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 02
D (4652) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4652) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (4662) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (4662) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 02 26 15
D (4672) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (4682) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4722) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4722) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (4722) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (4732) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4732) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (4742) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (4742) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61781
D (4752) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4762) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (4762) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4772) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4772) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4782) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (4782) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02
D (4792) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125933
D (4802) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4802) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (4822) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (4882) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4882) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (4882) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (4882) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4892) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (4892) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (4902) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c
D (4912) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (4912) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4962) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (4962) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (4962) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (4962) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4972) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (4972) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 01 c9
D (4982) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61688
D (4992) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4992) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (5002) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5002) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5012) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5012) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (5022) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (5022) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130501
D (5042) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5042) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (5062) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (5062) TEST_COMMON: CHAR #0, value is ok.
D (5062) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5082) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5082) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (5082) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5092) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (5092) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (5102) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38
D (5102) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (5112) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5152) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5152) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (5152) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (5162) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5172) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (5172) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 50 09
D (5182) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61803
D (5182) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5192) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (5202) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5202) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5212) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5212) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (5222) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (5222) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129824
D (5242) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5242) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (5262) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (5262) TEST_COMMON: CHAR #1, value is ok.
D (5262) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5282) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5282) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (5282) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5282) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (5292) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (5292) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57
D (5302) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (5312) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5352) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5352) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (5352) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (5362) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5362) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (5372) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 a0 09
D (5372) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61803
D (5382) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5392) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (5392) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5402) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5402) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5412) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (5412) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (5422) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127083
D (5442) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5442) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (5442) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (5462) TEST_COMMON: CHAR #2, value is ok.
D (5462) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5462) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5482) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (5482) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5482) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (5492) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (5492) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50
D (5502) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (5502) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5552) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5552) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (5552) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (5562) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5562) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (5572) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 f1 c9
D (5572) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62427
D (5582) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5592) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (5592) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5592) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5602) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5612) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (5612) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (5622) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125067
D (5632) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5632) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (5652) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (5652) TEST_COMMON: CHAR #3, value is ok.
D (5652) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5672) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5672) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 03
D (5672) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5682) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (5682) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (5692) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 03 e7 d5
D (5702) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (5702) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5752) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5752) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (5752) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (5752) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5762) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (5762) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (5772) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61732
D (5782) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5782) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (5792) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5792) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5802) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5802) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (5812) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03
D (5812) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130557
D (5832) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5832) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (5852) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (5912) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5912) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (5912) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (5912) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5922) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (5922) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (5932) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 00 00 01 84 0a
D (5932) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (5942) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5982) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (5982) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (5982) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (5992) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5992) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (6002) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 11 11 74 18
D (6012) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60114
D (6012) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6022) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 11 11
D (6022) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6032) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6032) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6042) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (6042) mbm_error_cb_request_success: 03 00 00 00 01
D (6052) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126769
D (6072) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6072) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (6072) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (6092) TEST_COMMON: CHAR #0, value is ok.
D (6092) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6092) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6112) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (6112) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6112) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (6122) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (6122) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 01 00 01 d5 ca
D (6132) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (6132) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6182) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6182) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (6182) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (6182) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6192) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (6192) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 22 22 20 fd
D (6202) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (6212) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6212) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 22 22
D (6222) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6222) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6232) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6232) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (6242) mbm_error_cb_request_success: 03 00 01 00 01
D (6242) mb_object.master: 0x3ffb6030, transaction processing time(us) = 122243
D (6262) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6262) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (6282) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (6282) TEST_COMMON: CHAR #1, value is ok.
D (6282) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6302) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6302) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (6302) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6302) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (6312) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (6322) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 02 00 01 25 ca
D (6322) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (6332) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6372) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6372) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (6372) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (6382) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6382) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (6392) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 33 33 ec a1
D (6392) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (6402) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6412) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 33 33
D (6412) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6422) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6422) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6432) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (6432) mbm_error_cb_request_success: 03 00 02 00 01
D (6442) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125369
D (6452) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6452) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (6472) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (6472) TEST_COMMON: CHAR #2, value is ok.
D (6472) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6492) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6492) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (6492) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6502) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (6502) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (6512) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 03 00 01 74 0a
D (6512) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (6522) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6562) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6562) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (6562) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (6572) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6572) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (6582) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 44 44 8b 77
D (6592) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60087
D (6592) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6602) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 44 44
D (6602) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6612) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6612) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6622) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (6622) mbm_error_cb_request_success: 03 00 03 00 01
D (6632) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126754
D (6652) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6652) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (6652) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (6672) TEST_COMMON: CHAR #3, value is ok.
D (6672) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6672) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6692) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 04
D (6692) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6692) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (6702) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (6702) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 04 a6 17
D (6712) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (6722) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6762) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6762) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (6762) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (6772) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6772) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (6782) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (6782) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61781
D (6792) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6802) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (6802) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6812) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6812) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6822) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (6822) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04
D (6832) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125945
D (6842) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6842) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (6862) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (6922) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6922) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (6922) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (6922) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (6932) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (6932) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (6942) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c
D (6952) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (6952) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7002) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7002) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (7002) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (7002) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7012) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (7012) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 01 c9
D (7022) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61701
D (7032) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7032) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (7042) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7042) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7052) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7052) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (7062) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (7062) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130514
D (7082) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7082) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (7102) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (7102) TEST_COMMON: CHAR #0, value is ok.
D (7102) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7122) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7122) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (7122) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7132) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (7132) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (7142) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38
D (7142) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (7152) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7192) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7192) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (7192) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (7202) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7212) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (7212) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 50 09
D (7222) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61803
D (7222) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7232) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (7242) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7242) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7252) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7252) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (7262) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (7262) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129838
D (7282) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7282) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (7302) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (7302) TEST_COMMON: CHAR #1, value is ok.
D (7302) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7322) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7322) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (7322) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7322) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (7332) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (7332) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57
D (7342) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (7352) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7392) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7392) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (7392) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (7402) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7402) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (7412) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 a0 09
D (7412) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61801
D (7422) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7432) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (7432) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7442) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7442) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7452) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (7452) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (7462) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127096
D (7482) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7482) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (7482) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (7502) TEST_COMMON: CHAR #2, value is ok.
D (7502) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7502) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7522) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (7522) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7522) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (7532) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (7532) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50
D (7542) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (7542) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7592) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7592) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (7592) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (7602) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7602) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (7612) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 f1 c9
D (7612) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62427
D (7622) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7632) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (7632) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7632) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7642) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7652) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (7652) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (7662) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125080
D (7672) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7672) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (7692) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (7692) TEST_COMMON: CHAR #3, value is ok.
D (7692) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7712) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7712) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 05
D (7712) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7722) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (7722) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (7732) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 05 67 d7
D (7742) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (7742) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7792) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7792) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (7792) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (7792) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7802) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (7802) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (7812) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61739
D (7822) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7822) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (7832) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7832) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7842) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7842) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (7852) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05
D (7852) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130558
D (7872) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7872) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (7892) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (7952) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7952) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (7952) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (7952) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (7962) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (7962) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (7972) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 00 00 01 84 0a
D (7972) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (7982) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8022) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8022) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (8022) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (8032) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8032) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (8042) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 11 11 74 18
D (8052) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60058
D (8052) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8062) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 11 11
D (8062) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8072) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8072) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8082) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (8082) mbm_error_cb_request_success: 03 00 00 00 01
D (8092) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126713
D (8112) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8112) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (8112) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (8132) TEST_COMMON: CHAR #0, value is ok.
D (8132) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8132) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8152) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (8152) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8152) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (8162) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (8162) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 01 00 01 d5 ca
D (8172) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (8172) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8222) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8222) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (8222) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (8222) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8232) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (8232) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 22 22 20 fd
D (8242) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60088
D (8252) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8252) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 22 22
D (8262) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8262) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8272) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8272) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (8282) mbm_error_cb_request_success: 03 00 01 00 01
D (8282) mb_object.master: 0x3ffb6030, transaction processing time(us) = 122188
D (8302) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8302) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (8322) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (8322) TEST_COMMON: CHAR #1, value is ok.
D (8322) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8342) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8342) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (8342) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8342) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (8352) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (8362) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 02 00 01 25 ca
D (8362) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (8372) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8412) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8412) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (8412) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (8422) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8422) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (8432) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 33 33 ec a1
D (8432) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60088
D (8442) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8452) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 33 33
D (8452) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8462) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8462) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8472) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (8472) mbm_error_cb_request_success: 03 00 02 00 01
D (8482) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125313
D (8492) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8492) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (8512) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (8512) TEST_COMMON: CHAR #2, value is ok.
D (8512) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8532) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8532) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (8532) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8542) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (8542) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (8552) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 03 00 01 74 0a
D (8552) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (8562) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8602) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8602) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (8602) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (8612) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8612) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (8622) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 44 44 8b 77
D (8632) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 60088
D (8632) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8642) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 44 44
D (8642) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8652) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8652) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8662) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (8662) mbm_error_cb_request_success: 03 00 03 00 01
D (8672) mb_object.master: 0x3ffb6030, transaction processing time(us) = 126754
D (8692) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8692) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (8692) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (8712) TEST_COMMON: CHAR #3, value is ok.
D (8712) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8712) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8732) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 06
D (8732) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8732) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (8742) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (8742) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 06 27 d6
D (8752) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (8762) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8802) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8802) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (8802) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (8812) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8812) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (8822) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (8822) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61712
D (8832) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8842) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (8842) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8852) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8852) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8862) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (8862) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06
D (8872) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125821
D (8882) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8882) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (8902) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (8962) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8962) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (8962) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (8962) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (8972) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (8972) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (8982) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c
D (8992) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (8992) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9042) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9042) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (9042) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (9042) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9052) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (9052) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 01 c9
D (9062) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61714
D (9072) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9072) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (9082) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9082) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9092) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9092) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (9102) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (9102) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130527
D (9122) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9122) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (9142) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (9142) TEST_COMMON: CHAR #0, value is ok.
D (9142) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9162) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9162) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (9162) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9172) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (9172) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (9182) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38
D (9182) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (9192) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9232) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9232) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (9232) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (9242) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9252) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (9252) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 50 09
D (9262) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61802
D (9262) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9272) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (9282) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9282) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9292) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9292) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (9302) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (9302) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129850
D (9322) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9322) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (9342) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (9342) TEST_COMMON: CHAR #1, value is ok.
D (9342) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9362) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9362) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (9362) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9362) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (9372) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (9372) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57
D (9382) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (9392) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9432) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9432) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (9432) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (9442) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9442) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (9452) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 a0 09
D (9452) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61803
D (9462) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9472) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (9472) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9482) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9482) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9492) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (9492) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (9502) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127109
D (9522) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9522) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (9522) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (9542) TEST_COMMON: CHAR #2, value is ok.
D (9542) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9542) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9562) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (9562) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9562) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (9572) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (9572) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50
D (9582) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (9582) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9632) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9632) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (9632) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (9642) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9642) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (9652) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 f1 c9
D (9652) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62358
D (9662) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9672) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (9672) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9672) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9682) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9682) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (9692) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (9702) mb_object.master: 0x3ffb6030, transaction processing time(us) = 125024
D (9712) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9712) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (9732) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (9732) TEST_COMMON: CHAR #3, value is ok.
D (9732) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9752) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9752) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 07
D (9752) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9762) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (9762) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (9772) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 07 e6 16
D (9782) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (9782) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9832) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (9832) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (9832) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (9832) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9842) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (9842) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (9852) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61733
D (9862) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9862) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (9872) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9872) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9882) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9882) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (9892) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07
D (9892) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130557
D (9912) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9912) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (9932) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (9992) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9992) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (9992) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (9992) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10002) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (10002) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (10012) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 00 00 01 84 0a
D (10012) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (10022) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10062) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10072) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (10072) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (10072) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10082) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (10082) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 11 11 74 18
D (10092) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61414
D (10102) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10102) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 11 11
D (10112) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10112) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10122) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10122) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (10132) mbm_error_cb_request_success: 03 00 00 00 01
D (10132) mb_object.master: 0x3ffb6030, transaction processing time(us) = 128936
D (10152) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10152) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (10172) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (10172) TEST_COMMON: CHAR #0, value is ok.
D (10172) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10192) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10192) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (10192) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10192) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (10202) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (10212) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 01 00 01 d5 ca
D (10212) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (10222) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10262) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10262) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (10262) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (10272) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10272) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (10282) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 22 22 20 fd
D (10282) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61226
D (10292) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10302) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 22 22
D (10302) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10312) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10312) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10322) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (10322) mbm_error_cb_request_success: 03 00 01 00 01
D (10332) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127299
D (10352) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10352) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (10352) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (10372) TEST_COMMON: CHAR #1, value is ok.
D (10372) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10372) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10392) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (10392) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10392) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (10402) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (10402) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 02 00 01 25 ca
D (10412) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (10412) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10462) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10462) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (10462) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (10462) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10472) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (10482) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 33 33 ec a1
D (10482) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61648
D (10492) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10502) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 33 33
D (10502) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10502) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10512) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10512) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (10522) mbm_error_cb_request_success: 03 00 02 00 01
D (10532) mb_object.master: 0x3ffb6030, transaction processing time(us) = 124222
D (10542) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10542) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (10562) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (10562) TEST_COMMON: CHAR #2, value is ok.
D (10562) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10582) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10582) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (10582) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10592) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (10592) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (10602) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 03 00 01 74 0a
D (10602) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (10612) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10652) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10652) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (10652) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (10662) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10672) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (10672) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 44 44 8b 77
D (10682) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61301
D (10682) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10692) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 44 44
D (10702) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10702) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10712) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10712) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (10722) mbm_error_cb_request_success: 03 00 03 00 01
D (10722) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129009
D (10742) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10742) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (10762) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (10762) TEST_COMMON: CHAR #3, value is ok.
D (10762) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10782) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (10782) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 08
D (10782) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10782) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (10792) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (10802) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 08 a6 12
D (10802) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (10812) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10852) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (10852) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (10852) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (10862) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10872) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (10872) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (10882) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62926
D (10882) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10892) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (10902) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10902) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10912) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10912) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (10922) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08
D (10922) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130678
D (10942) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10942) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (10962) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (11022) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11022) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11022) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (11022) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11032) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (11032) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (11042) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c
D (11052) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (11052) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11102) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11102) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (11102) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (11102) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11112) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (11122) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 00 00 01 01 c9
D (11122) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62911
D (11132) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11142) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (11142) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11152) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11162) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (11162) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (11172) mb_object.master: 0x3ffb6030, transaction processing time(us) = 132766
D (11182) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11182) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (11202) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (11202) TEST_COMMON: CHAR #0, value is ok.
D (11202) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11222) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11222) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (11222) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11232) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (11232) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (11242) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38
D (11252) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (11252) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11302) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11302) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (11302) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (11312) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11312) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (11322) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 01 00 01 50 09
D (11322) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62946
D (11332) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11342) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (11342) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11352) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11352) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11362) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (11362) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (11372) mb_object.master: 0x3ffb6030, transaction processing time(us) = 132812
D (11382) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11382) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (11402) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (11402) TEST_COMMON: CHAR #1, value is ok.
D (11402) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11422) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11422) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (11422) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11432) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (11432) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (11442) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57
D (11452) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (11452) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11502) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11502) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (11502) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (11512) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11512) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (11522) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 02 00 01 a0 09
D (11522) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62946
D (11532) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11542) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (11542) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11552) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11552) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11562) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (11562) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (11572) mb_object.master: 0x3ffb6030, transaction processing time(us) = 132812
D (11582) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11582) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (11602) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (11602) TEST_COMMON: CHAR #2, value is ok.
D (11622) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11622) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11622) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (11622) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11632) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (11632) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (11642) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50
D (11652) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (11652) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11702) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11702) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (11702) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (11712) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11712) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (11722) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 03 00 01 f1 c9
D (11722) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62946
D (11732) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11742) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (11742) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11752) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11752) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11762) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (11762) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (11772) mb_object.master: 0x3ffb6030, transaction processing time(us) = 132812
D (11792) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11792) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (11792) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (11812) TEST_COMMON: CHAR #3, value is ok.
D (11812) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11812) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (11832) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 09
D (11832) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11832) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (11842) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (11842) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 09 67 d2
D (11852) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (11852) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11902) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (11902) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (11902) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (11912) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11912) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (11922) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (11922) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 63849
D (11932) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11942) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (11942) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11952) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11952) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11962) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (11962) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09
D (11972) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127236
D (11992) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11992) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (11992) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (12072) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12072) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12072) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (12072) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12082) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (12082) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (12092) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 00 00 01 84 0a
D (12102) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (12102) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12152) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12152) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (12152) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (12152) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12162) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (12162) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 11 11 74 18
D (12172) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61325
D (12182) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12182) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 11 11
D (12192) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12192) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12202) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12202) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (12212) mbm_error_cb_request_success: 03 00 00 00 01
D (12212) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129021
D (12232) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12232) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (12252) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (12252) TEST_COMMON: CHAR #0, value is ok.
D (12252) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12272) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12272) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (12272) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12272) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (12282) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (12292) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 01 00 01 d5 ca
D (12292) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (12302) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12342) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12342) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (12342) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (12352) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12352) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (12362) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 22 22 20 fd
D (12362) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61232
D (12372) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12382) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 22 22
D (12382) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12392) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12392) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12402) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (12402) mbm_error_cb_request_success: 03 00 01 00 01
D (12412) mb_object.master: 0x3ffb6030, transaction processing time(us) = 127562
D (12432) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12432) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (12432) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (12452) TEST_COMMON: CHAR #1, value is ok.
D (12452) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12452) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12472) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (12472) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12472) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (12482) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (12482) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 02 00 01 25 ca
D (12492) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (12492) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12542) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12542) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (12542) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (12542) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12552) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (12562) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 33 33 ec a1
D (12562) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61371
D (12572) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12572) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 33 33
D (12582) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12582) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12592) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12592) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (12602) mbm_error_cb_request_success: 03 00 02 00 01
D (12612) mb_object.master: 0x3ffb6030, transaction processing time(us) = 124206
D (12622) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12622) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (12642) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (12642) TEST_COMMON: CHAR #2, value is ok.
D (12642) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12662) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12662) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (12662) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12672) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (12672) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (8) bytes.
D (12682) mbm_rtu@0x3ffb6030:PORT_SEND: 01 03 00 03 00 01 74 0a
D (12682) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (12692) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12732) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12732) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 7.
D (12732) mb_port.serial: mbm_rtu@0x3ffb6030, frame 7 bytes is ready.
D (12742) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12752) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 7 bytes.
D (12752) mbm_rtu@0x3ffb6030:PORT_RECV: 01 03 02 44 44 8b 77
D (12762) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 61301
D (12762) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12772) mbm_rtu@0x3ffb6030:MB_RECV: 03 02 44 44
D (12782) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12782) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12792) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12792) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (12802) mbm_error_cb_request_success: 03 00 03 00 01
D (12802) mb_object.master: 0x3ffb6030, transaction processing time(us) = 129009
D (12822) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12822) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (12842) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (12842) TEST_COMMON: CHAR #3, value is ok.
D (12842) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12862) mb_port.event: mbm_rtu@0x3ffb6030, mb take resource, (300 ticks).
D (12862) mbm_rtu@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 0a
D (12862) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12862) mb_port.serial: mbm_rtu@0x3ffb6030, uart rx break.
D (12872) mb_port.serial: mbm_rtu@0x3ffb6030, tx buffer sent: (11) bytes.
D (12882) mbm_rtu@0x3ffb6030:PORT_SEND: 01 10 00 04 00 01 02 00 0a 27 d3
D (12882) mb_port.timer: mbm_rtu@0x3ffb6030, respond enable timeout (2000).
D (12892) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12932) mb_port.serial: mbm_rtu@0x3ffb6030, UART[1] event:
D (12932) mb_port.serial: mbm_rtu@0x3ffb6030, data event, len: 8.
D (12932) mb_port.serial: mbm_rtu@0x3ffb6030, frame 8 bytes is ready.
D (12942) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12952) mb_port.serial: mbm_rtu@0x3ffb6030, received data: 8 bytes.
D (12952) mbm_rtu@0x3ffb6030:PORT_RECV: 01 10 00 04 00 01 40 08
D (12962) mb_port.serial: mbm_rtu@0x3ffb6030, serial processing time[us] = 62925
D (12962) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12972) mbm_rtu@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (12982) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12982) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12992) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12992) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
D (13002) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a
D (13002) mb_object.master: 0x3ffb6030, transaction processing time(us) = 130666
D (13022) mb_port.event: mbm_rtu@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (13022) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (13042) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (13102) TEST_COMMON: Destroy master, inst: 0x3ffb6030.
D (13102) mb_port.serial: mbm_rtu@0x3ffb6030, suspend port.
D (13102) mb_port.timer: mbm_rtu@0x3ffb6030, timer stop, returns 259.
./main/test_modbus_rs485_comm_master_slave.c:126:Modbus RS485 RTU multi device master - slave case.:PASS
Test ran in 12264ms</system-out></testcase><testcase file="./main/test_modbus_rs485_comm_master_slave.c" line="191" time="13.464" name="Modbus RS485 ASCII multi device master - slave case."><system-out>Please press "Enter" key once any board send this signal.
D (1652) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (1652) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (1652) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (1652) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1662) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (1672) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (1672) mbs_ascii@0x3ffb6030:PORT_RECV: 31 31 31 43 41 0d 0a
D (1682) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 1038300
D (1692) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (1692) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1702) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (1702) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1712) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (1722) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (1722) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (1732) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (1732) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (1742) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (1752) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (1752) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (1762) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 96362

D (1762) TEST_COMMON: Notify task start 0x3ffbaf54
D (1772) TEST_COMMON: Task: 0x3ffbaf54, get notify value = 1
I (1772) SLAVE: OBJ 0x3ffb6030, WRITE (1087219 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (1852) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (1852) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (1852) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (1862) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (1862) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (1872) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (1882) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (1882) mbs_ascii@0x3ffb6030:PORT_RECV: 32 32 32 41 37 0d 0a
D (1892) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 120345
D (1902) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (1902) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (1912) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (1912) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1922) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (1932) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 01 00 01
D (1932) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (1942) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (1942) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (1952) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (1962) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (1962) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (1972) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102517
I (1972) SLAVE: OBJ 0x3ffb6030, WRITE (1299060 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (2062) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2062) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (2072) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (2072) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2082) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (2082) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (2092) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (2102) mbs_ascii@0x3ffb6030:PORT_RECV: 33 33 33 38 34 0d 0a
D (2102) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 120220
D (2112) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (2112) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2122) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (2132) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2132) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (2142) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (2142) SLAVE: OBJ 0x3ffb6030, WRITE (1510788 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (2142) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2162) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (2172) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (2172) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (2182) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (2182) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2192) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112235
D (2282) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2282) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (2282) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (2292) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2292) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (2302) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (2302) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (2312) mbs_ascii@0x3ffb6030:PORT_RECV: 34 34 34 36 31 0d 0a
D (2322) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114401
D (2332) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (2332) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2332) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (2342) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2352) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (2362) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 03 00 01
I (2362) SLAVE: OBJ 0x3ffb6030, WRITE (1726417 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (2362) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2382) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (2382) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (2392) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (2402) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (2402) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2402) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112236
D (2492) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2492) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (2492) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (2502) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2502) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (2512) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (2512) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (2522) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (2532) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 109259
D (2532) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (2542) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2542) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (2552) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2562) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (2562) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 11 11
I (2572) SLAVE: OBJ 0x3ffb6030, READ (1934476 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (2572) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2582) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (2592) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (2602) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (2602) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2612) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (2702) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2702) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (2702) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (2702) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2712) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (2722) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (2722) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (2732) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (2732) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112739
D (2742) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (2752) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2752) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (2762) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2762) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (2772) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 22 22
D (2782) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2782) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (2792) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (2792) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (2802) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (2812) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95655
I (2812) SLAVE: OBJ 0x3ffb6030, READ (2141500 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (2902) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (2902) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (2912) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (2912) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (2922) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (2922) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (2932) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (2942) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (2942) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 122362
D (2952) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (2952) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (2962) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (2962) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2972) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (2982) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 33 33
I (2982) SLAVE: OBJ 0x3ffb6030, READ (2348512 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (2982) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3002) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (3002) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (3012) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (3022) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3022) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (3112) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3112) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (3112) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (3122) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3122) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (3132) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (3142) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (3142) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (3152) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112739
D (3152) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (3162) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3162) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (3172) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (3182) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (3182) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 44 44
I (3192) SLAVE: OBJ 0x3ffb6030, READ (2555536 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (3192) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3202) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (3212) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (3222) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (3222) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3232) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (3322) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3322) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (3322) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (3332) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3332) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (3342) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (3342) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (3352) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 30 45 38 0d 0a
D (3362) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114194
D (3372) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 00
D (3372) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3372) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3382) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3392) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (3402) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (3402) SLAVE: OBJ 0x3ffb6030, WRITE (2766446 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x0), SIZE:1
D (3402) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3422) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (3422) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (3432) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (3442) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (3442) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3442) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 111975
D (3582) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3582) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (3582) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (3592) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3592) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (3602) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (3602) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (3612) mbs_ascii@0x3ffb6030:PORT_RECV: 31 31 31 43 41 0d 0a
D (3622) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 157272
D (3622) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (3632) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3632) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3642) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3652) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (3652) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (3662) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3662) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (3672) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (3682) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (3682) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (3692) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3692) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (3702) SLAVE: OBJ 0x3ffb6030, WRITE (3024687 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (3792) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3792) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (3792) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (3802) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (3812) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (3812) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (3822) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (3832) mbs_ascii@0x3ffb6030:PORT_RECV: 32 32 32 41 37 0d 0a
D (3832) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124179
D (3842) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (3842) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (3852) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (3852) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3862) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (3872) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (3872) SLAVE: OBJ 0x3ffb6030, WRITE (3240374 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (3872) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (3892) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (3892) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (3902) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (3912) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (3912) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (3922) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112235
D (4012) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4012) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (4012) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (4022) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4022) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (4032) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (4032) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (4042) mbs_ascii@0x3ffb6030:PORT_RECV: 33 33 33 38 34 0d 0a
D (4052) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114817
D (4062) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (4062) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4062) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (4072) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4082) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (4092) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (4092) SLAVE: OBJ 0x3ffb6030, WRITE (3456421 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (4092) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4112) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (4112) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (4122) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (4132) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (4132) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4132) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112235
D (4232) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4232) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (4232) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (4232) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4242) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (4242) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (4252) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (4262) mbs_ascii@0x3ffb6030:PORT_RECV: 34 34 34 36 31 0d 0a
D (4262) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114469
D (4272) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (4282) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4282) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (4292) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4292) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (4302) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 03 00 01
D (4312) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4312) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (4322) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (4322) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (4332) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (4342) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4342) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (4352) SLAVE: OBJ 0x3ffb6030, WRITE (3672120 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (4442) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4442) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (4442) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (4452) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4452) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (4462) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (4472) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (4472) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 31 45 37 0d 0a
D (4482) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124179
D (4492) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 01
D (4492) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4502) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (4502) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4512) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (4522) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (4522) SLAVE: OBJ 0x3ffb6030, WRITE (3887807 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x1), SIZE:1
D (4522) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4542) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (4542) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (4552) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (4562) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (4562) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4572) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 111975
D (4702) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4702) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (4702) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (4702) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4712) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (4712) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (4722) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (4732) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (4732) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 154569
D (4742) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (4752) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4752) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (4762) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4762) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (4772) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 11 11
D (4772) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4782) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (4792) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (4792) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (4802) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (4802) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95655
I (4812) SLAVE: OBJ 0x3ffb6030, READ (4140914 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (4902) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (4902) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (4902) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (4912) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (4922) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (4922) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (4932) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (4942) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (4942) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 122362
D (4952) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (4952) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (4962) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (4962) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4972) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (4982) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 22 22
I (4982) SLAVE: OBJ 0x3ffb6030, READ (4347926 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (4982) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5002) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (5002) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (5012) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (5022) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5022) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (5112) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5112) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (5112) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (5122) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5122) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (5132) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (5142) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (5142) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (5152) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112739
D (5152) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (5162) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5162) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (5172) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (5182) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (5182) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 33 33
I (5192) SLAVE: OBJ 0x3ffb6030, READ (4554950 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (5192) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5202) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (5212) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (5222) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (5222) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5232) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (5322) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5322) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (5322) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (5322) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5332) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (5342) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (5342) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (5352) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (5352) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112735
D (5362) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (5372) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5372) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (5382) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (5382) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (5392) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 44 44
I (5402) SLAVE: OBJ 0x3ffb6030, READ (4761971 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (5402) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5412) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (5422) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (5422) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (5432) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5442) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (5532) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5532) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (5532) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (5532) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5542) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (5542) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (5552) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (5562) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 32 45 36 0d 0a
D (5562) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 113989
D (5572) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 02
D (5582) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5582) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5592) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5592) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (5602) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
D (5612) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5612) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (5622) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (5622) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (5632) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (5642) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5642) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (5652) SLAVE: OBJ 0x3ffb6030, WRITE (4972676 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x2), SIZE:1
D (5792) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5792) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (5792) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (5802) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (5802) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (5812) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (5812) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (5822) mbs_ascii@0x3ffb6030:PORT_RECV: 31 31 31 43 41 0d 0a
D (5832) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 170469
D (5832) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (5842) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (5842) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (5852) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5862) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (5862) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (5872) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (5872) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (5882) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (5892) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (5892) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (5902) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (5902) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (5912) SLAVE: OBJ 0x3ffb6030, WRITE (5234653 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (6002) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6002) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (6002) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (6012) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6022) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (6022) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (6032) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (6042) mbs_ascii@0x3ffb6030:PORT_RECV: 32 32 32 41 37 0d 0a
D (6042) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124187
D (6052) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (6052) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6062) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (6062) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6072) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (6082) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (6082) SLAVE: OBJ 0x3ffb6030, WRITE (5450348 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (6082) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6102) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (6102) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (6112) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (6122) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (6122) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6132) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112235
D (6222) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6222) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (6222) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (6232) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6232) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (6242) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (6242) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (6252) mbs_ascii@0x3ffb6030:PORT_RECV: 33 33 33 38 34 0d 0a
D (6262) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114886
D (6272) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (6272) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6272) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (6282) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6292) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (6302) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (6302) SLAVE: OBJ 0x3ffb6030, WRITE (5666464 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (6302) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6322) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (6322) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (6332) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (6342) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (6342) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6342) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112235
D (6442) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6442) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (6442) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (6442) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6452) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (6452) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (6462) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (6472) mbs_ascii@0x3ffb6030:PORT_RECV: 34 34 34 36 31 0d 0a
D (6472) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114469
D (6482) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (6492) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6492) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (6502) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6502) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (6512) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 03 00 01
D (6522) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6522) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (6532) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (6532) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (6542) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (6552) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6552) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (6562) SLAVE: OBJ 0x3ffb6030, WRITE (5882163 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (6652) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6652) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (6652) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (6662) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6662) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (6672) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (6682) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (6682) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 33 45 35 0d 0a
D (6692) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124180
D (6702) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 03
D (6702) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6712) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (6712) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6722) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (6732) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (6732) SLAVE: OBJ 0x3ffb6030, WRITE (6097850 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x3), SIZE:1
D (6732) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6752) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (6752) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (6762) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (6772) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (6772) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (6782) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 111975
D (6912) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6912) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (6912) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (6912) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (6922) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (6922) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (6932) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (6942) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (6942) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 154498
D (6952) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (6962) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (6962) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (6972) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6972) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (6982) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 11 11
D (6982) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (6992) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (7002) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (7002) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (7012) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7012) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95656
I (7022) SLAVE: OBJ 0x3ffb6030, READ (6350888 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (7112) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7112) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (7112) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (7122) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7132) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (7132) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (7142) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (7152) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (7152) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 122363
D (7162) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (7162) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7172) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (7172) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7182) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (7192) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 22 22
I (7192) SLAVE: OBJ 0x3ffb6030, READ (6557900 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (7192) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7212) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (7212) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (7222) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (7232) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7232) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105290
D (7322) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7322) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (7322) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (7332) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7332) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (7342) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (7352) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (7352) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (7362) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112739
D (7362) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (7372) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7372) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (7382) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7392) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (7392) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 33 33
I (7402) SLAVE: OBJ 0x3ffb6030, READ (6764924 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (7402) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7412) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (7422) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (7432) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (7432) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7442) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (7532) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7532) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (7532) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (7532) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7542) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (7552) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (7552) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (7562) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (7562) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112735
D (7572) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (7582) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7582) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (7592) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7592) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (7602) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 44 44
I (7612) SLAVE: OBJ 0x3ffb6030, READ (6971944 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (7612) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7622) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (7632) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (7632) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (7642) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7652) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (7742) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7742) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (7742) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (7742) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (7752) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (7752) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (7762) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (7772) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 34 45 34 0d 0a
D (7772) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 113989
D (7782) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 04
D (7792) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (7792) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (7802) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7802) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (7812) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
D (7822) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (7822) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (7832) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (7832) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (7842) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (7852) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (7852) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (7862) SLAVE: OBJ 0x3ffb6030, WRITE (7182650 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x4), SIZE:1
D (8002) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8002) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (8002) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (8012) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8012) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (8022) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (8022) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (8032) mbs_ascii@0x3ffb6030:PORT_RECV: 31 31 31 43 41 0d 0a
D (8042) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 170470
D (8042) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (8052) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8052) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (8062) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8072) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (8072) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (8082) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8082) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (8092) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (8102) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (8102) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (8112) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8112) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (8122) SLAVE: OBJ 0x3ffb6030, WRITE (7444627 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (8212) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8212) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (8212) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (8222) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8232) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (8232) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (8242) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (8252) mbs_ascii@0x3ffb6030:PORT_RECV: 32 32 32 41 37 0d 0a
D (8252) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124188
D (8262) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (8262) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8272) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (8272) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8282) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (8292) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 01 00 01
I (8292) SLAVE: OBJ 0x3ffb6030, WRITE (7660322 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (8292) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8312) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (8312) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (8322) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (8332) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (8332) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8342) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112235
D (8432) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8432) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (8432) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (8442) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8442) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (8452) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (8452) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (8462) mbs_ascii@0x3ffb6030:PORT_RECV: 33 33 33 38 34 0d 0a
D (8472) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114886
D (8482) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (8482) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8482) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (8492) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8502) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (8512) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 02 00 01
I (8512) SLAVE: OBJ 0x3ffb6030, WRITE (7876437 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (8512) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8532) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (8532) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (8542) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (8552) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (8552) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8552) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 112236
D (8652) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8652) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (8652) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (8652) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8662) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (8662) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (8672) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (8682) mbs_ascii@0x3ffb6030:PORT_RECV: 34 34 34 36 31 0d 0a
D (8682) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 114469
D (8692) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (8702) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8702) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (8712) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8712) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (8722) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 03 00 01
D (8732) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8732) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (8742) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (8742) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (8752) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (8762) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8762) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 102513
I (8772) SLAVE: OBJ 0x3ffb6030, WRITE (8092137 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (8862) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8862) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (8862) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (8872) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (8872) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (8882) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (8892) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (8892) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 35 45 33 0d 0a
D (8902) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124180
D (8912) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 05
D (8912) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (8922) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (8922) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8932) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (8942) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (8942) SLAVE: OBJ 0x3ffb6030, WRITE (8307824 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x5), SIZE:1
D (8942) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (8962) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (8962) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (8972) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (8982) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (8982) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (8992) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 111975
D (9122) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9122) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (9122) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (9122) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9132) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (9132) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (9142) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (9152) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (9152) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 154568
D (9162) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (9172) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9172) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (9182) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9182) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (9192) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 11 11
D (9192) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9202) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (9212) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (9212) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (9222) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9222) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 95656
I (9232) SLAVE: OBJ 0x3ffb6030, READ (8560931 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (9322) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9322) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (9322) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (9332) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9342) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (9342) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (9352) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (9362) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (9362) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 122363
D (9372) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (9372) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9382) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (9382) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9392) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (9402) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 22 22
I (9402) SLAVE: OBJ 0x3ffb6030, READ (8767943 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (9402) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9422) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (9422) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (9432) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (9442) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9442) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105290
D (9532) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9532) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (9532) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (9542) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9542) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (9552) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (9562) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (9562) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (9572) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112739
D (9572) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (9582) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9582) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (9592) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9602) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (9602) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 33 33
I (9612) SLAVE: OBJ 0x3ffb6030, READ (8974967 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (9612) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9622) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (9632) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (9642) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (9642) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9652) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105290
D (9742) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9742) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (9742) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (9742) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9752) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (9762) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (9762) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (9772) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (9772) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 112735
D (9782) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (9792) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (9792) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (9802) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9802) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (9812) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 44 44
I (9822) SLAVE: OBJ 0x3ffb6030, READ (9181988 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (9822) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9832) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (9842) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (9842) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (9852) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (9862) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 105291
D (9952) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (9952) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (9952) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (9952) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (9962) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (9962) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (9972) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (9982) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 36 45 32 0d 0a
D (9982) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 113989
D (9992) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 06
D (10002) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10002) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (10012) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10012) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (10022) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
D (10032) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10032) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (10042) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (10042) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (10052) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (10062) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10062) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103381
I (10072) SLAVE: OBJ 0x3ffb6030, WRITE (9392953 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x6), SIZE:1
D (10212) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10212) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (10212) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (10222) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10222) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (10232) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (10232) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (10242) mbs_ascii@0x3ffb6030:PORT_RECV: 31 31 31 43 41 0d 0a
D (10252) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 170245
D (10252) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (10262) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10262) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (10272) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10282) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (10292) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (10292) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10302) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (10302) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (10312) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (10322) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (10322) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10322) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (10332) SLAVE: OBJ 0x3ffb6030, WRITE (9656007 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (10432) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10432) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (10432) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (10432) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10442) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (10452) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (10452) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (10462) mbs_ascii@0x3ffb6030:PORT_RECV: 32 32 32 41 37 0d 0a
D (10472) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126147
D (10472) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (10482) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10482) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (10492) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10502) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (10502) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 01 00 01
D (10512) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10512) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (10522) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (10532) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (10532) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (10542) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10542) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (10552) SLAVE: OBJ 0x3ffb6030, WRITE (9874964 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (10652) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10652) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (10652) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (10652) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10662) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (10662) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (10672) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (10682) mbs_ascii@0x3ffb6030:PORT_RECV: 33 33 33 38 34 0d 0a
D (10682) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126147
D (10692) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (10702) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10702) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (10712) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10712) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (10722) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 02 00 01
D (10732) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10732) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (10742) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (10752) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (10752) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (10762) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10762) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (10772) SLAVE: OBJ 0x3ffb6030, WRITE (10093922 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (10872) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10872) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (10872) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (10872) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (10882) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (10882) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (10892) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (10902) mbs_ascii@0x3ffb6030:PORT_RECV: 34 34 34 36 31 0d 0a
D (10902) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126147
D (10912) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (10922) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (10922) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (10932) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10932) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (10942) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 03 00 01
D (10952) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (10952) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (10962) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (10962) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (10972) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (10982) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (10982) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (10992) SLAVE: OBJ 0x3ffb6030, WRITE (10312879 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (11082) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11082) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (11092) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (11092) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11102) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (11102) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (11112) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (11122) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 37 45 31 0d 0a
D (11122) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126147
D (11132) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 07
D (11142) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11142) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (11152) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11152) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (11162) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (11172) SLAVE: OBJ 0x3ffb6030, WRITE (10531836 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x7), SIZE:1
D (11172) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11182) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (11192) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (11192) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (11202) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (11212) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11212) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 113625
D (11352) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11352) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (11352) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (11352) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11362) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (11372) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (11372) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (11382) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (11382) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 160449
D (11392) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (11402) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11402) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (11412) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11412) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (11422) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 11 11
D (11432) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11432) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (11442) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (11442) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (11452) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11462) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97045
I (11462) SLAVE: OBJ 0x3ffb6030, READ (10792299 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (11562) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11562) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (11562) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (11562) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11572) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (11582) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (11582) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (11592) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (11592) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124340
D (11602) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (11612) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11612) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (11622) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11622) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (11632) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 22 22
D (11642) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11642) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (11652) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (11652) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (11662) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11672) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97044
I (11672) SLAVE: OBJ 0x3ffb6030, READ (11002503 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (11772) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11772) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (11772) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (11772) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11782) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (11792) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (11792) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (11802) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (11802) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124347
D (11812) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (11822) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (11822) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (11832) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11832) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (11842) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 33 33
D (11852) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11852) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (11862) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (11862) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (11872) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (11882) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97044
I (11882) SLAVE: OBJ 0x3ffb6030, READ (11212716 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (11982) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (11982) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (11982) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (11992) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (11992) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (12002) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (12002) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (12012) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (12012) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124348
D (12022) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (12032) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12032) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (12042) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12042) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (12052) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 44 44
D (12062) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12062) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (12072) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (12072) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (12082) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12092) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97045
I (12092) SLAVE: OBJ 0x3ffb6030, READ (11422929 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (12192) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12192) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (12192) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (12202) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12202) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (12212) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (12212) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (12222) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 38 45 30 0d 0a
D (12232) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 125667
D (12242) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 08
D (12242) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12252) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (12252) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12262) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (12272) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
D (12272) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12282) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (12282) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (12292) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (12302) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (12302) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12312) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103988
I (12312) SLAVE: OBJ 0x3ffb6030, WRITE (11636892 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x8), SIZE:1
D (12452) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12452) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (12452) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (12462) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12462) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (12472) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (12472) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (12482) mbs_ascii@0x3ffb6030:PORT_RECV: 31 31 31 43 41 0d 0a
D (12492) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 166330
D (12492) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01 02 11 11
D (12502) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12502) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (12512) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12522) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (12532) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 00 00 01
D (12532) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12542) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (12542) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (12552) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (12562) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (12562) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12562) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103988
I (12572) SLAVE: OBJ 0x3ffb6030, WRITE (11896032 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (12672) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12672) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (12672) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (12672) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12682) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (12692) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (12692) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (12702) mbs_ascii@0x3ffb6030:PORT_RECV: 32 32 32 41 37 0d 0a
D (12712) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126147
D (12712) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01 02 22 22
D (12722) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12722) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (12732) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12742) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (12742) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 01 00 01
D (12752) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12752) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (12762) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (12772) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (12772) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (12782) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (12782) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (12792) SLAVE: OBJ 0x3ffb6030, WRITE (12114988 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (12892) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12892) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (12892) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (12892) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (12902) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (12902) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (12912) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (12922) mbs_ascii@0x3ffb6030:PORT_RECV: 33 33 33 38 34 0d 0a
D (12922) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126148
D (12932) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01 02 33 33
D (12942) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (12942) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (12952) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12952) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (12962) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 02 00 01
D (12972) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (12972) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (12982) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (12992) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (12992) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (13002) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (13002) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (13012) SLAVE: OBJ 0x3ffb6030, WRITE (12333945 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (13112) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13112) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (13112) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (13112) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (13122) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (13122) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (13132) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (13142) mbs_ascii@0x3ffb6030:PORT_RECV: 34 34 34 36 31 0d 0a
D (13142) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126148
D (13152) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01 02 44 44
D (13162) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (13162) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (13172) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13172) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (13182) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 03 00 01
D (13192) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13192) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (13202) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (13202) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (13212) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (13222) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (13222) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103989
I (13232) SLAVE: OBJ 0x3ffb6030, WRITE (12552902 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (13322) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13322) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (13332) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (13332) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (13342) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (13342) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (13352) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (13362) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 39 44 46 0d 0a
D (13362) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 126148
D (13372) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 09
D (13382) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (13382) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (13392) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13392) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (13402) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
I (13412) SLAVE: OBJ 0x3ffb6030, WRITE (12771859 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x9), SIZE:1
D (13412) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13422) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (13432) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (13432) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (13442) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (13452) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (13452) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 113624
D (13592) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13592) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (13592) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (13592) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (13602) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (13612) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (13612) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (13622) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (13622) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 160449
D (13632) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 00 00 01
D (13642) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (13642) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (13652) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13652) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (13662) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 11 11
D (13672) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13672) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (13682) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (13682) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (13692) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (13702) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97044
I (13702) SLAVE: OBJ 0x3ffb6030, READ (13032323 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (13802) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13802) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (13802) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (13802) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (13812) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (13822) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (13822) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (13832) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (13832) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124340
D (13842) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 01 00 01
D (13852) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (13852) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (13862) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13862) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (13872) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 22 22
D (13882) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (13882) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (13892) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (13892) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (13902) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (13912) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97044
I (13912) SLAVE: OBJ 0x3ffb6030, READ (13242527 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (14012) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (14012) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (14012) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (14012) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (14022) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (14032) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (14032) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (14042) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (14042) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124347
D (14052) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 02 00 01
D (14062) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (14062) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (14072) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14072) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (14082) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 33 33
D (14092) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (14092) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (14102) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (14102) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (14112) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (14122) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97045
I (14122) SLAVE: OBJ 0x3ffb6030, READ (13452740 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (14222) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (14222) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 17.
D (14222) mb_port.serial: mbs_ascii@0x3ffb6030, frame 17 bytes is ready.
D (14232) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (14232) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (14242) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 17 bytes.
D (14242) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (14252) mbs_ascii@0x3ffb6030:PORT_RECV: 0a
D (14252) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 124348
D (14262) mbs_ascii@0x3ffb6030:MB_RECV: 03 00 03 00 01
D (14272) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (14272) mb_object.slave: 0x3ffb6030: function (0x3), start handler.
D (14282) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14282) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (14292) mbs_ascii@0x3ffb6030:MB_SEND: 03 02 44 44
D (14302) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (14302) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (14312) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (15) bytes.
D (14312) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (14322) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (14332) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 97044
I (14332) SLAVE: OBJ 0x3ffb6030, READ (13662952 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (14432) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (14432) mb_port.serial: mbs_ascii@0x3ffb6030, data event, len: 23.
D (14432) mb_port.serial: mbs_ascii@0x3ffb6030, frame 23 bytes is ready.
D (14442) mb_object.slave: 0x3ffb6030:EV_FRAME_RECEIVED
D (14442) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (14452) mb_port.serial: mbs_ascii@0x3ffb6030, received data: 23 bytes.
D (14452) mbs_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (14462) mbs_ascii@0x3ffb6030:PORT_RECV: 30 30 41 44 45 0d 0a
D (14472) mb_port.serial: mbs_ascii@0x3ffb6030, serial processing time[us] = 125667
D (14482) mbs_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01 02 00 0a
D (14482) mb_object.slave: 0x3ffb6030:EV_EXECUTE
D (14492) mb_object.slave: 0x3ffb6030: function (0x10), start handler.
D (14492) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (14502) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (14512) mbs_ascii@0x3ffb6030:MB_SEND: 10 00 04 00 01
D (14512) mb_port.serial: mbs_ascii@0x3ffb6030, UART[1] event:
D (14522) mb_port.serial: mbs_ascii@0x3ffb6030, uart rx break.
D (14522) mb_port.serial: mbs_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (14532) mbs_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (14542) mbs_ascii@0x3ffb6030:PORT_SEND: 0a
D (14542) mb_object.slave: 0x3ffb6030:EV_MASTER_FRAME_SENT
D (14552) mb_object.slave: 0x3ffb6030, transaction processing time(us) = 103988
D (14552) TEST_COMMON: Stop slave: 0x3ffb6030.
I (14632) TEST_COMMON: Destroy slave, inst: 0x3ffb6030.
D (14632) mb_port.serial: mbs_ascii@0x3ffb6030, suspend port.
D (14632) mb_port.timer: mbs_ascii@0x3ffb6030, timer stop, returns 259.
D (14642) TEST_COMMON: Notify task done, inst: 0x3ffbaf54.
./main/test_modbus_rs485_comm_master_slave.c:191:Modbus RS485 ASCII multi device master - slave case.:PASS
Test ran in 13553ms

&amp;lt;-------------------&amp;gt;

D (1522) TEST_COMMON: Notify task start 0x3ffbaf30
D (1522) TEST_COMMON: Task: 0x3ffbaf30, get notify value = 1
D (1522) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (1542) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (1542) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (1542) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (1552) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (1552) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (1562) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (1572) mbm_ascii@0x3ffb6030:PORT_SEND: 31 31 31 43 41 0d 0a
D (1572) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (1582) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1622) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (1622) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (1622) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (1632) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1632) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (1642) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (1652) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (1652) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 59215
D (1662) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1662) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (1672) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1672) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1682) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1682) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (1692) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (1702) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142386
D (1712) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1712) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (1732) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (1732) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (1752) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (1752) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (1752) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (1752) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (1762) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (1772) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (1772) mbm_ascii@0x3ffb6030:PORT_SEND: 32 32 32 41 37 0d 0a
D (1782) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (1792) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (1832) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (1832) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (1832) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (1842) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (1842) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (1852) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (1862) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (1862) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65113
D (1872) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (1882) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (1882) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (1892) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (1892) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (1902) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (1902) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (1912) mb_object.master: 0x3ffb6030, transaction processing time(us) = 145203
D (1922) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (1922) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (1942) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (1942) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (1962) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (1962) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (1962) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (1972) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (1972) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (1982) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (1992) mbm_ascii@0x3ffb6030:PORT_SEND: 33 33 33 38 34 0d 0a
D (1992) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (2002) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2042) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2042) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (2042) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (2052) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2062) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (2062) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (2072) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (2072) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65117
D (2082) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2092) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (2092) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2102) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2102) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2112) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (2112) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (2122) mb_object.master: 0x3ffb6030, transaction processing time(us) = 146932
D (2142) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2142) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (2142) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (2162) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2162) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2182) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (2182) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2182) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (2182) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (2192) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (2202) mbm_ascii@0x3ffb6030:PORT_SEND: 34 34 34 36 31 0d 0a
D (2202) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (2212) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2262) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2262) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (2262) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (2272) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2272) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (2282) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (2292) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (2292) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 68999
D (2302) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2302) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (2312) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2312) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2322) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2322) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (2332) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (2332) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142726
D (2352) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2352) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (2372) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (2372) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2372) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2392) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (2392) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2392) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (2402) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (2402) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (2412) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (2422) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (2422) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2472) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2472) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (2472) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (2472) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2482) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (2492) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (2492) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63357
D (2502) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2512) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 11 11
D (2512) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2522) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2522) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2532) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (2532) mbm_error_cb_request_success: 03 00 00 00 01
D (2542) mb_object.master: 0x3ffb6030, transaction processing time(us) = 135880
D (2552) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2552) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (2572) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (2572) TEST_COMMON: CHAR #0, value is ok.
D (2572) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2592) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2592) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (2592) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2602) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (2602) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (2612) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (2622) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (2622) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (2632) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2672) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2672) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (2672) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (2682) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2692) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (2692) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (2702) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63330
D (2712) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2712) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 22 22
D (2722) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2722) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2732) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2732) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (2742) mbm_error_cb_request_success: 03 00 01 00 01
D (2742) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139797
D (2762) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2762) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (2782) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (2782) TEST_COMMON: CHAR #1, value is ok.
D (2782) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2802) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (2802) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (2802) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2812) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (2812) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (2822) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (2832) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (2832) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (2842) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (2882) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (2882) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (2882) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (2892) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (2892) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (2902) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (2912) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63333
D (2912) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (2922) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 33 33
D (2932) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (2932) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (2942) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (2942) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (2952) mbm_error_cb_request_success: 03 00 02 00 01
D (2952) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139768
D (2972) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (2972) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (2992) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (2992) TEST_COMMON: CHAR #2, value is ok.
D (2992) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3012) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3012) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (3012) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3012) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (3022) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (3022) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (3032) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (3042) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (3042) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3092) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3092) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (3092) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (3092) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3102) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (3112) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (3112) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63330
D (3122) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3132) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 44 44
D (3132) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3142) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3152) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (3152) mbm_error_cb_request_success: 03 00 03 00 01
D (3162) mb_object.master: 0x3ffb6030, transaction processing time(us) = 136813
D (3182) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3182) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (3182) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (3202) TEST_COMMON: CHAR #3, value is ok.
D (3202) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3202) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3222) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 00
D (3222) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3222) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (3232) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (3232) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (3242) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 30 45 38 0d 0a
D (3252) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (3252) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3302) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3302) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (3302) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (3312) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3312) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (3322) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (3332) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (3332) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65304
D (3342) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3342) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (3352) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3352) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3362) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3362) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (3372) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00
D (3372) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142726
D (3392) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3392) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (3412) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (3472) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3472) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3472) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (3472) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3482) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (3482) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (3492) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (3502) mbm_ascii@0x3ffb6030:PORT_SEND: 31 31 31 43 41 0d 0a
D (3502) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (3512) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3562) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3562) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (3562) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (3562) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3572) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (3582) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (3582) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (3592) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65168
D (3592) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3602) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (3612) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3612) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3622) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3622) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (3632) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (3632) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148386
D (3652) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3652) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (3672) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (3672) TEST_COMMON: CHAR #0, value is ok.
D (3672) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3692) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3692) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (3692) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3692) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (3702) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (3712) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (3712) mbm_ascii@0x3ffb6030:PORT_SEND: 32 32 32 41 37 0d 0a
D (3722) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (3732) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3772) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3772) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (3772) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (3782) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (3792) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (3792) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (3802) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (3802) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65167
D (3812) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (3822) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (3822) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (3832) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (3832) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (3842) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (3842) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (3852) mb_object.master: 0x3ffb6030, transaction processing time(us) = 146523
D (3872) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (3872) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (3872) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (3892) TEST_COMMON: CHAR #1, value is ok.
D (3892) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3892) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (3912) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (3912) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3912) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (3922) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (3922) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (3932) mbm_ascii@0x3ffb6030:PORT_SEND: 33 33 33 38 34 0d 0a
D (3942) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (3942) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (3992) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (3992) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (3992) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (4002) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4002) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (4012) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (4022) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (4022) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65509
D (4032) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4032) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (4042) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4042) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4052) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4052) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (4062) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (4062) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142703
D (4082) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4082) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (4102) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (4102) TEST_COMMON: CHAR #2, value is ok.
D (4102) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4122) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4122) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (4122) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4132) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (4132) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (4142) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (4152) mbm_ascii@0x3ffb6030:PORT_SEND: 34 34 34 36 31 0d 0a
D (4152) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (4162) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4212) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4212) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (4212) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (4212) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4222) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (4222) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (4232) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (4232) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65166
D (4242) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4252) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (4252) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4262) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4262) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4272) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (4272) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (4282) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148245
D (4302) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4302) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (4302) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (4322) TEST_COMMON: CHAR #3, value is ok.
D (4322) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4322) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4342) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 01
D (4342) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4342) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (4352) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (4352) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (4362) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 31 45 37 0d 0a
D (4372) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (4372) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4422) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4422) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (4422) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (4432) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4432) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (4442) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (4452) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (4452) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65163
D (4462) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4462) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (4472) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4472) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4482) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4482) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (4492) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01
D (4502) mb_object.master: 0x3ffb6030, transaction processing time(us) = 144078
D (4512) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4512) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (4532) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (4592) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4592) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4592) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (4592) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4602) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (4602) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (4612) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (4622) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (4622) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (4632) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4672) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4672) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (4672) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (4682) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4692) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (4692) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (4702) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63336
D (4712) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4712) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 11 11
D (4722) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4722) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4732) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4732) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (4742) mbm_error_cb_request_success: 03 00 00 00 01
D (4742) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139791
D (4762) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4762) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (4782) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (4782) TEST_COMMON: CHAR #0, value is ok.
D (4782) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4802) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4802) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (4802) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4812) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (4812) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (4822) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (4832) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (4832) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (4842) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (4882) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (4882) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (4882) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (4892) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (4892) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (4902) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (4912) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63336
D (4912) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (4922) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 22 22
D (4922) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (4932) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (4932) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (4942) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (4952) mbm_error_cb_request_success: 03 00 01 00 01
D (4952) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139179
D (4972) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (4972) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (4972) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (4992) TEST_COMMON: CHAR #1, value is ok.
D (4992) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (4992) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5012) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (5012) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5012) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (5022) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (5022) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (5032) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (5042) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (5042) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5092) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5092) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (5092) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (5092) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5102) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (5112) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (5112) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63333
D (5122) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5132) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 33 33
D (5132) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5142) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5152) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (5152) mbm_error_cb_request_success: 03 00 02 00 01
D (5162) mb_object.master: 0x3ffb6030, transaction processing time(us) = 136366
D (5172) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5172) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (5192) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (5192) TEST_COMMON: CHAR #2, value is ok.
D (5212) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5212) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5212) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (5212) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5222) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (5222) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (5232) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (5242) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (5242) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (5252) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5292) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5292) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (5302) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (5302) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5312) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (5312) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (5322) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63330
D (5332) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5332) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 44 44
D (5342) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5342) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5352) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5352) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (5362) mbm_error_cb_request_success: 03 00 03 00 01
D (5362) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139801
D (5382) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5382) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (5402) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (5402) TEST_COMMON: CHAR #3, value is ok.
D (5402) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5422) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5422) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 02
D (5422) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5432) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (5432) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (5442) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (5452) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 32 45 36 0d 0a
D (5452) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (5462) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5512) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5512) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (5512) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (5512) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5522) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (5522) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (5532) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (5542) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65097
D (5542) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5552) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (5552) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5562) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5562) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5572) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (5582) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02
D (5582) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148326
D (5602) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5602) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (5622) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (5682) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5682) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5682) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (5682) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5692) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (5692) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (5702) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (5712) mbm_ascii@0x3ffb6030:PORT_SEND: 31 31 31 43 41 0d 0a
D (5712) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (5722) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5772) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5772) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (5772) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (5772) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (5782) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (5792) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (5792) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (5802) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65142
D (5802) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (5812) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (5822) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (5822) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (5832) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (5832) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (5842) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (5842) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148359
D (5862) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (5862) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (5882) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (5882) TEST_COMMON: CHAR #0, value is ok.
D (5882) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5902) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (5902) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (5902) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5902) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (5912) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (5922) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (5922) mbm_ascii@0x3ffb6030:PORT_SEND: 32 32 32 41 37 0d 0a
D (5932) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (5942) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (5982) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (5982) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (5982) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (5992) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6002) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (6002) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (6012) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (6012) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65167
D (6022) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6032) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (6032) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6042) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6042) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6052) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (6052) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (6062) mb_object.master: 0x3ffb6030, transaction processing time(us) = 146496
D (6082) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6082) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (6082) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (6102) TEST_COMMON: CHAR #1, value is ok.
D (6102) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6102) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6122) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (6122) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6122) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (6132) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (6132) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (6142) mbm_ascii@0x3ffb6030:PORT_SEND: 33 33 33 38 34 0d 0a
D (6152) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (6152) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6202) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6202) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (6202) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (6212) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6212) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (6222) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (6232) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (6232) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65580
D (6242) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6242) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (6252) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6252) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6262) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6262) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (6272) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (6272) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142747
D (6292) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6292) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (6312) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (6312) TEST_COMMON: CHAR #2, value is ok.
D (6312) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6332) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6332) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (6332) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6342) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (6342) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (6352) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (6362) mbm_ascii@0x3ffb6030:PORT_SEND: 34 34 34 36 31 0d 0a
D (6362) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (6372) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6422) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6422) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (6422) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (6422) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6432) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (6432) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (6442) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (6442) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65167
D (6452) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6462) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (6462) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6472) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6472) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6482) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (6482) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (6492) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148287
D (6512) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6512) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (6512) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (6532) TEST_COMMON: CHAR #3, value is ok.
D (6532) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6532) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6552) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 03
D (6552) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6552) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (6562) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (6562) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (6572) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 33 45 35 0d 0a
D (6582) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (6582) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6632) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6632) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (6632) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (6642) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6642) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (6652) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (6662) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (6662) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65163
D (6672) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6672) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (6682) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6682) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6692) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6692) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (6702) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03
D (6712) mb_object.master: 0x3ffb6030, transaction processing time(us) = 144122
D (6722) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6722) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (6742) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (6802) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6802) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (6802) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (6802) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6812) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (6812) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (6822) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (6832) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (6832) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (6842) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (6882) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (6882) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (6882) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (6892) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (6902) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (6902) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (6912) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63309
D (6922) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (6922) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 11 11
D (6932) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (6932) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (6942) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (6942) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (6952) mbm_error_cb_request_success: 03 00 00 00 01
D (6952) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139765
D (6972) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (6972) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (6992) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (6992) TEST_COMMON: CHAR #0, value is ok.
D (6992) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7012) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7012) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (7012) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7022) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (7022) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (7032) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (7042) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (7042) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (7052) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7092) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7092) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (7092) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (7102) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7102) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (7112) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (7122) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63330
D (7122) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7132) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 22 22
D (7132) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7142) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7152) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (7162) mbm_error_cb_request_success: 03 00 01 00 01
D (7162) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139152
D (7182) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7182) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (7182) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (7202) TEST_COMMON: CHAR #1, value is ok.
D (7202) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7202) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7222) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (7222) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7222) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (7232) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (7232) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (7242) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (7252) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (7252) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7302) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7302) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (7302) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (7302) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7312) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (7322) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (7322) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63334
D (7332) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7342) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 33 33
D (7342) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7352) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7352) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7362) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (7362) mbm_error_cb_request_success: 03 00 02 00 01
D (7372) mb_object.master: 0x3ffb6030, transaction processing time(us) = 136339
D (7382) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7382) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (7402) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (7402) TEST_COMMON: CHAR #2, value is ok.
D (7422) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7422) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7422) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (7422) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7432) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (7432) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (7442) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (7452) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (7452) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (7462) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7502) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7502) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (7512) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (7512) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7522) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (7522) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (7532) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63329
D (7542) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7542) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 44 44
D (7552) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7552) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7562) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7562) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (7572) mbm_error_cb_request_success: 03 00 03 00 01
D (7572) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139801
D (7592) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7592) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (7612) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (7612) TEST_COMMON: CHAR #3, value is ok.
D (7612) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7632) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7632) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 04
D (7632) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7642) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (7642) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (7652) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (7662) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 34 45 34 0d 0a
D (7662) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (7672) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7722) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7722) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (7722) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (7722) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7732) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (7732) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (7742) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (7752) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65096
D (7752) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (7762) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (7762) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (7772) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (7772) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (7782) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (7792) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04
D (7792) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148327
D (7812) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (7812) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (7832) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (7892) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7892) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (7892) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (7892) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7902) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (7902) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (7912) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (7922) mbm_ascii@0x3ffb6030:PORT_SEND: 31 31 31 43 41 0d 0a
D (7922) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (7932) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (7982) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (7982) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (7982) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (7982) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (7992) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (8002) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (8002) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (8012) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65115
D (8012) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8022) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (8032) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8032) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8042) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8042) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (8052) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (8052) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148333
D (8072) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8072) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (8092) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (8092) TEST_COMMON: CHAR #0, value is ok.
D (8092) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8112) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8112) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (8112) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8112) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (8122) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (8132) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (8132) mbm_ascii@0x3ffb6030:PORT_SEND: 32 32 32 41 37 0d 0a
D (8142) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (8152) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8192) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8192) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (8192) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (8202) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8212) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (8212) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (8222) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (8222) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65167
D (8232) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8242) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (8242) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8252) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8252) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8262) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (8262) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (8272) mb_object.master: 0x3ffb6030, transaction processing time(us) = 146470
D (8292) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8292) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (8292) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (8312) TEST_COMMON: CHAR #1, value is ok.
D (8312) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8312) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8332) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (8332) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8332) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (8342) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (8342) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (8352) mbm_ascii@0x3ffb6030:PORT_SEND: 33 33 33 38 34 0d 0a
D (8362) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (8362) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8412) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8412) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (8412) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (8422) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8422) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (8432) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (8442) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (8442) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65586
D (8452) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8452) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (8462) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8462) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8472) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8472) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (8482) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (8482) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142721
D (8502) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8502) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (8522) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (8522) TEST_COMMON: CHAR #2, value is ok.
D (8522) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8542) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8542) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (8542) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8552) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (8552) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (8562) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (8572) mbm_ascii@0x3ffb6030:PORT_SEND: 34 34 34 36 31 0d 0a
D (8572) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (8582) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8632) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8632) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (8632) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (8632) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8642) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (8642) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (8652) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (8652) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65166
D (8662) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8672) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (8672) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8682) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8682) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8692) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (8692) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (8702) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148262
D (8722) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8722) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (8722) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (8742) TEST_COMMON: CHAR #3, value is ok.
D (8742) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8742) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (8762) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 05
D (8762) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8762) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (8772) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (8772) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (8782) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 35 45 33 0d 0a
D (8792) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (8792) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (8842) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (8842) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (8842) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (8852) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (8852) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (8862) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (8872) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (8872) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65163
D (8882) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (8882) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (8892) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (8892) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (8902) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (8902) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (8912) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05
D (8922) mb_object.master: 0x3ffb6030, transaction processing time(us) = 144095
D (8932) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (8932) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (8952) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (9012) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9012) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9012) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (9012) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9022) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (9022) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (9032) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (9042) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (9042) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (9052) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9092) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9092) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (9092) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (9102) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9112) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (9112) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (9122) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63353
D (9132) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9132) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 11 11
D (9142) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9152) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9152) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (9162) mbm_error_cb_request_success: 03 00 00 00 01
D (9162) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139808
D (9182) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9182) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (9202) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (9202) TEST_COMMON: CHAR #0, value is ok.
D (9202) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9222) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9222) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (9222) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9232) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (9232) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (9242) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (9252) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (9252) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (9262) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9302) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9302) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (9302) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (9312) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9312) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (9322) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (9332) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63330
D (9332) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9342) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 22 22
D (9342) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9352) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9352) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9362) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (9372) mbm_error_cb_request_success: 03 00 01 00 01
D (9372) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139195
D (9392) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9392) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (9392) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (9412) TEST_COMMON: CHAR #1, value is ok.
D (9412) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9412) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9432) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (9432) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9432) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (9442) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (9442) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (9452) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (9462) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (9462) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9512) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9512) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (9512) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (9512) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9522) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (9532) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (9532) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63333
D (9542) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9552) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 33 33
D (9552) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9562) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9562) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9572) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (9572) mbm_error_cb_request_success: 03 00 02 00 01
D (9582) mb_object.master: 0x3ffb6030, transaction processing time(us) = 136367
D (9592) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9592) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (9612) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (9612) TEST_COMMON: CHAR #2, value is ok.
D (9632) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9632) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9632) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (9632) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9642) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (9642) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (9652) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (9662) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (9662) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (9672) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9712) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9712) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (9722) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (9722) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9732) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (9732) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (9742) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 63329
D (9752) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9752) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 44 44
D (9762) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9762) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9772) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9772) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (9782) mbm_error_cb_request_success: 03 00 03 00 01
D (9782) mb_object.master: 0x3ffb6030, transaction processing time(us) = 139801
D (9802) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (9802) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (9822) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (9822) TEST_COMMON: CHAR #3, value is ok.
D (9822) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9842) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (9842) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 06
D (9842) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9852) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (9852) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (9862) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (9872) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 36 45 32 0d 0a
D (9872) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (9882) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (9932) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (9932) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (9932) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (9932) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (9942) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (9942) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (9952) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (9962) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 65513
D (9962) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (9972) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (9972) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (9982) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (9982) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (9992) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (10002) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06
D (10002) mb_object.master: 0x3ffb6030, transaction processing time(us) = 148743
D (10022) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10022) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (10042) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (10102) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10102) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10102) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (10102) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10112) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (10112) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (10122) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (10132) mbm_ascii@0x3ffb6030:PORT_SEND: 31 31 31 43 41 0d 0a
D (10142) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (10142) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10192) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10192) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (10192) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (10202) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10202) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (10212) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (10222) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (10222) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66337
D (10232) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10232) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (10242) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10242) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10252) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10252) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (10262) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (10272) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150770
D (10282) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10282) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (10302) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (10302) TEST_COMMON: CHAR #0, value is ok.
D (10302) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10322) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10322) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (10322) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10332) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (10332) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (10342) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (10352) mbm_ascii@0x3ffb6030:PORT_SEND: 32 32 32 41 37 0d 0a
D (10352) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (10362) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10412) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10412) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (10412) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (10422) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10422) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (10432) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (10432) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (10442) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66345
D (10452) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10452) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (10462) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10462) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10472) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10472) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (10482) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (10482) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150786
D (10502) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10502) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (10522) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (10522) TEST_COMMON: CHAR #1, value is ok.
D (10522) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10542) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10542) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (10542) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10552) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (10552) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (10562) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (10572) mbm_ascii@0x3ffb6030:PORT_SEND: 33 33 33 38 34 0d 0a
D (10572) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (10582) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10632) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10632) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (10632) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (10632) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10642) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (10652) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (10652) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (10662) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66342
D (10662) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10672) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (10682) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10682) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10692) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10692) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (10702) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (10702) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150787
D (10722) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10722) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (10742) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (10742) TEST_COMMON: CHAR #2, value is ok.
D (10742) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10762) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10762) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (10762) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10772) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (10772) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (10782) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (10792) mbm_ascii@0x3ffb6030:PORT_SEND: 34 34 34 36 31 0d 0a
D (10792) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (10802) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (10852) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10852) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (10852) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (10852) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (10862) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (10862) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (10872) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (10882) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66346
D (10882) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (10892) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (10902) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (10902) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (10912) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (10912) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (10922) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (10922) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150246
D (10942) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (10942) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (10962) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (10962) TEST_COMMON: CHAR #3, value is ok.
D (10962) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10982) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (10982) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 07
D (10982) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (10992) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (10992) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (11002) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (11012) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 37 45 31 0d 0a
D (11012) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (11022) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11072) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11072) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (11072) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (11072) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11082) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (11082) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (11092) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (11102) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66342
D (11102) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11112) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (11112) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11122) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11122) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11132) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (11142) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07
D (11142) mb_object.master: 0x3ffb6030, transaction processing time(us) = 149212
D (11162) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11162) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (11182) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (11242) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11242) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11242) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (11242) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11252) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (11252) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (11262) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (11272) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (11272) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (11282) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11332) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11332) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (11332) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (11332) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11342) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (11342) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (11352) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64563
D (11362) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11372) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 11 11
D (11372) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11372) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11382) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11382) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (11392) mbm_error_cb_request_success: 03 00 00 00 01
D (11402) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142146
D (11412) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11412) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (11432) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (11432) TEST_COMMON: CHAR #0, value is ok.
D (11432) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11452) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11452) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (11452) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11462) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (11462) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (11472) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (11482) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (11482) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (11492) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11542) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11542) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (11542) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (11542) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11552) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (11552) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (11562) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64526
D (11572) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11582) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 22 22
D (11582) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11582) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11592) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11602) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (11602) mbm_error_cb_request_success: 03 00 01 00 01
D (11612) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142118
D (11622) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11622) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (11642) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (11642) TEST_COMMON: CHAR #1, value is ok.
D (11642) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11662) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11662) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (11662) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11672) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (11672) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (11682) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (11692) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (11692) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (11702) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11752) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11752) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (11752) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (11752) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11762) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (11762) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (11772) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64529
D (11782) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (11792) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 33 33
D (11792) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (11792) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (11802) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (11812) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (11812) mbm_error_cb_request_success: 03 00 02 00 01
D (11822) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142125
D (11832) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (11832) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (11852) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (11852) TEST_COMMON: CHAR #2, value is ok.
D (11852) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11872) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (11872) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (11872) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11882) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (11882) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (11892) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (11902) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (11902) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (11912) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (11962) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (11962) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (11962) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (11962) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (11972) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (11972) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (11982) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64533
D (11992) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12002) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 44 44
D (12002) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12012) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12012) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12022) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (12022) mbm_error_cb_request_success: 03 00 03 00 01
D (12032) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142125
D (12042) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12042) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (12062) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (12062) TEST_COMMON: CHAR #3, value is ok.
D (12082) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12082) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12082) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 08
D (12082) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12092) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (12102) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (12102) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (12112) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 38 45 30 0d 0a
D (12122) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (12122) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12172) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12172) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (12172) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (12182) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12182) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (12192) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (12202) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (12202) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66361
D (12212) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12212) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (12222) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12222) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12232) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12232) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (12242) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08
D (12252) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150807
D (12262) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12262) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (12282) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (12342) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12342) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12342) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (12342) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12352) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (12352) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (12362) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31
D (12372) mbm_ascii@0x3ffb6030:PORT_SEND: 31 31 31 43 41 0d 0a
D (12382) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (12382) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12432) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12432) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (12432) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (12442) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12442) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (12452) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d
D (12462) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (12462) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66361
D (12472) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12472) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 00 00 01
D (12482) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12482) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12492) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12492) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (12502) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (12512) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150794
D (12522) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12522) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (12542) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (12542) TEST_COMMON: CHAR #0, value is ok.
D (12542) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12562) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12562) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (12562) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12572) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (12572) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (12582) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32
D (12592) mbm_ascii@0x3ffb6030:PORT_SEND: 32 32 32 41 37 0d 0a
D (12592) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (12602) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12652) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12652) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (12652) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (12662) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12662) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (12672) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d
D (12672) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (12682) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66345
D (12692) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12692) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 01 00 01
D (12702) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12702) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12712) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12712) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (12722) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (12722) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150786
D (12742) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12742) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (12762) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (12762) TEST_COMMON: CHAR #1, value is ok.
D (12762) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12782) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (12782) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (12782) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12792) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (12792) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (12802) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33
D (12812) mbm_ascii@0x3ffb6030:PORT_SEND: 33 33 33 38 34 0d 0a
D (12812) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (12822) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (12872) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (12872) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (12872) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (12872) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (12882) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (12892) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d
D (12892) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (12902) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66341
D (12902) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (12912) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 02 00 01
D (12922) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (12922) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (12932) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (12932) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (12942) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (12942) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150786
D (12962) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (12962) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (12982) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (12982) TEST_COMMON: CHAR #2, value is ok.
D (12982) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13002) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13002) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (13002) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13012) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (13012) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (13022) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34
D (13032) mbm_ascii@0x3ffb6030:PORT_SEND: 34 34 34 36 31 0d 0a
D (13032) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (13042) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (13092) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13092) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (13092) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (13092) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (13102) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (13102) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d
D (13112) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (13122) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66345
D (13122) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (13132) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 03 00 01
D (13142) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (13142) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (13152) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (13152) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (13162) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (13162) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150269
D (13182) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (13182) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (13202) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (13202) TEST_COMMON: CHAR #3, value is ok.
D (13202) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13222) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13222) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 09
D (13222) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13232) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (13232) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (13242) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (13252) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 39 44 46 0d 0a
D (13252) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (13262) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (13312) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13312) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (13312) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (13312) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (13322) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (13322) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (13332) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (13342) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66341
D (13342) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (13352) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (13352) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (13362) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (13362) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (13372) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (13382) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09
D (13382) mb_object.master: 0x3ffb6030, transaction processing time(us) = 149235
D (13402) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (13402) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (13422) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (13482) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13482) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13482) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 00 00 01
D (13482) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13492) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (13492) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (13502) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d
D (13512) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (13512) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (13522) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (13572) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13572) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (13572) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (13572) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (13582) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (13582) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a
D (13592) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64587
D (13602) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (13612) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 11 11
D (13612) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (13612) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (13622) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (13622) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (13632) mbm_error_cb_request_success: 03 00 00 00 01
D (13642) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142170
D (13652) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (13652) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (13672) TEST_COMMON: 0x3ffb6030, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (13672) TEST_COMMON: CHAR #0, value is ok.
D (13672) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13692) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13692) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 01 00 01
D (13692) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13702) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (13702) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (13712) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d
D (13722) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (13722) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (13732) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (13782) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13782) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (13782) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (13782) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (13792) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (13792) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a
D (13802) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64526
D (13812) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (13822) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 22 22
D (13822) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (13822) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (13832) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (13842) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (13842) mbm_error_cb_request_success: 03 00 01 00 01
D (13852) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142118
D (13862) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (13862) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (13882) TEST_COMMON: 0x3ffb6030, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (13882) TEST_COMMON: CHAR #1, value is ok.
D (13882) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13902) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (13902) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 02 00 01
D (13902) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13912) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (13912) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (13922) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d
D (13932) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (13932) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (13942) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (13992) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (13992) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (13992) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (13992) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (14002) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (14002) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a
D (14012) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64530
D (14022) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (14032) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 33 33
D (14032) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (14032) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (14042) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (14052) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (14052) mbm_error_cb_request_success: 03 00 02 00 01
D (14062) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142125
D (14072) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (14072) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (14092) TEST_COMMON: 0x3ffb6030, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (14092) TEST_COMMON: CHAR #2, value is ok.
D (14092) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (14112) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (14112) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 03 00 03 00 01
D (14112) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (14122) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (14122) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (17) bytes.
D (14132) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d
D (14142) mbm_ascii@0x3ffb6030:PORT_SEND: 0a
D (14142) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (14152) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (14202) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (14202) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 15.
D (14202) mb_port.serial: mbm_ascii@0x3ffb6030, frame 15 bytes is ready.
D (14202) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (14212) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 15 bytes.
D (14212) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a
D (14222) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 64526
D (14232) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (14242) mbm_ascii@0x3ffb6030:MB_RECV: 03 02 44 44
D (14242) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (14252) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (14252) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (14262) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (14262) mbm_error_cb_request_success: 03 00 03 00 01
D (14272) mb_object.master: 0x3ffb6030, transaction processing time(us) = 142126
D (14282) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (14282) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (14302) TEST_COMMON: 0x3ffb6030, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (14302) TEST_COMMON: CHAR #3, value is ok.
D (14322) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (14322) mb_port.event: mbm_ascii@0x3ffb6030, mb take resource, (300 ticks).
D (14322) mbm_ascii@0x3ffb6030:MB_TRANSMIT: 10 00 04 00 01 02 00 0a
D (14322) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (14332) mb_port.serial: mbm_ascii@0x3ffb6030, uart rx break.
D (14342) mb_port.serial: mbm_ascii@0x3ffb6030, tx buffer sent: (23) bytes.
D (14342) mbm_ascii@0x3ffb6030:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30
D (14352) mbm_ascii@0x3ffb6030:PORT_SEND: 30 30 41 44 45 0d 0a
D (14362) mb_port.timer: mbm_ascii@0x3ffb6030, respond enable timeout (2000).
D (14362) mb_object.master: 0x3ffb6030:EV_FRAME_SENT
D (14412) mb_port.serial: mbm_ascii@0x3ffb6030, UART[1] event:
D (14412) mb_port.serial: mbm_ascii@0x3ffb6030, data event, len: 17.
D (14412) mb_port.serial: mbm_ascii@0x3ffb6030, frame 17 bytes is ready.
D (14422) mb_object.master: 0x3ffb6030:EV_FRAME_RECEIVED
D (14422) mb_port.serial: mbm_ascii@0x3ffb6030, received data: 17 bytes.
D (14432) mbm_ascii@0x3ffb6030:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d
D (14442) mbm_ascii@0x3ffb6030:PORT_RECV: 0a
D (14442) mb_port.serial: mbm_ascii@0x3ffb6030, serial processing time[us] = 66363
D (14452) mb_object.master: 0x3ffb6030, frame data received successfully, (0).
D (14452) mbm_ascii@0x3ffb6030:MB_RECV: 10 00 04 00 01
D (14462) mb_object.master: 0x3ffb6030:EV_EXECUTE
D (14462) mb_object.master: 0x3ffb6030, set event EV_ERROR_OK
D (14472) mb_object.master: 0x3ffb6030:EV_ERROR_PROCESS
D (14472) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
D (14482) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a
D (14492) mb_object.master: 0x3ffb6030, transaction processing time(us) = 150808
D (14502) mb_port.event: mbm_ascii@0x3ffb6030, mb_port_event_wait_req_finish: returned event = 0x400
D (14502) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (14522) TEST_COMMON: 0x3ffb6030, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (14582) TEST_COMMON: Destroy master, inst: 0x3ffb6030.
D (14582) mb_port.serial: mbm_ascii@0x3ffb6030, suspend port.
D (14582) mb_port.timer: mbm_ascii@0x3ffb6030, timer stop, returns 259.
./main/test_modbus_rs485_comm_master_slave.c:191:Modbus RS485 ASCII multi device master - slave case.:PASS
Test ran in 13590ms</system-out></testcase></testsuite>