Serial port /dev/ttyUSB1
Connecting.....
Connecting.....
esptool.py v4.7.0
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x00097fff...
Compressed 26480 bytes to 16508...
Writing at 0x00001000... (50 %)Writing at 0x000076c0... (100 %)Wrote 26480 bytes (16508 compressed) at 0x00001000 in 0.8 seconds (effective 281.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 256.8 kbit/s)...
Hash of data verified.
Compressed 553808 bytes to 315171...
Writing at 0x00010000... (5 %)Writing at 0x0001e504... (10 %)Writing at 0x0002c1d5... (15 %)Writing at 0x00033f1a... (20 %)Writing at 0x00039ab2... (25 %)Writing at 0x0004007a... (30 %)Writing at 0x000456fd... (35 %)Writing at 0x0004b0fd... (40 %)Writing at 0x00050802... (45 %)Writing at 0x00056021... (50 %)Writing at 0x0005b6fe... (55 %)Writing at 0x00060f9e... (60 %)Writing at 0x00066a61... (65 %)Writing at 0x0006ce26... (70 %)Writing at 0x00072de3... (75 %)Writing at 0x0007c12d... (80 %)Writing at 0x000834bd... (85 %)Writing at 0x0008a4bd... (90 %)Writing at 0x0008fef6... (95 %)Writing at 0x00095b7c... (100 %)Wrote 553808 bytes (315171 compressed) at 0x00010000 in 5.9 seconds (effective 750.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7000
load:0x40078000,len:15520
load:0x40080400,len:3864
entry 0x40080650
[0;32mI (27) boot: ESP-IDF v5.0.7-528-g57ef4c4965 2nd stage bootloader[0m
[0;32mI (27) boot: compile time 08:20:03[0m
[0;32mI (27) boot: Multicore bootloader[0m
[0;32mI (32) boot: chip revision: v3.0[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (40) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (45) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (49) boot: Enabling RNG early entropy source...[0m
[0;32mI (55) boot: Partition Table:[0m
[0;32mI (58) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (66) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (73) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (81) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (88) boot: End of partition table[0m
[0;32mI (92) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1c344h (115524) map[0m
[0;32mI (143) esp_image: segment 1: paddr=0002c36c vaddr=3ffb0000 size=02228h (  8744) load[0m
[0;32mI (146) esp_image: segment 2: paddr=0002e59c vaddr=40080000 size=01a7ch (  6780) load[0m
[0;32mI (151) esp_image: segment 3: paddr=00030020 vaddr=400d0020 size=5ac18h (371736) map[0m
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7000
load:0x40078000,len:15520
load:0x40080400,len:3864
entry 0x40080650
[0;32mI (27) boot: ESP-IDF v5.0.7-528-g57ef4c4965 2nd stage bootloader[0m
[0;32mI (27) boot: compile time 08:20:03[0m
[0;32mI (27) boot: Multicore bootloader[0m
[0;32mI (32) boot: chip revision: v3.0[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (40) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (45) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (49) boot: Enabling RNG early entropy source...[0m
[0;32mI (55) boot: Partition Table:[0m
[0;32mI (58) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (66) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (73) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (81) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (88) boot: End of partition table[0m
[0;32mI (92) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1c344h (115524) map[0m
[0;32mI (143) esp_image: segment 1: paddr=0002c36c vaddr=3ffb0000 size=02228h (  8744) load[0m
[0;32mI (146) esp_image: segment 2: paddr=0002e59c vaddr=40080000 size=01a7ch (  6780) load[0m
[0;32mI (151) esp_image: segment 3: paddr=00030020 vaddr=400d0020 size=5ac18h (371736) map[0m
[0;32mI (291) esp_image: segment 4: paddr=0008ac40 vaddr=40081a7c size=0c6e0h ( 50912) load[0m
[0;32mI (319) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (319) boot: Disabling RNG early entropy source...[0m
[0;32mI (331) cpu_start: Multicore app[0m
[0;32mI (331) cpu_start: Pro cpu up.[0m
[0;32mI (331) cpu_start: Starting app cpu, entry point is 0x400813b0[0m
[0;32mI (0) cpu_start: App cpu up.[0m
D (341) clk: RTC_SLOW_CLK calibration value: 3134810[0m
[0;32mI (354) cpu_start: Pro cpu start user code[0m
[0;32mI (354) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (354) cpu_start: Application information:[0m
[0;32mI (359) cpu_start: Project name:     test_modbus_comm_multi_dev[0m
[0;32mI (366) cpu_start: App version:      v2.0.0-beta-11-g3117942[0m
[0;32mI (372) cpu_start: Compile time:     Dec 20 2024 08:19:51[0m
[0;32mI (378) cpu_start: ELF file SHA256:  cb4d7bd7040211dc...[0m
[0;32mI (384) cpu_start: ESP-IDF:          v5.0.7-528-g57ef4c4965[0m
[0;32mI (390) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (395) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (400) cpu_start: Chip rev:         v3.0[0m
D (405) memory_layout: Checking 9 reserved memory ranges:[0m
D (410) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000[0m
D (416) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0[0m
D (423) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb4388[0m
D (429) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440[0m
D (436) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350[0m
D (442) memory_layout: Reserved memory range 0x40070000 - 0x40078000[0m
D (448) memory_layout: Reserved memory range 0x40078000 - 0x40080000[0m
D (455) memory_layout: Reserved memory range 0x40080000 - 0x4008e15c[0m
D (461) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000[0m
D (468) memory_layout: Building list of available memory regions:[0m
D (474) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000[0m
D (480) memory_layout: Available memory region 0x3ffb4388 - 0x3ffb8000[0m
D (487) memory_layout: Available memory region 0x3ffb8000 - 0x3ffc0000[0m
D (494) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000[0m
D (500) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000[0m
D (507) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000[0m
D (513) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000[0m
D (520) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000[0m
D (527) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000[0m
D (533) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000[0m
D (540) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000[0m
D (546) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000[0m
D (553) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000[0m
D (560) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000[0m
D (566) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000[0m
D (573) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000[0m
D (579) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000[0m
D (586) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000[0m
D (593) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000[0m
D (599) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20[0m
D (606) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000[0m
D (612) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000[0m
D (619) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000[0m
D (626) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000[0m
D (632) memory_layout: Available memory region 0x3fffc000 - 0x40000000[0m
D (639) memory_layout: Available memory region 0x4008e15c - 0x40090000[0m
D (645) memory_layout: Available memory region 0x40090000 - 0x40092000[0m
D (652) memory_layout: Available memory region 0x40092000 - 0x40094000[0m
D (659) memory_layout: Available memory region 0x40094000 - 0x40096000[0m
D (665) memory_layout: Available memory region 0x40096000 - 0x40098000[0m
D (672) memory_layout: Available memory region 0x40098000 - 0x4009a000[0m
D (678) memory_layout: Available memory region 0x4009a000 - 0x4009c000[0m
D (685) memory_layout: Available memory region 0x4009c000 - 0x4009e000[0m
D (692) memory_layout: Available memory region 0x4009e000 - 0x400a0000[0m
[0;32mI (698) heap_init: Initializing. RAM available for dynamic allocation:[0m
D (706) heap_init: New heap initialised at 0x3ffae6e0[0m
[0;32mI (710) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
D (717) heap_init: New heap initialised at 0x3ffb4388[0m
[0;32mI (722) heap_init: At 3FFB4388 len 0002BC78 (175 KiB): DRAM[0m
[0;32mI (728) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (734) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
D (741) heap_init: New heap initialised at 0x4008e15c[0m
[0;32mI (746) heap_init: At 4008E15C len 00011EA4 (71 KiB): IRAM[0m
D (753) intr_alloc: Connected src 46 to int 2 (cpu 0)[0m
D (758) spi_flash: trying chip: issi[0m
D (761) spi_flash: trying chip: gd[0m
D (764) spi_flash: trying chip: mxic[0m
D (768) spi_flash: trying chip: winbond[0m
D (772) spi_flash: trying chip: generic[0m
[0;32mI (776) spi_flash: detected chip: generic[0m
[0;32mI (780) spi_flash: flash io: dio[0m
D (784) cpu_start: calling init function: 0x40110f34[0m
D (789) cpu_start: calling init function: 0x40110a50[0m
D (794) cpu_start: calling init function: 0x40109d30[0m
D (800) cpu_start: calling init function: 0x400ed700[0m
D (805) cpu_start: calling init function: 0x400d8d94[0m
D (810) cpu_start: calling init function: 0x400d3c90[0m
D (815) cpu_start: calling init function: 0x400d2e54[0m
D (820) cpu_start: calling init function: 0x400d6460 on core: 0[0m
D (826) intr_alloc: Connected src 17 to int 3 (cpu 0)[0m
D (831) cpu_start: calling init function: 0x401254c4 on core: 0[0m
D (837) intr_alloc: Connected src 24 to int 9 (cpu 0)[0m
[0;32mI (842) app_start: Starting scheduler on CPU0[0m
[0;3D (847) intr_alloc: Connected src 25 to int 2 (cpu 1)[0m
[0;32mI (847) app_start: Starting scheduler on CPU1[0m
2mI (847) main_task: Started on CPU0[0m
D (867) heap_init: New heap initialised at 0x3ffe0440[0m
D (867) heap_init: New heap initialised at 0x3ffe4350[0m
D (867) intr_alloc: Connected src 16 to int 12 (cpu 0)[0m
[0;32mI (867) main_task: Calling app_main()[0m


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Modbus RS485 multi-device test cases/nD (1007) esp_netif_lwip: LwIP stack has been initialized[0m
D (1007) esp_netif_lwip: esp-netif has been successfully initialized[0m
D (1007) event: running task for loop 0x3ffb8e64[0m
D (1017) event: created task for loop 0x3ffb8e64[0m
D (1017) event: created event loop 0x3ffb8e64[0m
D (1027) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1027) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1037) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1047) esp_netif_lwip: check: remote, if=0x0 fn=0x401080b4
[0m
D (1047) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1057) esp_netif_objects: esp_netif_add_to_list 0x3ffbb1e8[0m
D (1057) esp_netif_objects: esp_netif_add_to_list netif added successfully (total netifs: 1)[0m
D (1067) intr_alloc: Connected src 38 to int 13 (cpu 0)[0m
[0;32mI (1107) system_api: Base MAC address is not set[0m
[0;32mI (1107) system_api: read default base MAC address from EFUSE[0m
D (1107) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1107) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1117) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1127) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1127) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1137) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1147) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1177) esp_eth: new ethernet driver @0x3ffbf160[0m
[0;32mI (1177) esp_eth.netif.netif_glue: 10:97:bd:d5:51:f3[0m
D (1177) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x401080c4
[0m
D (1177) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (1187) esp_eth.netif.netif_glue: ethernet attached to netif[0m
D (3587) event: running post ETH_EVENT:0 with handler 0x400e9290 and context 0x3ffb9f94 on loop 0x3ffb8e64[0m
D (3587) event: running post ETH_EVENT:0 with handler 0x4010b2e8 and context 0x3ffbf20c on loop 0x3ffb8e64[0m
D (3587) esp_eth.netif.netif_glue: eth_action_start: 0x3ffbf1d8, 0x3f41729c, 0, 0x3ffbf30c, 0x3ffbf160[0m
D (3597) esp_netif_handlers: esp_netif action has started with netif0x3ffbb1e8 from event_id=0[0m
D (3607) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x40108948
[0m
D (3617) esp_netif_lwip: esp_netif_start_api 0x3ffbb1e8[0m
D (3617) esp.emac: working in 100Mbps[0m
D (3617) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffbb1e8[0m
D (3627) esp_netif_lwip: check: local, if=0x3ffbb1e8 fn=0x40109634
[0m
D (3637) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb1e8[0m
D (3647) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3647) esp.emac: working in full duplex[0m
D (3657) esp.emac: Flow control not enabled for the link[0m
D (3657) esp.emac: emac started[0m
D (3667) event: running post ETH_EVENT:2 with handler 0x400e9290 and context 0x3ffb9f94 on loop 0x3ffb8e64[0m
D (3677) event: running post ETH_EVENT:2 with handler 0x4010b270 and context 0x3ffbf26c on loop 0x3ffb8e64[0m
D (3677) esp_eth.netif.netif_glue: eth_action_connected: 0x3ffbf1d8, 0x3f41729c, 2, 0x3ffbf30c, 0x3ffbf160[0m
D (3687) esp_netif_handlers: esp_netif action connected with netif0x3ffbb1e8 from event_id=2[0m
D (3697) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x40108b94
[0m
D (3707) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffbb1e8[0m
[0;32mI (3707) ethernet_connect: Waiting for IP(s).[0m
D (3717) esp_netif_lwip: check: local, if=0x3ffbb1e8 fn=0x40109634
[0m
D (3727) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb1e8[0m
D (3727) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3737) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x40108780
[0m
D (3747) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffbb1e8[0m
D (3747) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb1e8[0m
D (3757) esp_netif_lwip: if0x3ffbb1e8 start ip lost tmr: no need start because netif=0x3ffbb270 interval=120 ip=0[0m
D (3767) esp_netif_lwip: starting dhcp client[0m
D (3777) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (4127) esp.emac: receive len= 60[0m
D (4137) esp.emac: receive len= 119[0m
D (4137) esp.emac: receive len= 119[0m
D (6067) esp.emac: receive len= 119[0m
D (7277) esp.emac: receive len= 62[0m
D (8067) esp.emac: receive len= 119[0m
D (8277) esp.emac: receive len= 342[0m
D (8277) esp.emac: receive len= 342[0m
D (9277) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb270[0m
D (9277) esp_netif_lwip: if0x3ffbb1e8 ip changed=1[0m
D (9277) event: running post IP_EVENT:4 with handler 0x400e9290 and context 0x3ffb9f60 on loop 0x3ffb8e64[0m
D (9287) event: running post IP_EVENT:4 with handler 0x4010b1f8 and context 0x3ffbf2cc on loop 0x3ffb8e64[0m
D (9297) esp_eth.netif.netif_glue: eth_action_got_ip: 0x3ffbf1d8, 0x3f4153c8, 4, 0x3ffbf3f0, 0x3ffbb1e8[0m
D (9297) esp_netif_handlers: esp_netif action got_ip with netif0x3ffbb1e8 from event_id=4[0m
[0;32mI (9307) esp_netif_handlers: example_netif_eth ip: 192.168.34.122, mask: 255.255.254.0, gw: 192.168.34.252[0m
D (9317) event: running post IP_EVENT:4 with handler 0x400ebd14 and context 0x3ffbf2ec on loop 0x3ffb8e64[0m
[0;32mI (9327) ethernet_connect: Got IPv4 event: Interface "example_netif_eth" address: 192.168.34.122[0m
D (9337) esp_netif_lwip: check: remote, if=0x400ebb64 fn=0x40126488
[0m
[0;32mI (9347) example_common: Connected to example_netif_eth[0m
D (9357) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
[0;32mI (9357) example_common: - IPv4 address: 192.168.34.122,[0m
D (9367) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (9367) esp_netif_lwip: check: remote, if=0x3ffb62a0 fn=0x40108008
[0m
D (9377) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (9387) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).[0m
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.
D (10067) esp.emac: receive len= 119[0m
D (10147) esp.emac: receive len= 337[0m
D (11377) esp.emac: receive len= 60[0m
D (12077) esp.emac: receive len= 119[0m
D (12297) esp.emac: receive len= 60[0m
D (12997) esp.emac: receive len= 60[0m
D (14067) esp.emac: receive len= 119[0m
[0;31mE (14267) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (14267) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (14267) task_wdt: Tasks currently running:[0m
[0;31mE (14267) task_wdt: CPU 0: main[0m
[0;31mE (14267) task_wdt: CPU 1: IDLE1[0m
[0;31mE (14267) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EDB17:0x3FFB0E60 0x400EDC9E:0x3FFB0E80 0x40082DA5:0x3FFB0EA0 0x400092CD:0x3FFB6280 0x400DA3BE:0x3FFB62B0 0x400D9A09:0x3FFB62E0 0x400D9A39:0x3FFB6310 0x400D8BAD:0x3FFB6330 0x400D9DDE:0x3FFB6390 0x400D9F69:0x3FFB63C0 0x400D9FEA:0x3FFB64E0 0x400DA09A:0x3FFB6500 0x400DA0CD:0x3FFB6520 0x400DA27E:0x3FFB6540 0x400D897D:0x3FFB6660 0x4012A14B:0x3FFB6680 0x40087119:0x3FFB66B0

D (16057) esp.emac: receive len= 119[0m
D (16947) esp.emac: receive len= 60[0m
D (17867) esp.emac: receive len= 60[0m
D (17977) esp.emac: receive len= 60[0m
D (18057) esp.emac: receive len= 119[0m
D (19017) esp.emac: receive len= 60[0m
[0;31mE (19267) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (19267) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (19267) task_wdt: Tasks currently running:[0m
[0;31mE (19267) task_wdt: CPU 0: main[0m
[0;31mE (19267) task_wdt: CPU 1: IDLE1[0m
[0;31mE (19267) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EDB17:0x3FFB0E60 0x400EDC9E:0x3FFB0E80 0x40082DA5:0x3FFB0EA0 0x400092CD:0x3FFB6280 0x400DA3BE:0x3FFB62B0 0x400D9A09:0x3FFB62E0 0x400D9A39:0x3FFB6310 0x400D8BAD:0x3FFB6330 0x400D9DDE:0x3FFB6390 0x400D9F69:0x3FFB63C0 0x400D9FEA:0x3FFB64E0 0x400DA09A:0x3FFB6500 0x400DA0CD:0x3FFB6520 0x400DA27E:0x3FFB6540 0x400D897D:0x3FFB6660 0x4012A14B:0x3FFB6680 0x40087119:0x3FFB66B0

D (20057) esp.emac: receive len= 119[0m
D (20897) esp.emac: receive len= 60[0m
D (21237) esp.emac: receive len= 195[0m
D (22057) esp.emac: receive len= 119[0m
D (24077) esp.emac: receive len= 119[0m
[0;31mE (24267) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (24267) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (24267) task_wdt: Tasks currently running:[0m
[0;31mE (24267) task_wdt: CPU 0: main[0m
[0;31mE (24267) task_wdt: CPU 1: IDLE1[0m
[0;31mE (24267) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EDB17:0x3FFB0E60 0x400EDC9E:0x3FFB0E80 0x40082DA5:0x3FFB0EA0 0x400092E5:0x3FFB6260 0x400DA2D5:0x3FFB6280 0x400DA3BE:0x3FFB62B0 0x400D9A09:0x3FFB62E0 0x400D9A39:0x3FFB6310 0x400D8BAD:0x3FFB6330 0x400D9DDE:0x3FFB6390 0x400D9F69:0x3FFB63C0 0x400D9FEA:0x3FFB64E0 0x400DA09A:0x3FFB6500 0x400DA0CD:0x3FFB6520 0x400DA27E:0x3FFB6540 0x400D897D:0x3FFB6660 0x4012A14B:0x3FFB6680 0x40087119:0x3FFB66B0

D (26057) esp.emac: receive len= 119[0m
D (28057) esp.emac: receive len= 119[0m
[0;31mE (29267) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (29267) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (29267) task_wdt: Tasks currently running:[0m
[0;31mE (29267) task_wdt: CPU 0: main[0m
[0;31mE (29267) task_wdt: CPU 1: IDLE1[0m
[0;31mE (29267) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EDB17:0x3FFB0E60 0x400EDC9E:0x3FFB0E80 0x40082DA5:0x3FFB0EA0 0x400092E5:0x3FFB6260 0x400DA2D5:0x3FFB6280 0x400DA3BE:0x3FFB62B0 0x400D9A09:0x3FFB62E0 0x400D9A39:0x3FFB6310 0x400D8BAD:0x3FFB6330 0x400D9DDE:0x3FFB6390 0x400D9F69:0x3FFB63C0 0x400D9FEA:0x3FFB64E0 0x400DA09A:0x3FFB6500 0x400DA0CD:0x3FFB6520 0x400DA27E:0x3FFB6540 0x400D897D:0x3FFB6660 0x4012A14B:0x3FFB6680 0x40087119:0x3FFB66B0

D (30057) esp.emac: receive len= 119[0m
D (32057) esp.emac: receive len= 119[0m
D (34027) esp.emac: receive len= 60[0m
D (34057) esp.emac: receive len= 119[0m
[0;31mE (34267) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (34267) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (34267) task_wdt: Tasks currently running:[0m
[0;31mE (34267) task_wdt: CPU 0: main[0m
[0;31mE (34267) task_wdt: CPU 1: IDLE1[0m
[0;31mE (34267) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EDB17:0x3FFB0E60 0x400EDC9E:0x3FFB0E80 0x40082DA5:0x3FFB0EA0 0x400DA2D5:0x3FFB6280 0x400DA3BE:0x3FFB62B0 0x400D9A09:0x3FFB62E0 0x400D9A39:0x3FFB6310 0x400D8BAD:0x3FFB6330 0x400D9DDE:0x3FFB6390 0x400D9F69:0x3FFB63C0 0x400D9FEA:0x3FFB64E0 0x400DA09A:0x3FFB6500 0x400DA0CD:0x3FFB6520 0x400DA27E:0x3FFB6540 0x400D897D:0x3FFB6660 0x4012A14B:0x3FFB6680 0x40087119:0x3FFB66B0

D (36057) esp.emac: receive len= 119[0m
D (38057) esp.emac: receive len= 119[0m
D (39137) esp.emac: receive len= 350[0m
[0;31mE (39267) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (39267) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (39267) task_wdt: Tasks currently running:[0m
[0;31mE (39267) task_wdt: CPU 0: main[0m
[0;31mE (39267) task_wdt: CPU 1: IDLE1[0m
[0;31mE (39267) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EDB17:0x3FFB0E60 0x400EDC9E:0x3FFB0E80 0x40082DA5:0x3FFB0EA0 0x400092E5:0x3FFB6260 0x400DA2D5:0x3FFB6280 0x400DA3BE:0x3FFB62B0 0x400D9A09:0x3FFB62E0 0x400D9A39:0x3FFB6310 0x400D8BAD:0x3FFB6330 0x400D9DDE:0x3FFB6390 0x400D9F69:0x3FFB63C0 0x400D9FEA:0x3FFB64E0 0x400DA09A:0x3FFB6500 0x400DA0CD:0x3FFB6520 0x400DA27E:0x3FFB6540 0x400D897D:0x3FFB6660 0x4012A14B:0x3FFB6680 0x40087119:0x3FFB66B0

D (39877) esp.emac: receive len= 60[0m
D (40057) esp.emac: receive len= 119[0m
D (40147) esp.emac: receive len= 350[0m
D (40147) esp.emac: receive len= 60[0m
D (40637) esp.emac: receive len= 60[0m
D (40867) esp.emac: receive len= 60[0m
D (41137) esp.emac: receive len= 60[0m
D (41717) esp.emac: receive len= 101[0m
D (41717) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (41867) esp.emac: receive len= 60[0m
D (42027) esp.emac: receive len= 101[0m
D (42027) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (42057) esp.emac: receive len= 119[0m

D (42217) event: created event loop 0x3ffc10f8[0m
D (42217) mb_driver: Start of driver task.[0m
D (42317) esp.emac: receive len= 101[0m
D (42317) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (42427) mb_driver: 0x3ffc0ce8, driver check shutdown (8)...[0m
D (42427) mb_driver: 0x3ffc0ce8, driver task is suspended...[0m
D (42427) mb_driver: 0x3ffc0ce8, stop tcp driver task.[0m
D (42427) mb_driver: 0x3ffc0ce8, event 0x1, register.[0m
D (42437) mb_driver: 0x3ffc0ce8, event 0x2, register.[0m
D (42437) mb_driver: 0x3ffc0ce8, event 0x4, register.[0m
D (42447) mb_driver: 0x3ffc0ce8, event 0x8, register.[0m
D (42447) mb_driver: 0x3ffc0ce8, event 0x40, register.[0m
D (42457) mb_driver: 0x3ffc0ce8, event 0x10, register.[0m
D (42457) mb_driver: 0x3ffc0ce8, event 0x20, register.[0m
D (42467) mb_driver: 0x3ffc0ce8, event 0x80, register.[0m
D (42467) mb_driver: 0x3ffc0ce8, event 0x100, register.[0m
D (42477) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4[0m
D (42487) mb_driver: 0x3ffc0ce8, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502[0m
D (42497) mb_port.tcp.master: 0x3ffc0ce8, open slave: 0, mb_slave_tcp_01:1502[0m
D (42497) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4[0m
D (42517) mb_driver: 0x3ffc0ce8, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502[0m
D (42517) mb_port.tcp.master: 0x3ffc0ce8, open slave: 1, mb_slave_tcp_c8:502[0m
[0;32mI (42527) port.utils: hostname set to: [mb_master_tcp_d551f3][0m
D (42537) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
[0;32mI (42537) port.utils: mdns delegate hostname set to: [mb_master_tcp_00][0m
[0;32mI (42547) port.utils: IP: 192.168.34.122[0m
[0;32mI (42557) port.utils: GW: 192.168.34.252[0m
[0;32mI (42557) port.utils: NETMASK: 255.255.254.0[0m
D (42567) mb_port.tcp.master: created object @0x3ffc0b24[0m
D (42567) mb_port.timer: initialized mb_port.timer object @0x3ffc34a8[0m
D (42577) mb_port.event: initialized object @0x3ffc34e0[0m
D (42577) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffc0870[0m
D (42587) mb_object.master: created object mbm_tcp#0x3ffbf4f4[0m
[0;32mI (42597) mbc_tcp.master: mb found config for cid #0, uid=1.[0m
[0;32mI (42597) mbc_tcp.master: mb found config for cid #1, uid=1.[0m
[0;32mI (42607) mbc_tcp.master: mb found config for cid #2, uid=200.[0m
[0;32mI (42607) mbc_tcp.master: mb found config for cid #3, uid=1.[0m
D (42617) esp.emac: receive len= 95[0m
[0;32mI (42627) mbc_tcp.master: mb found config for cid #4, uid=1.[0m
[0;32mI (42627) TEST_COMMON: 0x3ffbf4f4, modbus master stack is initialized[0m
D (42637) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (42637) mb_driver: 0x3ffc0ce8, resume tcp driver task.[0m
D (42647) mb_driver: 0x3ffc0ce8, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT[0m
D (42657) event: running post loop:0x3ffc0ce8:256 with handler 0x401277c4 and context 0x3ffc2b94 on loop 0x3ffc10f8[0m
D (42667) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_timeout: fd: -1[0m
D (42677) event: running post loop:0x3ffc0ce8:2 with handler 0x401270cc and context 0x3ffc2a44 on loop 0x3ffc10f8[0m
D (42687) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_open: fd: 0[0m
D (42687) event: running post loop:0x3ffc0ce8:2 with handler 0x401270cc and context 0x3ffc2a44 on loop 0x3ffc10f8[0m
D (42697) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_open: fd: 1[0m
D (42707) mb_port.timer: mbm_tcp#0x3ffbf4f4, start timer (1000000).[0m
D (42707) mb_driver: 0x3ffc0ce8, fd event get: 0x04:-1, |MB_EVENT_RESOLVE[0m
D (42717) event: running post loop:0x3ffc0ce8:4 with handler 0x4012760c and context 0x3ffc2a74 on loop 0x3ffc10f8[0m
D (42727) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_resolve: fd: -1[0m
D (42737) event: running post loop:0x3ffc0ce8:4 with handler 0x4012760c and context 0x3ffc2a74 on loop 0x3ffc10f8[0m
D (42747) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_resolve: fd: 0[0m
D (42757) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (42757) esp.emac: receive len= 150[0m
D (42767) port.utils: Incorrect host IP: mb_slave_tcp_01[0m
D (42767) port.utils: Query A: mb_slave_tcp_01.local[0m
D (42867) esp.emac: receive len= 60[0m
D (42917) esp.emac: receive len= 91[0m
D (42917) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (42917) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.34.175[0m
[0;32mI (42927) mb_port.tcp.master: 0x3ffc0ce8, slave: 0, resolved with IP:192.168.34.175.[0m
D (42937) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (42937) event: running post loop:0x3ffc0ce8:4 with handler 0x4012760c and context 0x3ffc2a74 on loop 0x3ffc10f8[0m
D (42947) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_resolve: fd: 1[0m
D (42957) esp.emac: receive len= 150[0m
D (42967) port.utils: Incorrect host IP: mb_slave_tcp_c8[0m
D (42967) port.utils: Query A: mb_slave_tcp_c8.local[0m
D (43047) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (43117) esp.emac: receive len= 91[0m
D (43117) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (43117) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.34.175[0m
[0;32mI (43127) mb_port.tcp.master: 0x3ffc0ce8, slave: 1, resolved with IP:192.168.34.175.[0m
D (43137) mb_driver: 0x3ffc0ce8, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (43137) event: running post loop:0x3ffc0ce8:8 with handler 0x401277f4 and context 0x3ffc2aa4 on loop 0x3ffc10f8[0m
D (43147) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_connect: fd: 0[0m
D (43157) mb_port.tcp.master: 0x3ffc0ce8, connection phase, slave: #0(-1) [192.168.34.175].[0m
D (43167) esp.emac: receive len= 60[0m
D (43167) esp.emac: receive len= 60[0m
[0;32mI (43177) mb_port.tcp.master: 0x3ffc0ce8, slave: #0, sock:54, IP: 192.168.34.175, is connected.[0m
D (43177) mb_port.tcp.master: Opened/connected: 2, 1.[0m
D (43347) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (43397) mb_driver: 0x3ffc0ce8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (43397) event: running post loop:0x3ffc0ce8:8 with handler 0x401277f4 and context 0x3ffc2aa4 on loop 0x3ffc10f8[0m
D (43397) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_connect: fd: 1[0m
D (43407) mb_port.tcp.master: 0x3ffc0ce8, connection phase, slave: #1(-1) [192.168.34.175].[0m
D (43417) esp.emac: receive len= 60[0m
[0;32mI (43417) mb_port.tcp.master: 0x3ffc0ce8, slave: #1, sock:55, IP: 192.168.34.175, is connected.[0m
D (43427) mb_port.tcp.master: Opened/connected: 2, 2.[0m
[0;32mI (43437) mbc_tcp.master: mb controller connection done.[0m
[0;32mI (43437) mb_port.tcp.master: 0x3ffc0ce8, Connected: 2, 2, start polling.[0m
[0;32mI (43447) TEST_COMMON: 0x3ffbf4f4, modbus master start...[0m
D (43457) mb_object.master: 0x3ffbf4f4:EV_READY[0m
Send signal: [Master_started]!
D (43467) TEST_COMMON: Notify task start 0x3ffc5444[0m
D (43467) TEST_COMMON: Task: 0x3ffc5444, get notify value = 1[0m
D (43467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (43487) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (43487) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (43487) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (43497) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (43507) event: running post loop:0x3ffc0ce8:256 with handler 0x401277c4 and context 0x3ffc2b94 on loop 0x3ffc10f8[0m
D (43517) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_timeout: fd: -1[0m
D (43527) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (43537) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (43537) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (43557) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (43567) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (43567) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (43577) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (43647) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (43657) esp.emac: receive len= 60[0m
D (43757) esp.emac: receive len= 66[0m
D (43757) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (43757) port.utils: Enqueue data, length=12, TID=0x0[0m
D (43757) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (43767) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (43777) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (43787) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (43787) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (43797) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0000 received.[0m
D (43807) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (43807) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc0b84.[0m
D (43827) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 260719.[0m
D (43827) esp.emac: receive len= 95[0m
D (43837) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (43847) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 00 00 01 [0m
D (43847) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (43857) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (43857) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (43867) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (43867) esp.emac: receive len= 60[0m
D (43867) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (43877) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 374873[0m
D (43887) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (43907) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (43907) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (43927) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
D (43927) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (43927) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (43947) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (43947) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (43957) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (43957) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (43967) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (43977) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (43987) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0001, 15 (bytes), errno 119[0m
D (43997) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (44007) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (44007) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (44057) esp.emac: receive len= 119[0m
D (44167) esp.emac: receive len= 60[0m
D (44177) esp.emac: receive len= 66[0m
D (44177) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (44177) port.utils: Enqueue data, length=12, TID=0x1[0m
D (44187) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (44197) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (44197) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (44207) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (44217) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (44227) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0001 received.[0m
D (44227) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (44237) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc0b84.[0m
D (44247) esp.emac: receive len= 91[0m
D (44247) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 254253.[0m
D (44257) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (44267) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 01 00 01 [0m
D (44277) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (44277) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (44287) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (44287) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (44297) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (44297) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 341448[0m
D (44307) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (44327) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44327) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (44347) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
D (44347) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (44347) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (44367) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (44367) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 15[0m
D (44377) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (44377) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (44387) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (44397) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (44407) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (44417) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (44407) esp.emac: receive len= 60[0m
D (44427) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (44437) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (44607) esp.emac: receive len= 66[0m
D (44607) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (44617) port.utils: Enqueue data, length=12, TID=0x0[0m
D (44617) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (44627) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (44627) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (44637) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (44647) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (44657) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0000 received.[0m
D (44657) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (44667) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc0b84.[0m
D (44677) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 259805.[0m
D (44687) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (44697) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 02 00 01 [0m
D (44697) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (44707) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (44707) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (44717) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (44727) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (44727) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 348149[0m
D (44747) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (44747) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44747) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (44767) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
D (44767) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (44787) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (44787) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (44787) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (44797) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (44807) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (44817) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (44827) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (44837) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (44847) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (44847) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (44857) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (44907) esp.emac: receive len= 60[0m
D (45037) esp.emac: receive len= 66[0m
D (45037) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (45037) port.utils: Enqueue data, length=12, TID=0x2[0m
D (45037) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45047) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45057) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (45067) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (45067) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45077) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0002 received.[0m
D (45087) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (45087) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc0b84.[0m
D (45097) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257318.[0m
D (45107) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (45117) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 03 00 01 [0m
D (45127) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (45127) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (45137) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (45137) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (45147) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (45157) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 350957[0m
D (45167) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45167) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (45187) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
D (45187) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (45207) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (45207) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 00 00 01 [0m
D (45207) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (45217) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45227) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (45237) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (45237) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (45247) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (45257) SENT: 00 03 00 00 00 06 01 03 00 00 00 01 [0m
D (45267) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (45277) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (45417) esp.emac: receive len= 60[0m
D (45437) esp.emac: receive len= 65[0m
D (45437) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (45437) port.utils: Enqueue data, length=11, TID=0x3[0m
D (45437) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45447) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45457) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (45467) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (45477) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45477) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0003 received.[0m
D (45487) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (45497) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc0b84.[0m
D (45507) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 242759.[0m
D (45517) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (45517) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 11 11 [0m
D (45527) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (45527) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (45537) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (45537) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (45547) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (45557) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 334254[0m
D (45567) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45567) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (45587) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (45587) TEST_COMMON: CHAR #0, value is ok.[0m
D (45607) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (45607) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (45607) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 01 00 01 [0m
D (45617) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (45627) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45627) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (45637) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (45647) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (45657) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0004, 12 (bytes), errno 119[0m
D (45657) esp.emac: receive len= 60[0m
D (45677) SENT: 00 04 00 00 00 06 01 03 00 01 00 01 [0m
D (45677) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (45687) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (45847) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb1e8[0m
D (45857) esp.emac: receive len= 65[0m
D (45857) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (45867) port.utils: Enqueue data, length=11, TID=0x4[0m
D (45867) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45877) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45877) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (45887) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (45897) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45907) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0004 received.[0m
D (45907) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (45917) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc0b84.[0m
D (45927) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 255493.[0m
D (45937) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (45947) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 22 22 [0m
D (45947) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (45957) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (45957) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (45967) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (45977) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (45977) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 352477[0m
D (45997) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45997) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (46017) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (46017) TEST_COMMON: CHAR #1, value is ok.[0m
D (46017) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (46037) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (46037) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 02 00 01 [0m
D (46037) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 12[0m
D (46047) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (46057) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (46057) esp.emac: receive len= 119[0m
D (46067) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (46077) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (46087) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0001, 12 (bytes), errno 119[0m
D (46097) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01 [0m
D (46097) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (46107) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (46157) esp.emac: receive len= 60[0m
D (46287) esp.emac: receive len= 65[0m
D (46287) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (46287) port.utils: Enqueue data, length=11, TID=0x1[0m
D (46287) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (46297) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (46307) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (46317) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (46317) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (46327) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0001 received.[0m
D (46337) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (46337) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc0b84.[0m
D (46337) esp.emac: receive len= 337[0m
D (46357) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 260263.[0m
D (46367) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (46377) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 33 33 [0m
D (46377) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (46387) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (46387) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (46397) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (46397) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (46407) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 356017[0m
D (46427) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46427) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (46427) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (46447) TEST_COMMON: CHAR #2, value is ok.[0m
D (46447) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (46467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (46467) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 03 00 01 [0m
D (46467) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (46477) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (46477) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (46497) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (46497) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (46507) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (46517) SENT: 00 05 00 00 00 06 01 03 00 03 00 01 [0m
D (46527) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (46527) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (46667) esp.emac: receive len= 60[0m
D (46697) esp.emac: receive len= 65[0m
D (46707) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (46707) port.utils: Enqueue data, length=11, TID=0x5[0m
D (46707) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (46717) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (46717) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (46727) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (46737) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (46747) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0005 received.[0m
D (46757) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (46757) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc0b84.[0m
D (46767) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249093.[0m
D (46777) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (46787) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 44 44 [0m
D (46787) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (46797) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (46797) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (46807) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (46817) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (46817) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 339342[0m
D (46837) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46837) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (46857) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (46857) TEST_COMMON: CHAR #3, value is ok.[0m
D (46857) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (46877) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (46877) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 00 [0m
D (46877) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (46887) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (46897) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (46907) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (46917) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (46927) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (46937) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00 [0m
D (46937) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (46947) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (47127) esp.emac: receive len= 66[0m
D (47127) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (47127) port.utils: Enqueue data, length=12, TID=0x6[0m
D (47127) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47137) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47147) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (47157) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (47157) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47167) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0006 received.[0m
D (47177) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (47177) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc0b84.[0m
D (47187) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257150.[0m
D (47197) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (47207) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (47217) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (47217) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (47227) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (47227) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (47237) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 [0m
D (47237) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 350775[0m
D (47257) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (47257) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (47277) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.[0m
D (47337) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (47337) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (47337) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (47337) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (47347) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (47357) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (47367) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (47377) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47387) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0007, 15 (bytes), errno 119[0m
D (47397) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (47397) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (47407) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (47407) esp.emac: receive len= 60[0m
D (47637) esp.emac: receive len= 66[0m
D (47647) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (47647) port.utils: Enqueue data, length=12, TID=0x7[0m
D (47647) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47657) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47657) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (47667) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (47677) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47687) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0007 received.[0m
D (47697) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (47697) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc0b84.[0m
D (47707) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 312581.[0m
D (47717) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (47727) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 00 00 01 [0m
D (47727) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (47737) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (47737) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (47747) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (47757) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (47757) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 406190[0m
D (47777) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (47777) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (47797) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (47797) TEST_COMMON: CHAR #0, value is ok.[0m
D (47797) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (47817) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (47817) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (47817) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (47827) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (47837) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (47847) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (47857) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47867) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (47877) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (47877) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (47887) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (47907) esp.emac: receive len= 60[0m
D (48057) esp.emac: receive len= 119[0m
D (48067) esp.emac: receive len= 66[0m
D (48067) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (48067) port.utils: Enqueue data, length=12, TID=0x8[0m
D (48067) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (48077) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (48087) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (48097) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (48097) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (48107) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0008 received.[0m
D (48117) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (48117) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc0b84.[0m
D (48137) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 258466.[0m
D (48147) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (48147) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 01 00 01 [0m
D (48157) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (48157) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (48167) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (48167) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (48177) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (48187) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 352127[0m
D (48197) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48197) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (48217) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (48217) TEST_COMMON: CHAR #1, value is ok.[0m
D (48237) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (48237) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (48237) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (48247) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 15[0m
D (48257) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (48257) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (48267) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (48277) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (48287) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (48297) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (48307) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (48307) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (48407) esp.emac: receive len= 60[0m
D (48487) esp.emac: receive len= 66[0m
D (48487) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (48497) port.utils: Enqueue data, length=12, TID=0x2[0m
D (48497) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (48507) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (48507) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (48517) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (48527) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (48537) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0002 received.[0m
D (48537) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (48547) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc0b84.[0m
D (48557) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 259687.[0m
D (48567) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (48577) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 02 00 01 [0m
D (48577) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (48587) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (48587) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (48597) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (48607) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (48607) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 353296[0m
D (48627) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48627) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (48647) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (48647) TEST_COMMON: CHAR #2, value is ok.[0m
D (48647) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (48667) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (48667) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (48667) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (48677) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (48687) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (48697) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (48697) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (48717) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0009, 15 (bytes), errno 119[0m
D (48727) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (48727) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (48737) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (48907) esp.emac: receive len= 60[0m
D (48917) esp.emac: receive len= 66[0m
D (48917) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (48917) port.utils: Enqueue data, length=12, TID=0x9[0m
D (48917) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (48927) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (48937) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (48947) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (48957) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (48957) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0009 received.[0m
D (48967) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (48977) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc0b84.[0m
D (48987) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 260891.[0m
D (48997) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (48997) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 03 00 01 [0m
D (49007) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (49007) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (49017) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (49027) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (49027) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (49037) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 353438[0m
D (49057) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49057) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (49057) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (49077) TEST_COMMON: CHAR #3, value is ok.[0m
D (49077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (49077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (49097) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 01 [0m
D (49097) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (49107) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (49107) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (49117) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (49127) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (49137) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (49147) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01 [0m
D (49157) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (49157) esp.emac: receive len= 60[0m
D (49167) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (49327) esp.emac: receive len= 66[0m
D (49337) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (49337) port.utils: Enqueue data, length=12, TID=0xa[0m
D (49337) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49347) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49347) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (49357) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (49367) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (49377) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000a received.[0m
D (49387) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (49387) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc0b84.[0m
D (49397) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250326.[0m
D (49407) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (49417) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (49417) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (49427) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (49437) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (49437) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (49447) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 [0m
D (49447) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 341018[0m
D (49467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49467) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (49487) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.[0m
D (49547) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (49547) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (49547) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 00 00 01 [0m
D (49547) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (49557) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (49567) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (49577) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (49587) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (49597) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (49607) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01 [0m
D (49607) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (49617) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (49657) esp.emac: receive len= 60[0m
D (49857) esp.emac: receive len= 65[0m
D (49857) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (49857) port.utils: Enqueue data, length=11, TID=0xb[0m
D (49867) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49867) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49877) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (49887) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (49897) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (49907) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000b received.[0m
D (49907) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (49917) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc0b84.[0m
D (49927) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 320707.[0m
D (49937) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (49947) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 11 11 [0m
D (49947) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (49957) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (49957) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (49967) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (49967) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (49977) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 413270[0m
D (49997) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49997) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (49997) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (50017) TEST_COMMON: CHAR #0, value is ok.[0m
D (50017) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (50037) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (50037) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 01 00 01 [0m
D (50037) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (50047) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (50057) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (50057) esp.emac: receive len= 119[0m
D (50067) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (50077) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (50087) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000c, 12 (bytes), errno 119[0m
D (50097) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01 [0m
D (50097) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (50107) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (50157) esp.emac: receive len= 60[0m
D (50287) esp.emac: receive len= 65[0m
D (50287) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (50287) port.utils: Enqueue data, length=11, TID=0xc[0m
D (50287) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (50297) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (50297) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (50307) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (50317) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (50327) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000c received.[0m
D (50337) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (50337) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000c:0x000d, 0x3ffc0b84.[0m
D (50347) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256124.[0m
D (50357) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (50367) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 22 22 [0m
D (50377) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (50377) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (50387) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (50387) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (50397) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (50397) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 350832[0m
D (50417) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50417) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (50437) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (50437) TEST_COMMON: CHAR #1, value is ok.[0m
D (50437) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (50457) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (50457) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 02 00 01 [0m
D (50457) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 12[0m
D (50467) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (50477) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (50487) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (50497) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (50507) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (50517) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01 [0m
D (50517) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (50527) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (50667) esp.emac: receive len= 60[0m
D (50707) esp.emac: receive len= 65[0m
D (50707) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (50707) port.utils: Enqueue data, length=11, TID=0x3[0m
D (50707) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (50717) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (50717) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (50737) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (50737) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (50747) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0003 received.[0m
D (50757) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (50757) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc0b84.[0m
D (50767) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 256008.[0m
D (50777) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (50787) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 33 33 [0m
D (50797) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (50797) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (50807) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (50807) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (50817) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (50817) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 348767[0m
D (50837) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50837) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (50857) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (50857) TEST_COMMON: CHAR #2, value is ok.[0m
D (50857) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (50877) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (50877) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 03 00 01 [0m
D (50877) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (50887) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (50897) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (50907) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (50917) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (50927) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000d, 12 (bytes), errno 119[0m
D (50937) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01 [0m
D (50937) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (50947) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (51127) esp.emac: receive len= 65[0m
D (51127) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (51127) port.utils: Enqueue data, length=11, TID=0xd[0m
D (51127) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51137) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51137) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (51157) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (51157) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51167) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000d received.[0m
D (51177) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (51177) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000d:0x000e, 0x3ffc0b84.[0m
D (51187) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256036.[0m
D (51197) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (51207) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 44 44 [0m
D (51217) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (51217) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (51227) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (51227) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (51237) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (51237) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 348636[0m
D (51257) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (51257) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (51277) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (51277) TEST_COMMON: CHAR #3, value is ok.[0m
D (51277) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (51297) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (51297) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 02 [0m
D (51297) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (51307) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (51317) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (51327) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (51337) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51347) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000e, 15 (bytes), errno 119[0m
D (51357) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02 [0m
D (51357) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (51367) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (51407) esp.emac: receive len= 60[0m
D (51537) esp.emac: receive len= 66[0m
D (51537) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (51537) port.utils: Enqueue data, length=12, TID=0xe[0m
D (51537) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51547) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51557) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (51567) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (51577) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51577) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000e received.[0m
D (51587) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (51597) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000e:0x000f, 0x3ffc0b84.[0m
D (51607) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249182.[0m
D (51617) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (51627) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (51627) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (51627) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (51637) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (51647) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (51647) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 [0m
D (51657) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 342799[0m
D (51677) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (51677) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (51677) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.[0m
D (51757) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (51757) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (51757) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (51757) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (51767) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (51777) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (51787) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (51797) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51807) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000f, 15 (bytes), errno 119[0m
D (51817) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (51817) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (51827) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (51907) esp.emac: receive len= 60[0m
D (52057) esp.emac: receive len= 119[0m
D (52057) esp.emac: receive len= 66[0m
D (52067) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (52067) port.utils: Enqueue data, length=12, TID=0xf[0m
D (52067) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (52077) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (52087) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (52097) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (52097) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (52107) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000f received.[0m
D (52117) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (52117) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000f:0x0010, 0x3ffc0b84.[0m
D (52137) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 316496.[0m
D (52147) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (52147) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 00 00 01 [0m
D (52157) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (52157) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (52167) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (52167) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (52177) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (52187) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 410141[0m
D (52197) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52197) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (52217) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (52217) TEST_COMMON: CHAR #0, value is ok.[0m
D (52237) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (52237) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (52237) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (52247) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (52257) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (52257) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (52267) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (52277) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (52287) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0010, 15 (bytes), errno 119[0m
D (52297) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (52307) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (52307) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (52417) esp.emac: receive len= 60[0m
D (52487) esp.emac: receive len= 66[0m
D (52487) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (52497) port.utils: Enqueue data, length=12, TID=0x10[0m
D (52497) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (52507) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (52507) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (52517) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (52527) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (52537) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0010 received.[0m
D (52537) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (52547) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0010:0x0011, 0x3ffc0b84.[0m
D (52557) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 259937.[0m
D (52567) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (52577) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 01 00 01 [0m
D (52577) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (52587) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (52587) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (52597) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (52607) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (52607) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 353546[0m
D (52627) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52627) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (52647) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (52647) TEST_COMMON: CHAR #1, value is ok.[0m
D (52647) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (52667) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (52667) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (52667) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 15[0m
D (52677) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (52687) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (52697) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (52707) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (52717) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0004, 15 (bytes), errno 119[0m
D (52727) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (52727) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (52737) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (52907) esp.emac: receive len= 60[0m
D (52917) esp.emac: receive len= 66[0m
D (52917) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (52917) port.utils: Enqueue data, length=12, TID=0x4[0m
D (52917) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (52927) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (52937) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (52947) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (52957) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (52957) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0004 received.[0m
D (52967) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (52977) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc0b84.[0m
D (52987) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 260411.[0m
D (52997) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (52997) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 02 00 01 [0m
D (53007) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (53007) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (53017) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (53017) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (53027) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (53037) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 353385[0m
D (53057) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53057) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (53057) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (53077) TEST_COMMON: CHAR #2, value is ok.[0m
D (53077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (53077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (53097) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (53097) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (53107) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53107) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (53117) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (53127) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53137) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0011, 15 (bytes), errno 119[0m
D (53147) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (53157) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (53157) esp.emac: receive len= 60[0m
D (53167) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (53347) esp.emac: receive len= 66[0m
D (53347) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (53347) port.utils: Enqueue data, length=12, TID=0x11[0m
D (53347) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (53357) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (53357) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (53367) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (53377) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (53387) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0011 received.[0m
D (53397) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (53397) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0011:0x0012, 0x3ffc0b84.[0m
D (53407) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 261007.[0m
D (53417) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (53427) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 03 00 01 [0m
D (53437) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (53437) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (53447) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (53447) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (53457) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (53457) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 351081[0m
D (53477) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53477) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (53497) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (53497) TEST_COMMON: CHAR #3, value is ok.[0m
D (53497) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (53517) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (53517) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 03 [0m
D (53517) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (53527) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53537) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (53547) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (53557) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53567) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0012, 15 (bytes), errno 119[0m
D (53577) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03 [0m
D (53577) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (53587) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (53657) esp.emac: receive len= 60[0m
D (53757) esp.emac: receive len= 60[0m
D (53767) esp.emac: receive len= 66[0m
D (53767) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (53767) port.utils: Enqueue data, length=12, TID=0x12[0m
D (53777) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (53787) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (53787) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (53797) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (53807) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (53817) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0012 received.[0m
D (53817) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (53827) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0012:0x0013, 0x3ffc0b84.[0m
D (53837) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 260904.[0m
D (53847) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (53857) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (53857) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (53867) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (53867) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (53877) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (53877) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 [0m
D (53887) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 354513[0m
D (53907) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53907) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (53927) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.[0m
D (53987) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (53987) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (53987) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 00 00 01 [0m
D (53987) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (53997) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (54007) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (54017) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (54027) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (54037) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0013, 12 (bytes), errno 119[0m
D (54047) SENT: 00 13 00 00 00 06 01 03 00 00 00 01 [0m
D (54047) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (54057) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (54057) esp.emac: receive len= 119[0m
D (54157) esp.emac: receive len= 60[0m
D (54287) esp.emac: receive len= 65[0m
D (54287) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (54297) port.utils: Enqueue data, length=11, TID=0x13[0m
D (54297) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (54307) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (54307) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (54317) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (54327) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (54337) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0013 received.[0m
D (54347) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (54347) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0013:0x0014, 0x3ffc0b84.[0m
D (54357) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 313339.[0m
D (54367) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (54377) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 11 11 [0m
D (54377) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (54387) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (54387) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (54397) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (54407) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (54407) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 405891[0m
D (54427) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54427) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (54447) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (54447) TEST_COMMON: CHAR #0, value is ok.[0m
D (54447) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (54467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (54467) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 01 00 01 [0m
D (54467) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (54477) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (54487) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (54497) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (54497) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (54517) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0014, 12 (bytes), errno 119[0m
D (54527) SENT: 00 14 00 00 00 06 01 03 00 01 00 01 [0m
D (54527) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (54537) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (54667) esp.emac: receive len= 60[0m
D (54707) esp.emac: receive len= 65[0m
D (54707) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (54717) port.utils: Enqueue data, length=11, TID=0x14[0m
D (54717) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (54727) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (54727) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (54737) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (54747) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (54757) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0014 received.[0m
D (54757) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (54767) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0014:0x0015, 0x3ffc0b84.[0m
D (54777) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 255193.[0m
D (54787) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (54797) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 22 22 [0m
D (54797) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (54807) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (54807) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (54817) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (54827) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (54827) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 347757[0m
D (54847) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54847) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (54867) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (54867) TEST_COMMON: CHAR #1, value is ok.[0m
D (54867) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (54887) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (54887) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 02 00 01 [0m
D (54887) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 12[0m
D (54897) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (54907) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (54917) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (54917) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (54927) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (54947) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01 [0m
D (54947) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (54957) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (55127) esp.emac: receive len= 65[0m
D (55127) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (55127) port.utils: Enqueue data, length=11, TID=0x5[0m
D (55127) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (55137) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (55137) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (55157) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (55157) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (55167) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0005 received.[0m
D (55177) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (55177) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc0b84.[0m
D (55187) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 247954.[0m
D (55197) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (55207) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 33 33 [0m
D (55217) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (55217) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (55227) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (55227) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (55237) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (55237) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 340746[0m
D (55257) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55257) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (55277) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (55277) TEST_COMMON: CHAR #2, value is ok.[0m
D (55277) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (55297) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (55297) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 03 00 01 [0m
D (55297) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (55307) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55317) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (55327) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (55337) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55347) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0015, 12 (bytes), errno 119[0m
D (55357) SENT: 00 15 00 00 00 06 01 03 00 03 00 01 [0m
D (55357) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (55367) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (55407) esp.emac: receive len= 60[0m
D (55547) esp.emac: receive len= 65[0m
D (55547) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (55547) port.utils: Enqueue data, length=11, TID=0x15[0m
D (55547) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (55557) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (55567) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (55577) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (55577) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (55587) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0015 received.[0m
D (55597) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (55597) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0015:0x0016, 0x3ffc0b84.[0m
D (55607) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256405.[0m
D (55617) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (55627) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 44 44 [0m
D (55637) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (55637) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (55647) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (55647) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (55657) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (55657) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 349011[0m
D (55677) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55677) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (55697) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (55697) TEST_COMMON: CHAR #3, value is ok.[0m
D (55697) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (55707) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (55727) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 04 [0m
D (55727) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (55727) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55737) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (55747) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (55757) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55767) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0016, 15 (bytes), errno 119[0m
D (55777) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04 [0m
D (55777) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (55787) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (55917) esp.emac: receive len= 60[0m
D (55967) esp.emac: receive len= 66[0m
D (55967) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (55967) port.utils: Enqueue data, length=12, TID=0x16[0m
D (55967) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (55977) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (55987) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (55997) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (55997) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (56007) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0016 received.[0m
D (56017) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (56027) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0016:0x0017, 0x3ffc0b84.[0m
D (56037) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257600.[0m
D (56047) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (56047) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (56057) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (56057) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (56057) esp.emac: receive len= 119[0m
D (56067) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (56077) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (56077) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 [0m
D (56087) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 349295[0m
D (56107) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (56107) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (56127) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.[0m
D (56187) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (56187) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (56187) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (56187) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (56207) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (56207) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (56217) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (56227) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (56237) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0017, 15 (bytes), errno 119[0m
D (56247) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (56257) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (56257) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (56407) esp.emac: receive len= 60[0m
D (56507) esp.emac: receive len= 66[0m
D (56507) mb_driver: 0x3ffc0ce8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (56507) event: running post loop:0x3ffc0ce8:256 with handler 0x401277c4 and context 0x3ffc2b94 on loop 0x3ffc10f8[0m
D (56517) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_timeout: fd: -1[0m
D (56567) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (56567) port.utils: Enqueue data, length=12, TID=0x17[0m
D (56567) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (56577) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (56577) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (56587) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (56597) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (56607) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0017 received.[0m
D (56607) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (56617) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0017:0x0018, 0x3ffc0b84.[0m
D (56627) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 381060.[0m
D (56637) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (56647) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 00 00 01 [0m
D (56647) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (56657) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (56657) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (56667) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (56677) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (56677) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 474653[0m
D (56697) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (56697) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (56717) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (56717) TEST_COMMON: CHAR #0, value is ok.[0m
D (56717) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (56737) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (56737) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (56737) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (56747) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (56757) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (56767) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (56767) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (56787) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0018, 15 (bytes), errno 119[0m
D (56797) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (56797) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (56807) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (56907) esp.emac: receive len= 60[0m
D (57017) esp.emac: receive len= 66[0m
D (57017) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (57017) port.utils: Enqueue data, length=12, TID=0x18[0m
D (57017) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (57027) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (57037) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (57047) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (57057) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (57067) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0018 received.[0m
D (57067) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (57077) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0018:0x0019, 0x3ffc0b84.[0m
D (57087) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 292862.[0m
D (57097) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (57107) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 01 00 01 [0m
D (57107) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (57117) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (57117) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (57127) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (57127) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (57137) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 386174[0m
D (57157) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57157) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (57157) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (57177) TEST_COMMON: CHAR #1, value is ok.[0m
D (57177) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (57197) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (57197) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (57197) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 15[0m
D (57207) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (57217) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (57227) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (57227) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (57237) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (57247) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (57257) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (57267) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (57417) esp.emac: receive len= 60[0m
D (57427) esp.emac: receive len= 60[0m
D (57467) esp.emac: receive len= 66[0m
D (57467) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (57467) port.utils: Enqueue data, length=12, TID=0x6[0m
D (57467) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (57477) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (57487) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (57497) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (57507) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (57517) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0006 received.[0m
D (57517) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (57527) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc0b84.[0m
D (57537) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 284477.[0m
D (57547) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (57557) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 02 00 01 [0m
D (57557) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (57567) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (57567) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (57577) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (57577) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (57587) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 375985[0m
D (57607) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57607) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (57607) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (57627) TEST_COMMON: CHAR #2, value is ok.[0m
D (57627) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (57647) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (57647) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (57647) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (57657) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (57667) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (57677) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (57677) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (57687) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0019, 15 (bytes), errno 119[0m
D (57697) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (57707) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (57717) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (57887) esp.emac: receive len= 66[0m
D (57887) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (57897) port.utils: Enqueue data, length=12, TID=0x19[0m
D (57897) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (57907) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (57907) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (57917) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (57927) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (57937) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0019 received.[0m
D (57937) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (57947) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0019:0x001a, 0x3ffc0b84.[0m
D (57957) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256351.[0m
D (57967) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (57977) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 03 00 01 [0m
D (57977) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (57987) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (57987) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (57997) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (57997) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (58007) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 347675[0m
D (58027) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58027) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (58047) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (58047) TEST_COMMON: CHAR #3, value is ok.[0m
D (58047) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (58057) esp.emac: receive len= 119[0m
D (58077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (58077) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 05 [0m
D (58077) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (58087) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (58087) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (58097) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (58107) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (58117) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001a, 15 (bytes), errno 119[0m
D (58127) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05 [0m
D (58137) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (58137) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (58157) esp.emac: receive len= 60[0m
D (58317) esp.emac: receive len= 66[0m
D (58317) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (58317) port.utils: Enqueue data, length=12, TID=0x1a[0m
D (58327) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (58337) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (58337) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (58347) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (58357) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (58367) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x001a received.[0m
D (58367) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (58377) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001a:0x001b, 0x3ffc0b84.[0m
D (58387) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257569.[0m
D (58397) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (58407) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (58407) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (58417) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (58417) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (58427) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (58427) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 [0m
D (58437) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 347001[0m
D (58457) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58457) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (58477) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.[0m
D (58537) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (58537) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (58537) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 00 00 01 [0m
D (58537) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (58547) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (58557) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (58567) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (58577) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (58587) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001b, 12 (bytes), errno 119[0m
D (58597) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01 [0m
D (58597) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (58607) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (58657) esp.emac: receive len= 60[0m
D (58837) esp.emac: receive len= 65[0m
D (58837) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (58847) port.utils: Enqueue data, length=11, TID=0x1b[0m
D (58847) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (58857) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (58857) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (58867) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (58877) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (58887) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x001b received.[0m
D (58887) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (58897) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001b:0x001c, 0x3ffc0b84.[0m
D (58907) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 313037.[0m
D (58917) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (58927) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 11 11 [0m
D (58927) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (58937) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (58937) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (58947) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (58957) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (58957) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 405601[0m
D (58977) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58977) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (58997) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (58997) TEST_COMMON: CHAR #0, value is ok.[0m
D (58997) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (59017) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (59017) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 01 00 01 [0m
D (59017) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (59027) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (59037) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (59047) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (59047) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (59067) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001c, 12 (bytes), errno 119[0m
D (59077) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01 [0m
D (59077) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (59087) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (59157) esp.emac: receive len= 60[0m
D (59257) esp.emac: receive len= 65[0m
D (59257) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (59267) port.utils: Enqueue data, length=11, TID=0x1c[0m
D (59267) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (59277) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (59277) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (59287) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (59297) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (59307) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x001c received.[0m
D (59307) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (59317) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001c:0x001d, 0x3ffc0b84.[0m
D (59327) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 255463.[0m
D (59337) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (59347) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 22 22 [0m
D (59347) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (59357) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (59357) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (59367) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (59377) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (59377) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 348039[0m
D (59397) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (59397) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (59417) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (59417) TEST_COMMON: CHAR #1, value is ok.[0m
D (59417) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (59437) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (59437) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 02 00 01 [0m
D (59437) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 12[0m
D (59447) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (59457) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (59467) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (59467) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (59477) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0007, 12 (bytes), errno 119[0m
D (59497) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01 [0m
D (59497) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (59507) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (59667) esp.emac: receive len= 60[0m
D (59677) esp.emac: receive len= 65[0m
D (59677) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (59677) port.utils: Enqueue data, length=11, TID=0x7[0m
D (59677) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (59687) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (59687) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (59697) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (59707) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (59717) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0007 received.[0m
D (59727) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (59727) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc0b84.[0m
D (59737) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 247618.[0m
D (59747) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (59757) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 33 33 [0m
D (59767) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (59767) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (59777) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (59777) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (59787) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (59787) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 340785[0m
D (59807) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (59807) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (59827) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (59827) TEST_COMMON: CHAR #2, value is ok.[0m
D (59827) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (59847) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (59847) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 03 00 01 [0m
D (59847) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (59857) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (59867) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (59877) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (59887) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (59897) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001d, 12 (bytes), errno 119[0m
D (59907) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01 [0m
D (59907) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (59907) esp.emac: receive len= 60[0m
D (59917) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (60057) esp.emac: receive len= 119[0m
D (60087) esp.emac: receive len= 65[0m
D (60087) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (60087) port.utils: Enqueue data, length=11, TID=0x1d[0m
D (60097) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (60107) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (60107) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (60117) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (60127) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60137) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x001d received.[0m
D (60137) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (60147) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001d:0x001e, 0x3ffc0b84.[0m
D (60157) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 252993.[0m
D (60167) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (60177) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 44 44 [0m
D (60177) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (60187) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (60187) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (60197) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (60197) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (60207) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 345573[0m
D (60227) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60227) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (60227) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (60247) TEST_COMMON: CHAR #3, value is ok.[0m
D (60247) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (60267) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (60267) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 06 [0m
D (60267) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (60277) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (60287) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (60297) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (60297) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (60307) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001e, 15 (bytes), errno 119[0m
D (60327) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06 [0m
D (60327) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (60337) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (60407) esp.emac: receive len= 60[0m
D (60537) esp.emac: receive len= 66[0m
D (60537) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (60537) port.utils: Enqueue data, length=12, TID=0x1e[0m
D (60537) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (60547) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (60547) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (60557) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (60567) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60577) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x001e received.[0m
D (60587) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (60587) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001e:0x001f, 0x3ffc0b84.[0m
D (60597) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 277987.[0m
D (60607) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (60617) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (60627) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (60627) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (60637) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (60637) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (60647) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 [0m
D (60647) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 370797[0m
D (60667) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60667) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (60687) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.[0m
D (60747) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (60747) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (60747) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (60747) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (60757) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (60767) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (60777) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (60787) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (60797) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001f, 15 (bytes), errno 119[0m
D (60807) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (60807) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (60817) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (60907) esp.emac: receive len= 60[0m
D (61057) esp.emac: receive len= 66[0m
D (61057) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (61057) port.utils: Enqueue data, length=12, TID=0x1f[0m
D (61067) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (61077) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (61077) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (61087) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (61097) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (61107) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x001f received.[0m
D (61107) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (61117) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001f:0x0020, 0x3ffc0b84.[0m
D (61127) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 320443.[0m
D (61137) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (61147) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 00 00 01 [0m
D (61147) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (61157) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (61157) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (61167) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (61167) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (61177) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 414044[0m
D (61197) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (61197) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (61217) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (61217) TEST_COMMON: CHAR #0, value is ok.[0m
D (61217) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (61237) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (61237) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (61237) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (61247) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (61257) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (61267) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (61267) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (61277) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0020, 15 (bytes), errno 119[0m
D (61297) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (61297) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (61307) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (61417) esp.emac: receive len= 60[0m
D (61477) esp.emac: receive len= 66[0m
D (61477) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (61487) port.utils: Enqueue data, length=12, TID=0x20[0m
D (61487) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (61497) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (61497) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (61507) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (61517) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (61527) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0020 received.[0m
D (61527) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (61537) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0020:0x0021, 0x3ffc0b84.[0m
D (61547) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256383.[0m
D (61557) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (61567) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 01 00 01 [0m
D (61567) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (61577) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (61577) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (61587) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (61597) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (61597) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 348957[0m
D (61617) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (61617) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (61637) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (61637) TEST_COMMON: CHAR #1, value is ok.[0m
D (61637) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (61657) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (61657) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (61657) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 15[0m
D (61667) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (61677) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (61687) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (61697) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (61707) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (61717) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (61717) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (61727) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (61907) esp.emac: receive len= 66[0m
D (61907) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (61907) port.utils: Enqueue data, length=12, TID=0x8[0m
D (61907) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (61917) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (61927) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (61937) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (61937) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (61947) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0008 received.[0m
D (61957) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (61957) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc0b84.[0m
D (61967) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 257409.[0m
D (61977) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (61987) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 02 00 01 [0m
D (61997) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (61997) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (62007) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (62007) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (62017) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (62017) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 351054[0m
D (62037) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62037) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (62057) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (62057) TEST_COMMON: CHAR #2, value is ok.[0m
D (62057) esp.emac: receive len= 119[0m
D (62077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (62077) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (62077) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (62087) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (62097) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62107) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (62117) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (62117) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (62127) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0021, 15 (bytes), errno 119[0m
D (62137) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (62147) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (62157) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (62157) esp.emac: receive len= 60[0m
D (62327) esp.emac: receive len= 66[0m
D (62327) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (62327) port.utils: Enqueue data, length=12, TID=0x21[0m
D (62327) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62337) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (62337) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (62357) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (62357) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62367) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0021 received.[0m
D (62377) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (62377) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0021:0x0022, 0x3ffc0b84.[0m
D (62387) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 250180.[0m
D (62397) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (62407) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 03 00 01 [0m
D (62417) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (62417) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (62427) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (62427) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (62437) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (62437) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 343809[0m
D (62457) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62457) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (62477) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (62477) TEST_COMMON: CHAR #3, value is ok.[0m
D (62477) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (62497) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (62497) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 07 [0m
D (62497) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (62507) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62517) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (62527) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (62537) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (62547) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0022, 15 (bytes), errno 119[0m
D (62557) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07 [0m
D (62557) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (62567) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (62657) esp.emac: receive len= 60[0m
D (62737) esp.emac: receive len= 66[0m
D (62737) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (62737) port.utils: Enqueue data, length=12, TID=0x22[0m
D (62737) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62747) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (62757) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (62767) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (62777) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62777) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0022 received.[0m
D (62787) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (62797) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0022:0x0023, 0x3ffc0b84.[0m
D (62807) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 249323.[0m
D (62817) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (62827) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (62827) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (62837) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (62837) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (62847) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (62847) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 [0m
D (62857) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 342935[0m
D (62877) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62877) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (62877) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.[0m
D (62957) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (62957) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (62957) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 00 00 01 [0m
D (62957) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (62967) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62977) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (62987) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (62997) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (63007) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0023, 12 (bytes), errno 119[0m
D (63017) SENT: 00 23 00 00 00 06 01 03 00 00 00 01 [0m
D (63017) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (63027) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (63157) esp.emac: receive len= 60[0m
D (63277) mb_driver: 0x3ffc0ce8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (63277) event: running post loop:0x3ffc0ce8:256 with handler 0x401277c4 and context 0x3ffc2b94 on loop 0x3ffc10f8[0m
D (63277) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_timeout: fd: -1[0m
D (63277) esp.emac: receive len= 65[0m
D (63337) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (63337) port.utils: Enqueue data, length=11, TID=0x23[0m
D (63337) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (63347) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (63347) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (63357) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (63367) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (63377) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0023 received.[0m
D (63377) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (63387) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0023:0x0024, 0x3ffc0b84.[0m
D (63397) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 381972.[0m
D (63407) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (63417) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 11 11 [0m
D (63417) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (63427) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (63427) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (63437) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (63447) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (63447) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 474527[0m
D (63467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63467) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (63487) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (63487) TEST_COMMON: CHAR #0, value is ok.[0m
D (63487) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (63487) esp.emac: receive len= 60[0m
D (63507) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (63507) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 01 00 01 [0m
D (63507) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (63517) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (63527) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (63537) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (63547) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (63557) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0024, 12 (bytes), errno 119[0m
D (63567) SENT: 00 24 00 00 00 06 01 03 00 01 00 01 [0m
D (63567) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (63577) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (63657) esp.emac: receive len= 60[0m
D (63777) esp.emac: receive len= 65[0m
D (63777) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (63777) port.utils: Enqueue data, length=11, TID=0x24[0m
D (63777) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (63787) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (63797) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (63807) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (63817) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (63827) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0024 received.[0m
D (63827) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (63837) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0024:0x0025, 0x3ffc0b84.[0m
D (63847) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 280045.[0m
D (63857) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (63867) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 22 22 [0m
D (63867) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (63877) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (63877) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (63887) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (63887) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (63897) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 372624[0m
D (63917) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63917) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (63917) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (63937) TEST_COMMON: CHAR #1, value is ok.[0m
D (63937) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (63957) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (63957) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 02 00 01 [0m
D (63957) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 12[0m
D (63967) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (63967) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (63977) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (63987) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (63997) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0009, 12 (bytes), errno 119[0m
D (64007) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01 [0m
D (64017) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (64017) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (64067) esp.emac: receive len= 119[0m
D (64157) esp.emac: receive len= 60[0m
D (64187) esp.emac: receive len= 65[0m
D (64187) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (64197) port.utils: Enqueue data, length=11, TID=0x9[0m
D (64197) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (64207) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (64207) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (64217) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (64227) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (64237) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0009 received.[0m
D (64237) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (64247) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc0b84.[0m
D (64257) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 247966.[0m
D (64267) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (64277) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 33 33 [0m
D (64277) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (64287) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (64287) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (64297) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (64297) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (64307) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 337813[0m
D (64327) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (64327) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (64347) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
D (64347) esp.emac: receive len= 60[0m
[0;32mI (64357) TEST_COMMON: CHAR #2, value is ok.[0m
D (64357) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (64357) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (64377) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 03 00 01 [0m
D (64377) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (64377) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64387) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (64397) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (64407) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64417) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0025, 12 (bytes), errno 119[0m
D (64427) SENT: 00 25 00 00 00 06 01 03 00 03 00 01 [0m
D (64427) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (64437) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (64617) esp.emac: receive len= 65[0m
D (64617) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (64617) port.utils: Enqueue data, length=11, TID=0x25[0m
D (64617) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (64627) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (64637) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (64647) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (64647) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (64657) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0025 received.[0m
D (64667) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (64667) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0025:0x0026, 0x3ffc0b84.[0m
D (64687) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257804.[0m
D (64697) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (64697) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 44 44 [0m
D (64707) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (64707) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (64717) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (64717) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (64727) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (64737) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 343620[0m
D (64747) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (64747) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (64767) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (64767) TEST_COMMON: CHAR #3, value is ok.[0m
D (64787) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (64787) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (64787) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 08 [0m
D (64797) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (64807) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64807) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (64817) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (64827) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64837) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0026, 15 (bytes), errno 119[0m
D (64847) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08 [0m
D (64857) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (64857) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (64907) esp.emac: receive len= 60[0m
D (65037) esp.emac: receive len= 66[0m
D (65037) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (65037) port.utils: Enqueue data, length=12, TID=0x26[0m
D (65037) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (65047) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (65057) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (65067) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (65077) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (65087) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0026 received.[0m
D (65087) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (65097) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0026:0x0027, 0x3ffc0b84.[0m
D (65107) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257527.[0m
D (65117) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (65127) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (65127) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (65137) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (65137) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (65147) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (65147) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 [0m
D (65157) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 351127[0m
D (65177) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65177) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (65177) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.[0m
D (65257) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (65257) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (65257) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (65257) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (65267) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (65277) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (65287) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (65297) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (65307) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0027, 15 (bytes), errno 119[0m
D (65317) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (65317) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (65327) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (65407) esp.emac: receive len= 60[0m
D (65567) esp.emac: receive len= 66[0m
D (65567) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (65567) port.utils: Enqueue data, length=12, TID=0x27[0m
D (65577) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (65587) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (65587) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (65597) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (65607) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (65617) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0027 received.[0m
D (65617) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (65627) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0027:0x0028, 0x3ffc0b84.[0m
D (65637) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 320261.[0m
D (65647) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (65657) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 00 00 01 [0m
D (65657) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (65667) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (65667) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (65677) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (65677) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (65687) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 413874[0m
D (65707) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65707) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (65717) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (65737) TEST_COMMON: CHAR #0, value is ok.[0m
D (65737) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (65737) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (65737) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (65747) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (65757) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (65767) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (65777) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (65777) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (65787) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0028, 15 (bytes), errno 119[0m
D (65807) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (65807) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (65817) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (65917) esp.emac: receive len= 60[0m
D (65987) esp.emac: receive len= 66[0m
D (65987) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (65997) port.utils: Enqueue data, length=12, TID=0x28[0m
D (65997) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (66007) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (66007) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (66017) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (66027) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (66037) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0028 received.[0m
D (66037) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (66047) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0028:0x0029, 0x3ffc0b84.[0m
D (66057) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256312.[0m
D (66067) esp.emac: receive len= 119[0m
D (66067) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (66077) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 01 00 01 [0m
D (66087) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (66087) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (66097) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (66097) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (66107) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (66117) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 353559[0m
D (66127) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66127) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (66147) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (66147) TEST_COMMON: CHAR #1, value is ok.[0m
D (66167) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (66167) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (66167) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (66177) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 15[0m
D (66187) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (66187) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (66197) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (66207) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (66217) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (66227) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (66237) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (66247) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (66407) esp.emac: receive len= 66[0m
D (66407) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (66407) port.utils: Enqueue data, length=12, TID=0xa[0m
D (66407) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (66417) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (66427) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (66437) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (66437) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (66447) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000a received.[0m
D (66457) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (66457) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc0b84.[0m
D (66467) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 242038.[0m
D (66477) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (66487) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 02 00 01 [0m
D (66497) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (66497) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (66507) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (66507) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (66517) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (66527) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 335651[0m
D (66537) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66537) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (66557) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (66557) TEST_COMMON: CHAR #2, value is ok.[0m
D (66577) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (66577) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (66577) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (66587) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (66597) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (66597) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (66607) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (66617) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (66627) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0029, 15 (bytes), errno 119[0m
D (66637) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (66647) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (66647) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (66657) esp.emac: receive len= 60[0m
D (66827) esp.emac: receive len= 66[0m
D (66827) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (66827) port.utils: Enqueue data, length=12, TID=0x29[0m
D (66827) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (66837) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (66847) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (66857) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (66867) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (66867) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x0029 received.[0m
D (66877) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (66887) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0029:0x002a, 0x3ffc0b84.[0m
D (66897) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 257592.[0m
D (66907) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (66907) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 03 00 01 [0m
D (66917) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (66917) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (66927) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (66937) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (66937) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (66947) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 351229[0m
D (66967) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66967) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (66967) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (66987) TEST_COMMON: CHAR #3, value is ok.[0m
D (66987) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (66987) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (67007) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 09 [0m
D (67007) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (67017) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (67017) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (67037) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (67037) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (67047) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002a, 15 (bytes), errno 119[0m
D (67057) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09 [0m
D (67067) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (67077) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (67157) esp.emac: receive len= 60[0m
D (67177) esp.emac: receive len= 60[0m
D (67257) esp.emac: receive len= 66[0m
D (67257) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (67257) port.utils: Enqueue data, length=12, TID=0x2a[0m
D (67257) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (67267) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (67277) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (67287) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (67287) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (67297) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x002a received.[0m
D (67307) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (67307) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002a:0x002b, 0x3ffc0b84.[0m
D (67317) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 261057.[0m
D (67327) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (67337) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (67347) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (67347) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (67357) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (67357) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (67367) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 [0m
D (67367) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 351107[0m
D (67387) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (67387) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (67407) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.[0m
D (67467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (67467) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (67467) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 00 00 01 [0m
D (67467) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (67477) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (67487) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (67497) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (67507) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (67517) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002b, 12 (bytes), errno 119[0m
D (67527) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01 [0m
D (67527) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (67537) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (67657) esp.emac: receive len= 60[0m
D (67767) esp.emac: receive len= 65[0m
D (67767) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (67777) port.utils: Enqueue data, length=11, TID=0x2b[0m
D (67777) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (67787) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (67787) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (67797) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (67807) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (67817) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x002b received.[0m
D (67827) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (67827) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002b:0x002c, 0x3ffc0b84.[0m
D (67837) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 313261.[0m
D (67847) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (67857) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 11 11 [0m
D (67857) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (67867) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (67867) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (67877) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (67887) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (67887) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 405812[0m
D (67907) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (67907) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (67927) TEST_COMMON: 0x3ffbf4f4, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (67927) TEST_COMMON: CHAR #0, value is ok.[0m
D (67927) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (67947) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (67947) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 01 00 01 [0m
D (67947) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (67957) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (67967) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (67977) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (67977) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (67997) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002c, 12 (bytes), errno 119[0m
D (68007) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01 [0m
D (68007) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (68017) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (68067) esp.emac: receive len= 119[0m
D (68157) esp.emac: receive len= 60[0m
D (68177) esp.emac: receive len= 65[0m
D (68177) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (68177) port.utils: Enqueue data, length=11, TID=0x2c[0m
D (68187) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (68187) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (68197) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (68207) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (68207) esp.emac: receive len= 60[0m
D (68217) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (68227) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x002c received.[0m
D (68237) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (68237) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002c:0x002d, 0x3ffc0b84.[0m
D (68247) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 246528.[0m
D (68257) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (68267) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 22 22 [0m
D (68267) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (68277) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (68287) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (68287) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (68297) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (68297) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 340056[0m
D (68317) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (68317) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (68337) TEST_COMMON: 0x3ffbf4f4, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (68337) TEST_COMMON: CHAR #1, value is ok.[0m
D (68337) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (68357) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (68357) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 02 00 01 [0m
D (68357) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc09b7, len: 12[0m
D (68367) mb_driver: 0x3ffc0ce8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (68377) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (68387) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 1[0m
D (68397) mb_port.tcp.master: 0x3ffc0ce8, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (68407) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (68407) esp.emac: receive len= 60[0m
D (68417) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01 [0m
D (68427) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (68427) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (68607) esp.emac: receive len= 65[0m
D (68607) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (68607) port.utils: Enqueue data, length=11, TID=0xb[0m
D (68607) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (68617) mb_driver: 0x3ffc0ce8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (68627) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (68637) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 1[0m
D (68637) mb_port.tcp.master: 0x3ffc0ce8, slave #1(55) [192.168.34.175], receive data ready.[0m
D (68647) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x000b received.[0m
D (68657) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (68667) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc0b84.[0m
D (68677) mb_port.tcp.master: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), processing time[us] = 255114.[0m
D (68687) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (68687) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 33 33 [0m
D (68697) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (68697) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (68707) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (68707) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (68717) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (68727) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 352110[0m
D (68737) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (68737) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (68757) TEST_COMMON: 0x3ffbf4f4, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (68757) TEST_COMMON: CHAR #2, value is ok.[0m
D (68777) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (68777) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (68777) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 03 00 03 00 01 [0m
D (68787) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 12[0m
D (68797) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (68797) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (68807) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (68817) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (68827) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002d, 12 (bytes), errno 119[0m
D (68837) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01 [0m
D (68847) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (68847) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (68907) esp.emac: receive len= 60[0m
D (69027) esp.emac: receive len= 65[0m
D (69027) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (69027) port.utils: Enqueue data, length=11, TID=0x2d[0m
D (69027) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (69037) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (69047) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (69057) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (69067) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (69067) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x002d received.[0m
D (69077) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (69087) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002d:0x002e, 0x3ffc0b84.[0m
D (69097) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 256290.[0m
D (69107) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (69107) mbm_tcp#0x3ffbf4f4:MB_RECV: 03 02 44 44 [0m
D (69117) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (69117) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (69127) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (69127) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (69137) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (69147) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 348885[0m
D (69157) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (69157) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (69177) TEST_COMMON: 0x3ffbf4f4, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (69177) TEST_COMMON: CHAR #3, value is ok.[0m
D (69197) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (69197) mb_port.event: mbm_tcp#0x3ffbf4f4, mb take resource, (300 ticks).[0m
D (69197) mbm_tcp#0x3ffbf4f4:MB_TRANSMIT: 10 00 04 00 01 02 00 0a [0m
D (69207) mb_port.tcp.master: 0x3ffc0ce8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc09b7, len: 15[0m
D (69217) mb_driver: 0x3ffc0ce8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (69217) event: running post loop:0x3ffc0ce8:16 with handler 0x40127d9c and context 0x3ffc2b04 on loop 0x3ffc10f8[0m
D (69227) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_send_data: fd: 0[0m
D (69237) mb_port.tcp.master: 0x3ffc0ce8, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (69247) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002e, 15 (bytes), errno 119[0m
D (69257) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a [0m
D (69257) esp.emac: receive len= 60[0m
D (69267) mb_port.timer: mbm_tcp#0x3ffbf4f4, respond enable timeout (3000).[0m
D (69277) mb_object.master: 0x3ffbf4f4:EV_FRAME_SENT[0m
D (69407) esp.emac: receive len= 60[0m
D (69447) esp.emac: receive len= 66[0m
D (69447) mb_driver: 0x3ffc0ce8, socket event active: 40000000000000[0m
D (69457) port.utils: Enqueue data, length=12, TID=0x2e[0m
D (69457) mb_driver: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (69467) mb_driver: 0x3ffc0ce8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (69467) event: running post loop:0x3ffc0ce8:32 with handler 0x40127fa8 and context 0x3ffc2b34 on loop 0x3ffc10f8[0m
D (69477) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_recv_data: fd: 0[0m
D (69487) mb_port.tcp.master: 0x3ffc0ce8, slave #0(54) [192.168.34.175], receive data ready.[0m
D (69497) mb_port.tcp.master: 0x3ffc0ce8, packet TID: 0x002e received.[0m
D (69507) mb_object.master: 0x3ffbf4f4:EV_FRAME_RECEIVED[0m
D (69507) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002e:0x002f, 0x3ffc0b84.[0m
D (69517) mb_port.tcp.master: 0x3ffc0ce8, node #0, socket(#54)(192.168.34.175), processing time[us] = 259745.[0m
D (69527) mb_object.master: 0x3ffbf4f4, frame data received successfully, (0).[0m
D (69537) mbm_tcp#0x3ffbf4f4:MB_RECV: 10 00 04 00 01 [0m
D (69537) mb_object.master: 0x3ffbf4f4:EV_EXECUTE[0m
D (69547) mb_object.master: 0x3ffbf4f4, set event EV_ERROR_OK[0m
D (69547) mb_object.master: 0x3ffbf4f4:EV_ERROR_PROCESS[0m
D (69557) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (69567) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a [0m
D (69567) mb_object.master: 0x3ffbf4f4, transaction processing time(us) = 353345[0m
D (69587) mb_port.event: mbm_tcp#0x3ffbf4f4, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (69587) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (69607) TEST_COMMON: 0x3ffbf4f4, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.[0m
D (69627) esp.emac: receive len= 60[0m
D (69627) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
D (69627) port.utils: Socket (#55)(192.168.34.175), fail to read modbus header. ret=0[0m
[0;31mE (69627) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), critical error=-6, errno=128.[0m
D (69637) mb_driver: 0x3ffc0ce8, socket event active: 80000000000000[0m
[0;31mE (69647) port.utils: socket(#55)(192.168.34.175) connection closed, ret=-1, errno=128.[0m
[0;31mE (69657) mb_driver: 0x3ffc0ce8, node #1, socket(#55)(192.168.34.175), connection lost.[0m
D (69667) mb_driver: 0x3ffc0ce8, fd event get: 0x40:1, |MB_EVENT_ERROR[0m
D (69667) event: running post loop:0x3ffc0ce8:64 with handler 0x40127b2c and context 0x3ffc2ad4 on loop 0x3ffc10f8[0m
D (69667) esp.emac: receive len= 60[0m
[0;32mI (69697) TEST_COMMON: Destroy master, inst: 0x3ffbf4f4.[0m
D (69697) mbc_tcp.master: mb stack is active, try to disable.[0m
D (69697) event: running post loop:0x3ffc0ce8:128 with handler 0x401280c0 and context 0x3ffc2b64 on loop 0x3ffc10f8[0m
D (69707) mb_port.tcp.master: loop:0x3ffc0ce8  mbm_on_close, fd: -1[0m
D (69717) esp.emac: receive len= 60[0m
D (69717) mb_port.timer: mbm_tcp#0x3ffbf4f4, timer stop, returns 259.[0m
D (69727) mb_driver: 0x3ffc0ce8, fd event get: 0x80:-1, |MB_EVENT_CLOSE[0m
D (69727) esp.emac: receive len= 60[0m
D (69737) mb_port.tcp.master: 0x3ffc0ce8, event handler 0x3ffc2ba4, unregister.[0m
D (69737) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x1, unregister.[0m
D (69757) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x2, unregister.[0m
D (69757) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x4, unregister.[0m
D (69777) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x8, unregister.[0m
D (69777) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x40, unregister.[0m
D (69777) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x10, unregister.[0m
D (69797) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x20, unregister.[0m
D (69797) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x80, unregister.[0m
D (69797) mb_driver: 0x3ffc0ce8, event handler 0x3ffc2ba4, event 0x100, unregister.[0m
D (69917) mb_driver: 0x3ffc0ce8, driver unregister.[0m
D (69987) mb_driver: 0x3ffc0ce8, driver check shutdown (18)...[0m
D (69987) mb_driver: 0x3ffc0ce8, driver task shutdown...[0m
D (69997) mb_driver: delete loop inst: loop:0x3ffc0ce8.[0m
D (69997) event: deleted loop 0x3ffc10f8[0m
D (69997) mb_driver: delete event loop: 0x3ffc10f8.[0m
D (69997) mb_driver: close eventfd (3).[0m
D (69997) mb_driver: 0x3ffc0ce8, close node instance #0(mb_slave_tcp_01).[0m
D (70017) port.utils: wrong socket info or disconnected socket: 0, skip.[0m
D (70017) mb_driver: 0x3ffc0ce8, close node instance #1(mb_slave_tcp_c8).[0m
D (70017) port.utils: wrong socket info or disconnected socket: 1, skip.[0m
[0;32mI (70047) TEST_COMMON: Test task 0x3ffc5444, done successfully.[0m
D (70057) TEST_COMMON: Delete task 0x3ffc5444[0m
MALLOC_CAP_8BIT usage: Free memory delta: 5312 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 5312 Leak threshold: -64 
D (70057) esp_netif_lwip: check: remote, if=0x3ffb6240 fn=0x40108008
[0m
D (70067) esp.emac: receive len= 119[0m
D (70067) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (70077) esp.emac: emac stopped[0m
D (70077) event: running post ETH_EVENT:3 with handler 0x4010b234 and context 0x3ffbf29c on loop 0x3ffb8e64[0m
D (70087) esp_eth.netif.netif_glue: eth_action_disconnected: 0x3ffbf1d8, 0x3f41729c, 3, 0x3ffb7db0, 0x3ffbf160[0m
D (70097) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbb1e8 from event_id=3[0m
D (70107) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x40108be4
[0m
D (70117) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbb1e8[0m
D (70117) esp_eth: Ethernet link is not up, can't transmit[0m
D (70127) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb270[0m
D (70127) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb1e8[0m
D (70137) esp_netif_lwip: if0x3ffbb1e8 start ip lost tmr: interval=120[0m
D (70147) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb1e8[0m
D (70147) esp_netif_lwip: if0x3ffbb1e8 start ip lost tmr: already started[0m
D (70157) esp_netif_lwip: check: local, if=0x3ffbb1e8 fn=0x40109634
[0m
D (70167) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb1e8[0m
D (70167) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (70177) event: running post ETH_EVENT:1 with handler 0x4010b2ac and context 0x3ffbf23c on loop 0x3ffb8e64[0m
D (70187) esp_eth.netif.netif_glue: eth_action_stop: 0x3ffbf1d8, 0x3f41729c, 1, 0x3ffbf2ec, 0x3ffbf160[0m
D (70197) esp_netif_handlers: esp_netif action stopped with netif0x3ffbb1e8 from event_id=1[0m
D (70207) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x40108b18
[0m
D (70217) esp_netif_lwip: call api in lwip: ret=0x5002, give sem[0m
D (70217) esp_netif_objects: esp_netif_remove_from_list netif successfully removed (total netifs: 0)[0m
D (70227) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x401086ac
[0m
D (70237) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (70237) esp_netif_lwip: check: remote, if=0x3ffbb1e8 fn=0x40109634
[0m
D (70247) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb1e8[0m
D (70257) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (70257) event: deleted loop 0x3ffb8e64[0m
[0;32mI (70267) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).[0m
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 15686ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
