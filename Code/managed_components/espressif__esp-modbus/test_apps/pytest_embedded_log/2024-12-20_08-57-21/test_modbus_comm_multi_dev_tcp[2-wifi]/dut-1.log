Serial port /dev/ttyUSB2
Connecting..................
/dev/ttyUSB2 failed to connect: Failed to connect to ESP32: No serial data received.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html
Serial port /dev/ttyUSB1
Connecting....
Connecting....
esptool.py v4.8.1
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x000f7fff...
SHA digest in image updated
Compressed 26112 bytes to 16482...
Writing at 0x00001000... (50 %)Writing at 0x00007576... (100 %)Wrote 26112 bytes (16482 compressed) at 0x00001000 in 0.8 seconds (effective 277.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 308.0 kbit/s)...
Hash of data verified.
Compressed 950128 bytes to 587108...
Writing at 0x00010000... (2 %)Writing at 0x0001dbcc... (5 %)Writing at 0x00029bb7... (8 %)Writing at 0x00033bb7... (11 %)Writing at 0x0003c904... (13 %)Writing at 0x00042995... (16 %)Writing at 0x000481f9... (19 %)Writing at 0x0004e6fd... (22 %)Writing at 0x000540ee... (25 %)Writing at 0x00059bc4... (27 %)Writing at 0x0005f7dd... (30 %)Writing at 0x0006525a... (33 %)Writing at 0x0006ae6c... (36 %)Writing at 0x00070afd... (38 %)Writing at 0x0007674d... (41 %)Writing at 0x0007c7a3... (44 %)Writing at 0x000826a0... (47 %)Writing at 0x00088a8f... (50 %)Writing at 0x0008dd67... (52 %)Writing at 0x00092fff... (55 %)Writing at 0x00098782... (58 %)Writing at 0x0009dfe4... (61 %)Writing at 0x000a3338... (63 %)Writing at 0x000a8882... (66 %)Writing at 0x000ae4dc... (69 %)Writing at 0x000b3d8f... (72 %)Writing at 0x000b9a61... (75 %)Writing at 0x000bf465... (77 %)Writing at 0x000c4d35... (80 %)Writing at 0x000cb8a1... (83 %)Writing at 0x000d4b69... (86 %)Writing at 0x000dbd28... (88 %)Writing at 0x000e1913... (91 %)Writing at 0x000e7b24... (94 %)Writing at 0x000edd53... (97 %)Writing at 0x000f348e... (100 %)Wrote 950128 bytes (587108 compressed) at 0x00010000 in 9.9 seconds (effective 765.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6328
load:0x40078000,len:15828
load:0x40080400,len:3860
entry 0x40080638
I (27) boot: ESP-IDF v5.5-dev-1050-gb5ac4fbdf9 2nd stage bootloader
I (27) boot: compile time Dec 20 2024 08:27:30
I (27) boot: Multicore bootloader
I (30) boot: chip revision: v3.0
I (33) boot.esp32: SPI Speed      : 40MHz
I (37) boot.esp32: SPI Mode       : DIO
I (40) boot.esp32: SPI Flash Size : 4MB
I (44) boot: Enabling RNG early entropy source...
I (49) boot: Partition Table:
I (51) boot: ## Label            Usage          Type ST Offset   Length
I (57) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (64) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (71) boot:  2 factory          factory app      00 00 00010000 00177000
I (77) boot: End of partition table
I (80) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=24f4ch (151372) map
I (140) esp_image: segment 1: paddr=00034f74 vaddr=3ff80000 size=0001ch (    28) load
I (140) esp_image: segment 2: paddr=00034f98 vaddr=3ffb0000 size=041d8h ( 16856) load
I (150) esp_image: segment 3: paddr=00039178 vaddr=40080000 size=06ea0h ( 28320) load
I (162) esp_image: segment 4: paddr=00040020 vaddr=400d0020 size=a675ch (681820) map
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6328
load:0x40078000,len:15828
load:0x40080400,len:3860
entry 0x40080638
I (27) boot: ESP-IDF v5.5-dev-1050-gb5ac4fbdf9 2nd stage bootloader
I (27) boot: compile time Dec 20 2024 08:27:30
I (27) boot: Multicore bootloader
I (30) boot: chip revision: v3.0
I (33) boot.esp32: SPI Speed      : 40MHz
I (37) boot.esp32: SPI Mode       : DIO
I (40) boot.esp32: SPI Flash Size : 4MB
I (44) boot: Enabling RNG early entropy source...
I (49) boot: Partition Table:
I (51) boot: ## Label            Usage          Type ST Offset   Length
I (57) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (64) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (71) boot:  2 factory          factory app      00 00 00010000 00177000
I (77) boot: End of partition table
I (80) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=24f4ch (151372) map
I (140) esp_image: segment 1: paddr=00034f74 vaddr=3ff80000 size=0001ch (    28) load
I (140) esp_image: segment 2: paddr=00034f98 vaddr=3ffb0000 size=041d8h ( 16856) load
I (150) esp_image: segment 3: paddr=00039178 vaddr=40080000 size=06ea0h ( 28320) load
I (162) esp_image: segment 4: paddr=00040020 vaddr=400d0020 size=a675ch (681820) map
I (395) esp_image: segment 5: paddr=000e6784 vaddr=40086ea0 size=117bch ( 71612) load
I (435) boot: Loaded app from partition at offset 0x10000
I (435) boot: Disabling RNG early entropy source...
I (446) cpu_start: Multicore app
D (446) cpu_start: Pro cpu up
D (446) cpu_start: Starting app cpu, entry point is 0x40081314
D (0) cpu_start: App cpu up
D (455) clk: RTC_SLOW_CLK calibration value: 3131533
D (466) cpu_start: calling init function: 0x400d2e6c on core: 0
D (466) cpu_start: calling init function: 0x400d3394 on core: 0
I (468) cpu_start: Pro cpu start user code
I (472) cpu_start: cpu freq: 160000000 Hz
D (475) cpu_start: calling init function: 0x400d2dac on core: 0
I (481) app_init: Application information:
I (485) app_init: Project name:     test_modbus_comm_multi_dev
I (490) app_init: App version:      v2.0.0-beta-11-g3117942
I (496) app_init: Compile time:     Dec 20 2024 08:27:18
I (501) app_init: ELF file SHA256:  6d8a90545...
I (505) app_init: ESP-IDF:          v5.5-dev-1050-gb5ac4fbdf9
D (511) cpu_start: calling init function: 0x400d2e80 on core: 0
I (516) efuse_init: Min chip rev:     v0.0
I (520) efuse_init: Max chip rev:     v3.99 
I (524) efuse_init: Chip rev:         v3.0
D (528) cpu_start: calling init function: 0x400d4e94 on core: 0
D (534) memory_layout: Checking 9 reserved memory ranges:
D (539) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000
D (545) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0
D (551) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb9268
D (557) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440
D (563) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350
D (569) memory_layout: Reserved memory range 0x40070000 - 0x40078000
D (575) memory_layout: Reserved memory range 0x40078000 - 0x40080000
D (581) memory_layout: Reserved memory range 0x40080000 - 0x4009865c
D (587) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000
D (593) memory_layout: Building list of available memory regions:
D (599) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000
D (605) memory_layout: Available memory region 0x3ffb9268 - 0x3ffc0000
D (612) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000
D (618) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000
D (624) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000
D (630) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000
D (637) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000
D (643) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000
D (649) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000
D (655) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000
D (662) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000
D (668) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000
D (674) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000
D (680) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000
D (687) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000
D (693) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000
D (699) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000
D (705) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000
D (712) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20
D (718) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000
D (724) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000
D (730) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000
D (737) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000
D (743) memory_layout: Available memory region 0x3fffc000 - 0x40000000
D (749) memory_layout: Available memory region 0x4009865c - 0x4009a000
D (755) memory_layout: Available memory region 0x4009a000 - 0x4009c000
D (762) memory_layout: Available memory region 0x4009c000 - 0x4009e000
D (768) memory_layout: Available memory region 0x4009e000 - 0x400a0000
I (774) heap_init: Initializing. RAM available for dynamic allocation:
D (781) heap_init: New heap initialised at 0x3ffae6e0
I (785) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM
D (790) heap_init: New heap initialised at 0x3ffb9268
I (795) heap_init: At 3FFB9268 len 00026D98 (155 KiB): DRAM
I (800) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (806) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
D (811) heap_init: New heap initialised at 0x4009865c
I (816) heap_init: At 4009865C len 000079A4 (30 KiB): IRAM
D (821) cpu_start: calling init function: 0x400d621c on core: 0
D (827) cpu_start: calling init function: 0x400d5c24 on core: 0
D (832) cpu_start: calling init function: 0x400d33d8 on core: 0
D (838) intr_alloc: Connected src 46 to int 1 (cpu 0)
D (843) cpu_start: calling init function: 0x400d33e4 on core: 0
D (849) cpu_start: calling init function: 0x401710bc on core: 0
D (854) cpu_start: calling init function: 0x400d7140 on core: 0
D (860) cpu_start: calling init function: 0x400d6e54 on core: 0
D (865) cpu_start: calling init function: 0x400d5c30 on core: 0
D (871) cpu_start: calling init function: 0x400d33f0 on core: 0
D (877) spi_flash: trying chip: issi
D (880) spi_flash: trying chip: gd
D (883) spi_flash: trying chip: mxic
D (886) spi_flash: trying chip: winbond
D (890) spi_flash: trying chip: generic
I (894) spi_flash: detected chip: generic
I (897) spi_flash: flash io: dio
D (900) cpu_start: calling init function: 0x400d2f0c on core: 0
D (906) cpu_start: calling init function: 0x4014e9ec
D (911) cpu_start: calling init function: 0x401099b8
D (915) cpu_start: calling init function: 0x400eefc8
D (920) cpu_start: calling init function: 0x400d7558
D (925) cpu_start: calling init function: 0x40089a9c
D (929) cpu_start: calling init function: 0x400d4420
D (934) cpu_start: calling init function: 0x400d39bc
D (939) cpu_start: calling init function: 0x400ebf8c on core: 0
D (945) intr_alloc: Connected src 17 to int 2 (cpu 0)
D (949) cpu_start: calling init function: 0x40168b4c on core: 0
D (955) cpu_start: calling init function: 0x400d3418 on core: 0
D (961) intr_alloc: Connected src 24 to int 3 (cpu 0)
D (965) app_start: Starting scheduler on CPU0
I (969)D (969) intr_alloc: Connected src 25 to int 1 (cpu 1)
D (969) app_start: Starting scheduler on CPU1
 main_task: Started on CPU0
D (979) heap_init: New heap initialised at 0x3ffe0440
D (979) heap_init: New heap initialised at 0x3ffe4350
D (989) intr_alloc: Connected src 16 to int 5 (cpu 0)
I (989) main_task: Calling app_main()


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Running stage 2...
Modbus RS485 multi-device test cases/nD (1129) esp_netif_lwip: LwIP stack has been initialized
D (1129) esp_netif_lwip: esp-netif has been successfully initialized
D (1129) event: running task for loop 0x3ffbdba0
D (1129) event: created task for loop 0x3ffbdba0
D (1139) event: created event loop 0x3ffbdba0
D (1139) esp_netif_lwip: check: remote, if=0x3ffbb120 fn=0x40106cf8
D (1149) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1149) esp_netif_lwip: check: remote, if=0x3ffbb120 fn=0x40106cf8
D (1159) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1169) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0
D (1169) esp_netif_lwip: check: remote, if=0x3ffbb120 fn=0x40106cf8
D (1179) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1179) esp_netif_lwip: check: remote, if=0x3ffbb120 fn=0x40106cf8
D (1189) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1189) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0
D (1199) esp_netif_lwip: check: remote, if=0x3ffbb120 fn=0x40106cf8
D (1199) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1209) esp_netif_lwip: check: remote, if=0x3ffbb120 fn=0x40106cf8
D (1219) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1219) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0
I (1229) example_connect: Start example_connect.
D (1229) nvs: nvs_open_from_partition misc 1
I (1249) wifi:wifi driver task: 3ffc2260, prio:23, stack:6656, core=0
D (1249) efuse: BLK0 REG2 [8-15], len=8 bits
D (1249) efuse: BLK0 REG2 [0-7], len=8 bits
D (1249) efuse: BLK0 REG1 [24-31], len=8 bits
D (1249) efuse: BLK0 REG1 [16-23], len=8 bits
D (1259) efuse: BLK0 REG1 [8-15], len=8 bits
D (1259) efuse: BLK0 REG1 [0-7], len=8 bits
D (1269) efuse: BLK0 REG2 [16-23], len=8 bits
D (1269) nvs: nvs_open_from_partition nvs.net80211 1
D (1269) nvs: nvs_get opmode 1
D (1279) nvs: nvs_get_str_or_blob sta.ssid
D (1279) nvs: nvs_get sta.authmode 1
D (1279) nvs: nvs_get_str_or_blob sta.pswd
D (1289) nvs: nvs_get_str_or_blob sta.pmk
D (1289) nvs: nvs_get sta.chan 1
D (1289) nvs: nvs_get auto.conn 1
D (1299) nvs: nvs_get bssid.set 1
D (1299) nvs: nvs_get_str_or_blob sta.bssid
D (1309) nvs: nvs_get sta.lis_intval 2
D (1309) nvs: nvs_get sta.phym 1
D (1309) nvs: nvs_get sta.phybw 1
D (1309) nvs: nvs_get_str_or_blob sta.apsw
D (1319) nvs: nvs_get_str_or_blob sta.apinfo
D (1319) nvs: nvs_get sta.scan_method 1
D (1329) nvs: nvs_get sta.sort_method 1
D (1329) nvs: nvs_get sta.minrssi 1
D (1329) nvs: nvs_get sta.minauth 1
D (1339) nvs: nvs_get sta.pmf_e 1
D (1339) nvs: nvs_get sta.pmf_r 1
D (1339) nvs: nvs_get sta.btm_e 1
D (1339) nvs: nvs_get sta.rrm_e 1
D (1349) nvs: nvs_get sta.mbo_e 1
D (1349) nvs: nvs_get_str_or_blob ap.ssid
D (1359) nvs: nvs_get_str_or_blob ap.passwd
D (1359) nvs: nvs_get_str_or_blob ap.pmk
D (1359) nvs: nvs_get ap.chan 1
D (1369) nvs: nvs_get ap.authmode 1
D (1369) nvs: nvs_get ap.hidden 1
D (1369) nvs: nvs_get ap.max.conn 1
D (1369) nvs: nvs_get bcn.interval 2
D (1379) nvs: nvs_get ap.phym 1
D (1379) nvs: nvs_get ap.phybw 1
D (1379) nvs: nvs_get ap.sndchan 1
D (1389) nvs: nvs_get ap.pmf_e 1
D (1389) nvs: nvs_get ap.pmf_r 1
D (1389) nvs: nvs_get ap.p_cipher 1
D (1399) nvs: nvs_get lorate 1
D (1399) nvs: nvs_get_str_or_blob country
D (1399) nvs: nvs_get ap.ftm_r 1
D (1409) nvs: nvs_get sta.ft 1
D (1409) nvs: nvs_get sta.owe 1
D (1409) nvs: nvs_get sta.trans_d 1
D (1409) nvs: nvs_get sta.sae_h2e 1
D (1419) nvs: nvs_get sta.sae_pk_mode 1
D (1419) nvs: nvs_get sta.bss_retry 1
D (1419) nvs: nvs_get_str_or_blob sta.owe_data
D (1429) nvs: nvs_get sta.he_dcm 1
D (1429) nvs: nvs_get sta.he_dcm_c_tx 1
D (1439) nvs: nvs_get sta.he_dcm_c_rx 1
D (1439) nvs: nvs_get sta.he_mcs9_d 1
D (1439) nvs: nvs_get sta.he_su_b_d 1
D (1449) nvs: nvs_get sta.he_su_b_f_d 1
D (1449) nvs: nvs_get sta.he_mu_b_f_d 1
D (1449) nvs: nvs_get sta.he_cqi_f_d 1
D (1459) nvs: nvs_get_str_or_blob sta.sae_h2e_id
D (1459) nvs: nvs_get ap.sae_h2e 1
D (1459) nvs: nvs_get_str_or_blob ap.pmk_info
D (1469) nvs: nvs_get nan.phym 1
D (1469) nvs: nvs_get sta.pwr_reset 1
D (1469) nvs: nvs_get band_mode 1
D (1479) nvs: nvs_get sta.phym5g 1
D (1479) nvs: nvs_get ap.phym5g 1
D (1479) nvs: nvs_get sta.phybw5g 1
D (1489) nvs: nvs_get ap.phybw5g 1
D (1489) nvs: nvs_get ap.sndchan5g 1
D (1489) nvs: nvs_get ap.chan5g 1
D (1499) nvs: nvs_get ap.chanisset 1
D (1499) nvs: nvs_get ap.chan5gisset 1
D (1499) nvs: nvs_get sta.rssi_5g_adj 1
D (1509) nvs: nvs_get ap.csa_count 1
D (1509) nvs: nvs_get ap.dtim_period 1
D (1509) nvs: nvs_set ap.sndchan 1 1
I (1519) wifi:wifi firmware version: 34d97ea27
I (1519) wifi:wifi certification version: v7.0
I (1519) wifi:config NVS flash: enabled
I (1529) wifi:config nano formatting: disabled
I (1529) wifi:Init data frame dynamic rx buffer num: 32
I (1539) wifi:Init static rx mgmt buffer num: 5
I (1539) wifi:Init management short buffer num: 32
I (1549) wifi:Init dynamic tx buffer num: 32
I (1549) wifi:Init static rx buffer size: 1600
I (1549) wifi:Init static rx buffer num: 10
I (1559) wifi:Init dynamic rx buffer num: 32
D (1559) wifi:Reset scan defaults in ms : min,max,passive,chan_dwell :(0,120,360,30)
I (1569) wifi_init: rx ba win: 6
I (1569) wifi_init: accept mbox: 6
I (1579) wifi_init: tcpip mbox: 32
I (1579) wifi_init: udp mbox: 6
I (1579) wifi_init: tcp mbox: 6
I (1579) wifi_init: tcp tx win: 5760
I (1589) wifi_init: tcp rx win: 5760
I (1589) wifi_init: tcp mss: 1440
I (1589) wifi_init: WiFi IRAM OP enabled
I (1599) wifi_init: WiFi RX IRAM OP enabled
D (1599) esp_netif_lwip: check: remote, if=0x3ffbaee0 fn=0x40107534
D (1609) esp_netif_objects: esp_netif_add_to_list_unsafe netif added successfully (total netifs: 1)
D (1619) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (1619) phy_init: phy_version 4840,02e0d70,Sep  2 2024,19:39:07
D (1629) phy_init: loading PHY init data from application binary
D (1629) nvs: nvs_open_from_partition phy 0
D (1639) nvs: nvs_get cal_version 4
D (1639) nvs: nvs_get_str_or_blob cal_mac
D (1639) efuse: BLK0 REG2 [8-15], len=8 bits
D (1649) efuse: BLK0 REG2 [0-7], len=8 bits
D (1649) efuse: BLK0 REG1 [24-31], len=8 bits
D (1659) efuse: BLK0 REG1 [16-23], len=8 bits
D (1659) efuse: BLK0 REG1 [8-15], len=8 bits
D (1659) efuse: BLK0 REG1 [0-7], len=8 bits
D (1669) efuse: BLK0 REG2 [16-23], len=8 bits
D (1669) nvs: nvs_get_str_or_blob cal_data
D (1679) nvs: nvs_close 3
D (1679) efuse: BLK0 REG2 [8-15], len=8 bits
D (1679) efuse: BLK0 REG2 [0-7], len=8 bits
D (1689) efuse: BLK0 REG1 [24-31], len=8 bits
D (1689) efuse: BLK0 REG1 [16-23], len=8 bits
D (1689) efuse: BLK0 REG1 [8-15], len=8 bits
D (1699) efuse: BLK0 REG1 [0-7], len=8 bits
D (1699) efuse: BLK0 REG2 [16-23], len=8 bits
D (1769) wifi:filter: set rx policy=0
I (1769) wifi:mode : sta (10:97:bd:d5:51:f0)
I (1769) wifi:enable tsf
D (1769) wifi:filter: set rx policy=1
D (1769) wifi:connect status 0 -> 0
D (1779) event: running post WIFI_EVENT:43 with handler 0x400e6f78 and context 0x3ffbec84 on loop 0x3ffbdba0
D (1779) event: running post WIFI_EVENT:2 with handler 0x400e6f78 and context 0x3ffbec84 on loop 0x3ffbdba0
D (1789) event: running post WIFI_EVENT:2 with handler 0x40109c58 and context 0x3ffc8710 on loop 0x3ffbdba0
D (1799) wifi_init_default: wifi_start esp-netif:0x3ffc8524 event-id2
D (1809) wifi_init_default: WIFI mac address: 10 97 bd d5 51 f0
D (1819) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x40106d0c
D (1819) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1829) esp_netif_handlers: esp_netif action has started with netif0x3ffc8524 from event_id=2
D (1839) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x40107758
D (1839) esp_netif_lwip: esp_netif_start_api 0x3ffc8524
D (1849) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffc8524
D (1849) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (1859) example_connect: Connecting to EspressifTest...
D (1859) wifi:clear blacklist
W (1869) wifi:Password length matches WPA2 standards, authmode threshold changes from OPEN to WPA2
D (1879) wifi:Start wifi connect
D (1879) wifi:connect status 0 -> 0
D (1879) wifi:connect chan=0
D (1879) wifi:first chan=1
D (1889) wifi:connect status 0 -> 1
D (1889) wifi:filter: set rx policy=3
D (1889) wifi:clear scan ap list
D (1889) wifi:start scan: type=0x50f, priority=2, cb=0x40121d74, arg=0x0, ss_state=0x1, time=126795, index=0
D (1899) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
I (1909) example_connect: Waiting for IP(s)
D (2029) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2029) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (2149) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2149) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (2269) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2279) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (2399) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2399) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (2519) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2519) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (2639) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2639) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (2759) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2759) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (2879) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (2879) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (3009) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (3009) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (3129) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x3
D (3129) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (3129) wifi:rsn valid: gcipher=3 ucipher=3 akm=5 mac=fe:9f:c2:31:10:0a
D (3139) wifi:profile match: ss_state=0x7
D (3209) wifi:rsn valid: gcipher=3 ucipher=3 akm=5 mac=fe:9f:c2:31:10:0a
D (3209) wifi:profile match: ss_state=0x7
D (3249) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x7
D (3249) wifi:perform scan: ss_state=0xd, chan<12,0>, dur<360,360>
D (3609) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x7
D (3609) wifi:perform scan: ss_state=0xd, chan<13,0>, dur<360,360>
D (3969) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x7
D (3969) wifi:perform scan: ss_state=0xd, chan<14,0>, dur<360,360>
D (4329) wifi:scan end: arg=0x3ffb648c, status=0, ss_state=0x7
D (4329) wifi:filter: set rx policy=4
D (4329) wifi:first chan=1
D (4329) wifi:handoff_cb: status=0
D (4339) wifi:ap found, mac=fe:9f:c2:31:10:0a
D (4589) wifi:going for connection with bssid=fe:9f:c2:31:10:0a
D (4589) wifi:new_bss=0x3ffb7290, cur_bss=0x0, new_chan=<11,0>, cur_chan=1
D (4589) wifi:filter: set rx policy=5
I (4589) wifi:new:<11,0>, old:<1,0>, ap:<255,255>, sta:<11,0>, prof:1, snd_ch_cfg:0x0
D (4599) wifi:connect_op: status=0, auth=5, cipher=3 
D (4609) wifi:auth mode is not none
D (4609) wifi:connect_bss: auth=1, reconnect=0
I (4609) wifi:state: init -> auth (0xb0)
D (4619) wifi:start 1s AUTH timer
D (4619) wifi:clear scan ap list
D (4619) event: running post WIFI_EVENT:43 with handler 0x400e6f78 and context 0x3ffbec84 on loop 0x3ffbdba0
D (4629) wifi:recv auth: seq=2, status=0, algo=0
I (4639) wifi:state: auth -> assoc (0x0)
D (4639) wifi:restart connect 1s timer for assoc
D (4649) wifi:recv assoc: type=0x10
D (4649) wifi:filter: set rx policy=6
I (4649) wifi:state: assoc -> run (0x10)
D (4659) wifi:start 10s connect timer for 4 way handshake
I (4689) wifi:connected with EspressifTest, aid = 2, channel 11, BW20, bssid = fe:9f:c2:31:10:0a
I (4689) wifi:security: WPA2-PSK, phy: bgn, rssi: -35
D (4689) wifi:remove all except fe:9f:c2:31:10:0a from rc list
D (4699) wifi:clear blacklist
D (4699) wifi:filter: set rx policy=7
I (4699) wifi:pm start, type: 1

I (4709) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us
D (4719) wifi:Send sta connected event
D (4719) wifi:connect status 1 -> 5
D (4719) wifi:obss scan is disabled
D (4719) wifi:start obss scan: obss scan is stopped
D (4729) event: running post WIFI_EVENT:4 with handler 0x400e6f78 and context 0x3ffbec84 on loop 0x3ffbdba0
D (4739) esp_netif_lwip: check: remote, if=0x3ffbe7e0 fn=0x40106cf8
D (4739) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (4749) wifi:AP's beacon interval = 102400 us, DTIM period = 1
D (4759) event: running post WIFI_EVENT:4 with handler 0x40109c88 and context 0x3ffc8770 on loop 0x3ffbdba0
D (4769) esp_netif_handlers: esp_netif action connected with netif0x3ffc8524 from event_id=4
D (4769) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x40107978
D (4779) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffc8524
D (4779) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (4789) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x401071a0
D (4799) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffc8524
D (4799) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc8524
D (4809) esp_netif_lwip: if0x3ffc8524 start ip lost tmr: interval=120
D (4819) esp_netif_lwip: starting dhcp client
D (4819) wifi:D (4819) esp_netif_lwip: call api in lwip: ret=0x0, give sem
eb is dhcp or dns sport = 68, dport = 67
D (4829) event: running post WIFI_EVENT:4 with handler 0x40168f14 and context 0x3ffc90a0 on loop 0x3ffbdba0
D (5319) wifi:eb is dhcp or dns sport = 68, dport = 67
D (5879) wifi:eb is dhcp or dns sport = 68, dport = 67
I (5879) wifi:<ba-add>idx:0 (ifx:0, fe:9f:c2:31:10:0a), tid:0, ssn:1, winSize:64
D (6879) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffc85a0
D (6879) esp_netif_lwip: check: local, if=0x3ffc8524 fn=0x40107df4
D (6879) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc8524
D (6879) esp_netif_lwip: if0x3ffc8524 ip changed=1
D (6889) event: running post IP_EVENT:0 with handler 0x400e6f78 and context 0x3ffbecb8 on loop 0x3ffbdba0
D (6899) event: running post IP_EVENT:0 with handler 0x40109ab4 and context 0x3ffc8830 on loop 0x3ffbdba0
D (6909) wifi_init_default: Got IP wifi default handler entered
D (6909) esp_netif_handlers: esp_netif action got_ip with netif0x3ffc8524 from event_id=0
I (6919) esp_netif_handlers: example_netif_sta ip: 192.168.32.52, mask: 255.255.254.0, gw: 192.168.32.3
D (6929) event: running post IP_EVENT:0 with handler 0x400e9758 and context 0x3ffc9080 on loop 0x3ffbdba0
I (6939) example_connect: Got IPv4 event: Interface "example_netif_sta" address: 192.168.32.52
D (6949) esp_netif_lwip: check: remote, if=0x400e9660 fn=0x40169b6c
I (6949) example_common: Connected to example_netif_sta
D (6959) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
I (6959) example_common: - IPv4 address: 192.168.32.52,
D (6969) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (6969) esp_netif_lwip: check: local, if=0x3ffbd810 fn=0x40106cf8
D (6979) esp_netif_lwip: check: remote, if=0x3ffbb190 fn=0x40106b74
D (6989) esp_netif_lwip: call api in lwip: ret=0x0, give sem
I (6989) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.

D (7799) event: created event loop 0x3ffcb238
D (7799) mb_driver: Start of driver task.
D (7819) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8009) mb_driver: 0x3ffcaec8, driver check shutdown (8)...
D (8009) mb_driver: 0x3ffcaec8, driver task is suspended...
D (8009) mb_driver: 0x3ffcaec8, stop tcp driver task.
D (8009) mb_driver: 0x3ffcaec8, event 0x1, register.
D (8019) mb_driver: 0x3ffcaec8, event 0x2, register.
D (8019) mb_driver: 0x3ffcaec8, event 0x4, register.
D (8019) mb_driver: 0x3ffcaec8, event 0x8, register.
D (8029) mb_driver: 0x3ffcaec8, event 0x40, register.
D (8029) mb_driver: 0x3ffcaec8, event 0x10, register.
D (8039) mb_driver: 0x3ffcaec8, event 0x20, register.
D (8039) mb_driver: 0x3ffcaec8, event 0x80, register.
D (8049) mb_driver: 0x3ffcaec8, event 0x100, register.
D (8049) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4
D (8059) mb_driver: 0x3ffcaec8, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502
D (8069) mb_port.tcp.master: 0x3ffcaec8, open slave: 0, mb_slave_tcp_01:1502
D (8079) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4
D (8089) mb_driver: 0x3ffcaec8, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502
D (8099) mb_port.tcp.master: 0x3ffcaec8, open slave: 1, mb_slave_tcp_c8:502
I (8099) port.utils: hostname set to: [mb_master_tcp_d551f0]
D (8109) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
I (8119) port.utils: mdns delegate hostname set to: [mb_master_tcp_00]
I (8119) port.utils: IP: 192.168.32.52
I (8119) port.utils: GW: 192.168.32.3
I (8129) port.utils: NETMASK: 255.255.254.0
D (8129) mb_port.tcp.master: created object @0x3ffcacfc
D (8139) mb_port.timer: initialized mb_port.timer object @0x3ffbcab8
D (8139) mb_port.event: initialized object @0x3ffcd6a4
D (8149) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffcaa40
D (8149) mb_object.master: created object mbm_tcp#0x3ffc957c
I (8159) mbc_tcp.master: mb found config for cid #0, uid=1.
I (8169) mbc_tcp.master: mb found config for cid #1, uid=1.
I (8169) mbc_tcp.master: mb found config for cid #2, uid=200.
I (8179) mbc_tcp.master: mb found config for cid #3, uid=1.
I (8179) mbc_tcp.master: mb found config for cid #4, uid=1.
I (8189) TEST_COMMON: 0x3ffc957c, modbus master stack is initialized
D (8189) mb_driver: 0x3ffcaec8, resume tcp driver task.
D (8199) mb_driver: 0x3ffcaec8, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT
D (8209) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (8219) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (8219) event: running post loop:0x3ffcaec8:2 with handler 0x4016e2ec and context 0x3ffccb94 on loop 0x3ffcb238
D (8229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_open: fd: 0
D (8129) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8239) event: running post loop:0x3ffcaec8:2 with handler 0x4016e2ec and context 0x3ffccb94 on loop 0x3ffcb238
D (8249) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_open: fd: 1
D (8259) mb_port.timer: mbm_tcp#0x3ffc957c, start timer (1000000).
D (8259) mb_driver: 0x3ffcaec8, fd event get: 0x04:-1, |MB_EVENT_RESOLVE
D (8269) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (8279) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: -1
D (8289) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (8299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: 0
D (8299) wifi:eb is dhcp or dns sport = 18621, dport = 53
D (8319) port.utils: Incorrect host IP: mb_slave_tcp_01
D (8319) port.utils: Query A: mb_slave_tcp_01.local
D (8319) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8329) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8429) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8439) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8629) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (8929) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (9229) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (9259) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (9259) mb_port.timer: timer mode: (0) triggered
D (9459) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (9759) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (9759) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.32.50
I (9769) mb_port.tcp.master: 0x3ffcaec8, slave: 0, resolved with IP:192.168.32.50.
D (9769) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (9779) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (9789) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: 1
D (9799) wifi:eb is dhcp or dns sport = 34822, dport = 53
D (9799) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (9809) port.utils: Incorrect host IP: mb_slave_tcp_c8
D (9809) port.utils: Query A: mb_slave_tcp_c8.local
D (10329) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (11429) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (13239) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (13239) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
E (13929) port.utils: Host: mb_slave_tcp_c8, was not resolved!
D (13929) mb_driver: 0x3ffcaec8, fd event get: 0x04:1, |MB_EVENT_RESOLVE
D (13929) event: running post loop:0x3ffcaec8:8 with handler 0x4016ea10 and context 0x3ffccbf4 on loop 0x3ffcb238
D (13939) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_connect: fd: 0
D (13939) mb_port.tcp.master: 0x3ffcaec8, connection phase, slave: #0(-1) [192.168.32.50].
D (13999) mb_port.tcp.master: Opened/connected: 2, 0.
D (13999) mb_driver: 0x3ffcaec8, fd event get: 0x08:0, |MB_EVENT_CONNECT
D (13999) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (14009) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: 1
D (14009) wifi:eb is dhcp or dns sport = 30649, dport = 53
D (14019) port.utils: Incorrect host IP: mb_slave_tcp_c8
D (14019) port.utils: Query A: mb_slave_tcp_c8.local
D (14179) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (14189) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (16919) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (17229) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
E (18229) port.utils: Host: mb_slave_tcp_c8, was not resolved!
D (18229) mb_driver: 0x3ffcaec8, fd event get: 0x04:1, |MB_EVENT_RESOLVE
D (18229) event: running post loop:0x3ffcaec8:8 with handler 0x4016ea10 and context 0x3ffccbf4 on loop 0x3ffcb238
D (18239) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_connect: fd: 0
D (18239) mb_port.tcp.master: 0x3ffcaec8, connection phase, slave: #0(54) [192.168.32.50].
D (18299) mb_port.tcp.master: Opened/connected: 2, 0.
D (18299) mb_driver: 0x3ffcaec8, fd event get: 0x08:0, |MB_EVENT_CONNECT
D (18299) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (18309) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: 1
D (18309) wifi:eb is dhcp or dns sport = 4579, dport = 53
D (18319) port.utils: Incorrect host IP: mb_slave_tcp_c8
D (18319) port.utils: Query A: mb_slave_tcp_c8.local
D (18399) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (20599) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (20819) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (20819) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (20819) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (21019) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (21639) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
E (22529) port.utils: Host: mb_slave_tcp_c8, was not resolved!
D (22529) mb_driver: 0x3ffcaec8, fd event get: 0x04:1, |MB_EVENT_RESOLVE
D (22529) event: running post loop:0x3ffcaec8:8 with handler 0x4016ea10 and context 0x3ffccbf4 on loop 0x3ffcb238
D (22539) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_connect: fd: 0
D (22539) mb_port.tcp.master: 0x3ffcaec8, connection phase, slave: #0(54) [192.168.32.50].
D (22599) mb_port.tcp.master: Opened/connected: 2, 0.
D (22599) mb_driver: 0x3ffcaec8, fd event get: 0x08:0, |MB_EVENT_CONNECT
D (22599) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (22609) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: 1
D (22609) wifi:eb is dhcp or dns sport = 15947, dport = 53
D (22619) port.utils: Incorrect host IP: mb_slave_tcp_c8
D (22619) port.utils: Query A: mb_slave_tcp_c8.local
D (22859) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (23679) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (23679) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (24599) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (24699) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (24999) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (25219) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (25519) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (25519) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (25529) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (25619) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (25829) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (26649) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
E (26829) port.utils: Host: mb_slave_tcp_c8, was not resolved!
D (26829) mb_driver: 0x3ffcaec8, fd event get: 0x04:1, |MB_EVENT_RESOLVE
D (26829) event: running post loop:0x3ffcaec8:8 with handler 0x4016ea10 and context 0x3ffccbf4 on loop 0x3ffcb238
D (26839) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_connect: fd: 0
D (26839) mb_port.tcp.master: 0x3ffcaec8, connection phase, slave: #0(54) [192.168.32.50].
D (26899) mb_port.tcp.master: Opened/connected: 2, 0.
D (26899) mb_driver: 0x3ffcaec8, fd event get: 0x08:0, |MB_EVENT_CONNECT
D (26899) event: running post loop:0x3ffcaec8:4 with handler 0x4016e80c and context 0x3ffccbc4 on loop 0x3ffcb238
D (26909) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_resolve: fd: 1
D (26909) wifi:eb is dhcp or dns sport = 32939, dport = 53
D (26919) port.utils: Incorrect host IP: mb_slave_tcp_c8
D (26919) port.utils: Query A: mb_slave_tcp_c8.local
D (26949) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (26989) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (27159) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (27169) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.32.50
I (27169) mb_port.tcp.master: 0x3ffcaec8, slave: 1, resolved with IP:192.168.32.50.
D (27169) mb_driver: 0x3ffcaec8, fd event get: 0x08:1, |MB_EVENT_CONNECT
D (27179) event: running post loop:0x3ffcaec8:8 with handler 0x4016ea10 and context 0x3ffccbf4 on loop 0x3ffcb238
D (27189) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_connect: fd: 0
D (27189) mb_port.tcp.master: 0x3ffcaec8, connection phase, slave: #0(54) [192.168.32.50].
I (27209) mb_port.tcp.master: 0x3ffcaec8, slave: #0, sock:54, IP: 192.168.32.50, is connected.
D (27219) mb_port.tcp.master: Opened/connected: 2, 1.
D (27219) event: running post loop:0x3ffcaec8:8 with handler 0x4016ea10 and context 0x3ffccbf4 on loop 0x3ffcb238
D (27229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_connect: fd: 1
D (27229) mb_port.tcp.master: 0x3ffcaec8, connection phase, slave: #1(-1) [192.168.32.50].
D (27249) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
I (27259) mb_port.tcp.master: 0x3ffcaec8, slave: #1, sock:55, IP: 192.168.32.50, is connected.
D (27259) mb_port.tcp.master: Opened/connected: 2, 2.
I (27259) mbc_tcp.master: mb controller connection done.
I (27269) mb_port.tcp.master: 0x3ffcaec8, Connected: 2, 2, start polling.
D (27279) mb_object.master: 0x3ffc957c:EV_READY
I (27279) TEST_COMMON: 0x3ffc957c, modbus master start...
Send signal: [Master_started]!
D (27289) TEST_COMMON: Notify task start 0x3ffce1b4
D (27289) TEST_COMMON: Task: 0x3ffce1b4, get notify value = 1
D (27309) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (27309) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (27309) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (27319) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (27329) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (27329) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (27339) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (27349) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (27359) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0000, 15 (bytes), errno 119
D (27369) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11
D (27369) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (27379) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (27629) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (27629) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (27629) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (27689) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (27689) port.utils: Enqueue data, length=12, TID=0x0
D (27689) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (27699) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (27699) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (27709) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (27719) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (27729) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0000 received.
D (27729) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (27739) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0000:0x0001, 0x3ffcad5c.
D (27749) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 378656.
D (27759) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (27759) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 00 00 01
D (27769) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (27769) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (27779) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (27779) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (27789) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (27789) mb_object.master: 0x3ffc957c, transaction processing time(us) = 467792
D (27809) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (27809) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (27829) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (27839) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (27839) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (27839) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (27849) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (27859) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (27859) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (27869) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (27879) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (27889) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0001, 15 (bytes), errno 119
D (27899) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22
D (27899) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (27909) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (28159) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (28159) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (28159) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (28219) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (28219) port.utils: Enqueue data, length=12, TID=0x1
D (28219) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (28229) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (28229) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (28239) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (28249) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (28259) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0001 received.
D (28259) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (28269) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0001:0x0002, 0x3ffcad5c.
D (28279) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 378103.
D (28289) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (28289) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 01 00 01
D (28299) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (28299) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (28309) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (28309) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (28319) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (28329) mb_object.master: 0x3ffc957c, transaction processing time(us) = 467207
D (28339) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (28339) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (28359) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (28359) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (28359) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (28379) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (28379) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 15
D (28389) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (28389) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (28399) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (28409) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (28419) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0000, 15 (bytes), errno 119
D (28429) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (28429) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (28439) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (28489) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (28689) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (28689) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (28689) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (28749) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (28749) port.utils: Enqueue data, length=12, TID=0x0
D (28749) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (28759) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (28759) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (28769) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (28779) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (28789) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0000 received.
D (28789) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (28799) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0000:0x0001, 0x3ffcad5c.
D (28809) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 377713.
D (28819) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (28819) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 02 00 01
D (28829) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (28829) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (28839) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (28839) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (28849) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (28849) mb_object.master: 0x3ffc957c, transaction processing time(us) = 462933
D (28869) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (28869) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (28889) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (28889) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (28899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (28899) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (28909) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (28919) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (28919) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (28929) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (28939) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (28949) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0002, 15 (bytes), errno 119
D (28959) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44
D (28959) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (28969) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (29209) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (29209) port.utils: Enqueue data, length=12, TID=0x2
D (29209) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (29219) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (29219) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (29229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (29239) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (29249) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0002 received.
D (29249) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (29259) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0002:0x0003, 0x3ffcad5c.
D (29269) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 310037.
D (29279) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (29289) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 03 00 01
D (29289) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (29289) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (29299) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (29309) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (29309) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (29319) mb_object.master: 0x3ffc957c, transaction processing time(us) = 399338
D (29329) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (29339) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (29339) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (29359) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (29359) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (29359) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 00 00 01
D (29369) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (29379) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (29379) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (29389) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (29399) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (29409) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0003, 12 (bytes), errno 119
D (29419) SENT: 00 03 00 00 00 06 01 03 00 00 00 01
D (29419) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (29429) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (29679) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (29679) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (29679) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (29739) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (29739) port.utils: Enqueue data, length=11, TID=0x3
D (29739) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (29749) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (29749) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (29759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (29769) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (29779) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0003 received.
D (29779) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (29789) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0003:0x0004, 0x3ffcad5c.
D (29799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 376725.
D (29809) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (29809) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 11 11
D (29819) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (29819) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (29829) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (29829) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (29839) mbm_error_cb_request_success: 03 00 00 00 01
D (29839) mb_object.master: 0x3ffc957c, transaction processing time(us) = 464828
D (29859) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (29859) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (29879) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (29879) TEST_COMMON: CHAR #0, value is ok.
D (29879) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (29899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (29899) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 01 00 01
D (29899) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (29909) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (29919) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (29929) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (29929) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (29939) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0004, 12 (bytes), errno 119
D (29949) SENT: 00 04 00 00 00 06 01 03 00 01 00 01
D (29959) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (29959) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (30219) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (30219) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (30219) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (30279) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (30279) port.utils: Enqueue data, length=11, TID=0x4
D (30279) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (30289) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (30289) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (30299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (30309) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (30319) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0004 received.
D (30319) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (30329) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0004:0x0005, 0x3ffcad5c.
D (30339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384981.
D (30349) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (30349) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 22 22
D (30359) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (30359) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (30369) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (30369) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (30379) mbm_error_cb_request_success: 03 00 01 00 01
D (30379) mb_object.master: 0x3ffc957c, transaction processing time(us) = 472529
D (30399) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (30399) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (30419) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (30419) TEST_COMMON: CHAR #1, value is ok.
D (30419) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (30429) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (30439) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 02 00 01
D (30439) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 12
D (30449) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (30459) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (30469) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (30469) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (30479) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0001, 12 (bytes), errno 119
D (30489) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01
D (30499) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (30499) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (30739) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (30749) port.utils: Enqueue data, length=11, TID=0x1
D (30749) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (30749) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (30759) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (30769) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (30769) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (30779) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0001 received.
D (30789) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (30789) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0001:0x0002, 0x3ffcad5c.
D (30799) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 312155.
D (30809) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (30819) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 33 33
D (30829) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (30829) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (30829) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (30839) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (30849) mbm_error_cb_request_success: 03 00 02 00 01
D (30849) mb_object.master: 0x3ffc957c, transaction processing time(us) = 399781
D (30869) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (30869) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (30869) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (30889) TEST_COMMON: CHAR #2, value is ok.
D (30889) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (30909) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (30909) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 03 00 01
D (30909) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (30919) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (30919) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (30929) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (30939) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (30949) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0005, 12 (bytes), errno 119
D (30959) SENT: 00 05 00 00 00 06 01 03 00 03 00 01
D (30959) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (30969) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (31219) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (31219) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (31219) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (31279) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (31279) port.utils: Enqueue data, length=11, TID=0x5
D (31279) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (31289) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (31289) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (31299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (31309) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (31319) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0005 received.
D (31319) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (31329) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0005:0x0006, 0x3ffcad5c.
D (31339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 377993.
D (31349) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (31349) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 44 44
D (31359) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (31359) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (31369) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (31369) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (31379) mbm_error_cb_request_success: 03 00 03 00 01
D (31379) mb_object.master: 0x3ffc957c, transaction processing time(us) = 462579
D (31399) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (31399) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (31419) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (31419) TEST_COMMON: CHAR #3, value is ok.
D (31419) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (31429) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (31429) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 00
D (31439) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (31449) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (31459) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (31469) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (31469) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (31479) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0006, 15 (bytes), errno 119
D (31489) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00
D (31499) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (31499) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (31759) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (31759) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (31759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (31819) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (31819) port.utils: Enqueue data, length=12, TID=0x6
D (31819) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (31829) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (31829) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (31839) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (31849) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (31859) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0006 received.
D (31859) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (31869) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0006:0x0007, 0x3ffcad5c.
D (31879) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 385004.
D (31889) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (31889) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (31899) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (31899) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (31909) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (31909) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (31919) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00
D (31929) mb_object.master: 0x3ffc957c, transaction processing time(us) = 474104
D (31939) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (31939) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (31949) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (32019) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (32019) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (32019) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (32019) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (32029) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (32039) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (32049) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (32059) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (32069) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0007, 15 (bytes), errno 119
D (32079) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11
D (32079) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (32089) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (32339) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (32339) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (32339) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (32399) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (32399) port.utils: Enqueue data, length=12, TID=0x7
D (32399) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (32409) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (32409) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (32419) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (32429) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (32439) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0007 received.
D (32439) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (32449) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0007:0x0008, 0x3ffcad5c.
D (32459) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 380904.
D (32469) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (32469) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 00 00 01
D (32479) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (32479) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (32489) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (32489) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (32499) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (32499) mb_object.master: 0x3ffc957c, transaction processing time(us) = 470024
D (32519) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (32519) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (32529) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (32549) TEST_COMMON: CHAR #0, value is ok.
D (32549) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (32549) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (32569) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (32569) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (32569) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (32579) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (32589) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (32589) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (32609) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0008, 15 (bytes), errno 119
D (32609) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22
D (32619) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (32629) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (32789) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (32879) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (32879) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (32879) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (32939) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (32939) port.utils: Enqueue data, length=12, TID=0x8
D (32939) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (32949) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (32949) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (32959) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (32969) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (32979) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0008 received.
D (32979) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (32989) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0008:0x0009, 0x3ffcad5c.
D (32999) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 383920.
D (33009) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (33009) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 01 00 01
D (33019) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (33019) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (33029) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (33029) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (33039) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (33049) mb_object.master: 0x3ffc957c, transaction processing time(us) = 463000
D (33059) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (33059) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (33079) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (33079) TEST_COMMON: CHAR #1, value is ok.
D (33079) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (33089) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (33099) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (33099) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 15
D (33109) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (33119) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (33129) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (33129) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (33149) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0002, 15 (bytes), errno 119
D (33149) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (33159) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (33169) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (33419) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (33419) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (33419) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (33509) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (33509) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (33509) port.utils: Enqueue data, length=12, TID=0x2
D (33509) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (33519) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (33529) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (33539) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (33539) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (33549) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0002 received.
D (33559) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (33559) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0002:0x0003, 0x3ffcad5c.
D (33569) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 419762.
D (33579) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (33589) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 02 00 01
D (33589) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (33599) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (33599) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (33609) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (33609) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (33619) mb_object.master: 0x3ffc957c, transaction processing time(us) = 509398
D (33639) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (33639) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (33639) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (33659) TEST_COMMON: CHAR #2, value is ok.
D (33659) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (33659) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (33679) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (33679) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (33689) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (33689) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (33699) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (33709) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (33719) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0009, 15 (bytes), errno 119
D (33729) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44
D (33729) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (33739) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (33989) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (33989) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (33989) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (34049) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (34049) port.utils: Enqueue data, length=12, TID=0x9
D (34049) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (34059) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (34059) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (34069) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (34079) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (34089) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0009 received.
D (34089) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (34099) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0009:0x000a, 0x3ffcad5c.
D (34109) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 378182.
D (34119) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (34119) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 03 00 01
D (34129) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (34129) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (34139) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (34139) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (34149) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (34149) mb_object.master: 0x3ffc957c, transaction processing time(us) = 463019
D (34169) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (34169) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (34189) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (34189) TEST_COMMON: CHAR #3, value is ok.
D (34189) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (34209) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (34209) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 01
D (34209) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (34219) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (34229) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (34239) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (34239) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (34249) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000a, 15 (bytes), errno 119
D (34259) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01
D (34269) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (34279) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (34529) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (34529) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (34539) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (34589) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (34589) port.utils: Enqueue data, length=12, TID=0xa
D (34589) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (34599) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (34599) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (34609) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (34619) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (34629) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000a received.
D (34629) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (34639) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000a:0x000b, 0x3ffcad5c.
D (34649) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384005.
D (34659) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (34659) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (34669) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (34669) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (34679) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (34679) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (34689) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01
D (34689) mb_object.master: 0x3ffc957c, transaction processing time(us) = 472467
D (34699) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (34709) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (34719) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (34789) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (34789) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (34789) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 00 00 01
D (34789) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (34799) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (34809) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (34819) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (34829) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (34839) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000b, 12 (bytes), errno 119
D (34849) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01
D (34849) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (34859) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (35109) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (35109) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (35109) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (35169) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (35169) port.utils: Enqueue data, length=11, TID=0xb
D (35169) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (35179) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (35179) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (35189) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (35199) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (35209) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000b received.
D (35209) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (35219) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000b:0x000c, 0x3ffcad5c.
D (35229) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 381840.
D (35239) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (35239) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 11 11
D (35249) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (35249) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (35259) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (35259) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (35269) mbm_error_cb_request_success: 03 00 00 00 01
D (35269) mb_object.master: 0x3ffc957c, transaction processing time(us) = 469900
D (35279) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (35299) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (35299) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (35319) TEST_COMMON: CHAR #0, value is ok.
D (35319) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (35319) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (35319) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 01 00 01
D (35329) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (35339) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (35349) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (35359) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (35359) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (35369) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000c, 12 (bytes), errno 119
D (35379) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01
D (35389) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (35389) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (35559) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (35649) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (35649) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (35649) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (35709) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (35709) port.utils: Enqueue data, length=11, TID=0xc
D (35709) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (35719) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (35719) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (35729) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (35739) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (35749) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000c received.
D (35749) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (35759) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000c:0x000d, 0x3ffcad5c.
D (35769) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 385001.
D (35779) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (35779) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 22 22
D (35789) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (35789) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (35799) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (35799) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (35809) mbm_error_cb_request_success: 03 00 01 00 01
D (35809) mb_object.master: 0x3ffc957c, transaction processing time(us) = 473068
D (35829) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (35839) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (35839) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (35849) TEST_COMMON: CHAR #1, value is ok.
D (35849) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (35869) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (35869) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 02 00 01
D (35869) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 12
D (35879) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (35889) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (35899) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (35899) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (35909) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0003, 12 (bytes), errno 119
D (35919) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01
D (35929) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (35929) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (36189) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (36189) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (36189) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (36269) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (36269) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (36269) port.utils: Enqueue data, length=11, TID=0x3
D (36279) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (36289) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (36289) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (36299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (36309) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (36319) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0003 received.
D (36319) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (36329) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0003:0x0004, 0x3ffcad5c.
D (36339) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 415926.
D (36349) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (36349) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 33 33
D (36359) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (36359) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (36369) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (36369) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (36379) mbm_error_cb_request_success: 03 00 02 00 01
D (36379) mb_object.master: 0x3ffc957c, transaction processing time(us) = 503737
D (36389) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (36409) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (36409) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (36409) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (36429) TEST_COMMON: CHAR #2, value is ok.
D (36439) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (36439) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (36439) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 03 00 01
D (36449) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (36459) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (36459) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (36469) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (36479) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (36489) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000d, 12 (bytes), errno 119
D (36499) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01
D (36499) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (36509) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (36509) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (36539) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (36759) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (36759) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (36759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (36819) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (36819) port.utils: Enqueue data, length=11, TID=0xd
D (36819) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (36829) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (36829) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (36839) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (36849) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (36859) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000d received.
D (36859) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (36869) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000d:0x000e, 0x3ffcad5c.
D (36879) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 378127.
D (36889) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (36889) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 44 44
D (36899) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (36899) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (36909) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (36909) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (36919) mbm_error_cb_request_success: 03 00 03 00 01
D (36919) mb_object.master: 0x3ffc957c, transaction processing time(us) = 466198
D (36929) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (36949) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (36949) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (36969) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (36969) TEST_COMMON: CHAR #3, value is ok.
D (36969) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (36979) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (36989) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 02
D (36989) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (36999) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (36999) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (37009) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (37019) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (37029) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000e, 15 (bytes), errno 119
D (37039) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02
D (37049) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (37049) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (37199) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (37199) port.utils: Enqueue data, length=12, TID=0xe
D (37199) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (37209) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (37209) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (37219) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (37229) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (37239) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000e received.
D (37239) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (37249) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000e:0x000f, 0x3ffcad5c.
D (37259) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 216873.
D (37269) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (37269) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (37279) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (37279) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (37289) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (37289) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (37299) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02
D (37309) mb_object.master: 0x3ffc957c, transaction processing time(us) = 303872
D (37319) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (37319) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (37329) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (37409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (37409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (37409) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (37409) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (37419) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (37429) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (37439) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (37449) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (37459) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000f, 15 (bytes), errno 119
D (37469) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11
D (37469) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (37479) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (37699) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (37699) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (37699) port.utils: Enqueue data, length=12, TID=0xf
D (37709) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (37719) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (37719) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (37729) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (37739) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (37749) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000f received.
D (37749) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (37759) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000f:0x0010, 0x3ffcad5c.
D (37769) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 302450.
D (37779) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (37789) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 00 00 01
D (37789) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (37789) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (37799) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (37799) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (37809) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (37819) mb_object.master: 0x3ffc957c, transaction processing time(us) = 392280
D (37829) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (37839) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (37839) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (37859) TEST_COMMON: CHAR #0, value is ok.
D (37859) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (37859) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (37879) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (37879) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (37879) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (37889) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (37899) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (37909) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (37919) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0010, 15 (bytes), errno 119
D (37919) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22
D (37929) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (37939) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (37939) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38019) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38019) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38109) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38189) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (38189) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (38189) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (38329) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (38329) port.utils: Enqueue data, length=12, TID=0x10
D (38329) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (38339) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (38339) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (38349) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (38359) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (38369) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0010 received.
D (38379) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (38379) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0010:0x0011, 0x3ffcad5c.
D (38389) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 466237.
D (38399) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (38409) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 01 00 01
D (38409) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (38419) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (38419) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (38429) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (38429) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (38439) mb_object.master: 0x3ffc957c, transaction processing time(us) = 546812
D (38449) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (38449) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (38469) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (38469) TEST_COMMON: CHAR #1, value is ok.
D (38489) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (38489) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (38489) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (38489) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 15
D (38499) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (38509) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (38519) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (38529) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (38539) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0004, 15 (bytes), errno 119
D (38549) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (38549) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (38559) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (38559) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38569) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38579) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38729) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38729) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (38729) port.utils: Enqueue data, length=12, TID=0x4
D (38729) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (38739) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (38749) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (38759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (38759) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (38769) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0004 received.
D (38779) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (38779) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0004:0x0005, 0x3ffcad5c.
D (38789) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 246142.
D (38799) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (38809) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 02 00 01
D (38809) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (38819) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (38819) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (38829) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (38839) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (38839) mb_object.master: 0x3ffc957c, transaction processing time(us) = 335345
D (38849) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38849) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (38879) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (38879) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (38879) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (38899) TEST_COMMON: CHAR #2, value is ok.
D (38899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (38899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (38919) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (38919) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (38919) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (38929) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (38939) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (38949) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (38959) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0011, 15 (bytes), errno 119
D (38969) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44
D (38969) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (38979) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (38979) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (39029) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (39129) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (39229) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (39229) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (39229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (39289) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (39289) port.utils: Enqueue data, length=12, TID=0x11
D (39289) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (39299) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (39299) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (39309) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (39319) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (39319) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0011 received.
D (39329) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (39339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0011:0x0012, 0x3ffcad5c.
D (39349) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 381665.
D (39359) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (39359) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 03 00 01
D (39369) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (39369) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (39379) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (39379) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (39389) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (39389) mb_object.master: 0x3ffc957c, transaction processing time(us) = 462861
D (39409) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (39409) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (39429) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (39429) TEST_COMMON: CHAR #3, value is ok.
D (39429) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (39439) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (39449) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 03
D (39449) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (39459) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (39469) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (39479) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (39479) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (39489) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0012, 15 (bytes), errno 119
D (39499) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03
D (39509) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (39519) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (39639) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (39749) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (39749) port.utils: Enqueue data, length=12, TID=0x12
D (39749) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (39759) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (39759) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (39769) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (39779) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (39789) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0012 received.
D (39799) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (39799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0012:0x0013, 0x3ffcad5c.
D (39809) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 308045.
D (39819) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (39829) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (39829) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (39839) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (39839) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (39849) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (39849) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03
D (39859) mb_object.master: 0x3ffc957c, transaction processing time(us) = 397125
D (39869) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (39879) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (39879) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (39899) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (39949) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (39949) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (39959) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 00 00 01
D (39959) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (39969) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (39969) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (39979) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (39989) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (39999) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0013, 12 (bytes), errno 119
D (40009) SENT: 00 13 00 00 00 06 01 03 00 00 00 01
D (40019) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (40019) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (40159) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40159) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40229) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (40229) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (40229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (40289) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (40289) port.utils: Enqueue data, length=11, TID=0x13
D (40289) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (40299) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (40299) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (40309) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (40319) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (40329) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0013 received.
D (40329) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (40339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0013:0x0014, 0x3ffcad5c.
D (40349) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 336431.
D (40359) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (40359) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 11 11
D (40369) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (40369) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (40379) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (40379) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (40389) mbm_error_cb_request_success: 03 00 00 00 01
D (40389) mb_object.master: 0x3ffc957c, transaction processing time(us) = 422862
D (40399) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40419) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (40419) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (40419) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (40429) TEST_COMMON: CHAR #0, value is ok.
D (40449) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (40449) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (40459) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 01 00 01
D (40459) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (40469) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (40469) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (40479) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (40489) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (40499) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0014, 12 (bytes), errno 119
D (40509) SENT: 00 14 00 00 00 06 01 03 00 01 00 01
D (40519) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (40519) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (40569) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40729) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (40729) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (40729) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (40759) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40789) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (40789) port.utils: Enqueue data, length=11, TID=0x14
D (40789) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (40799) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (40799) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (40809) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (40819) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (40829) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0014 received.
D (40829) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (40839) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0014:0x0015, 0x3ffcad5c.
D (40849) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 336480.
D (40859) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (40859) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 22 22
D (40869) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (40869) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (40879) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (40879) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (40889) mbm_error_cb_request_success: 03 00 01 00 01
D (40889) mb_object.master: 0x3ffc957c, transaction processing time(us) = 422892
D (40899) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40909) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40909) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40929) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (40929) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
D (40929) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
I (40949) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (40949) TEST_COMMON: CHAR #1, value is ok.
D (40959) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (40959) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (40969) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (40979) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 02 00 01
D (40979) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 12
D (40989) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (40999) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (41009) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (41009) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (41019) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0005, 12 (bytes), errno 119
D (41029) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01
D (41039) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (41039) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (41049) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41179) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41179) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41199) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (41199) port.utils: Enqueue data, length=11, TID=0x5
D (41199) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (41209) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (41209) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (41219) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (41229) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (41239) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0005 received.
D (41239) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (41249) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0005:0x0006, 0x3ffcad5c.
D (41259) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 226065.
D (41269) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (41279) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 33 33
D (41279) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (41279) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (41289) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (41289) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (41299) mbm_error_cb_request_success: 03 00 02 00 01
D (41309) mb_object.master: 0x3ffc957c, transaction processing time(us) = 311817
D (41309) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41319) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41329) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (41329) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (41349) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (41349) TEST_COMMON: CHAR #2, value is ok.
D (41369) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (41369) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (41369) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 03 00 01
D (41369) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (41379) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (41389) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (41399) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (41409) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (41419) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0015, 12 (bytes), errno 119
D (41429) SENT: 00 15 00 00 00 06 01 03 00 03 00 01
D (41429) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (41439) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (41439) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41489) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41589) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41689) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (41689) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (41689) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (41709) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41739) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41749) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (41749) port.utils: Enqueue data, length=11, TID=0x15
D (41749) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (41759) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (41759) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (41769) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (41779) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (41779) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0015 received.
D (41789) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (41799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0015:0x0016, 0x3ffcad5c.
D (41809) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 381307.
D (41819) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (41819) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 44 44
D (41829) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (41829) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (41839) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (41839) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (41849) mbm_error_cb_request_success: 03 00 03 00 01
D (41849) mb_object.master: 0x3ffc957c, transaction processing time(us) = 469386
D (41869) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (41869) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (41889) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (41899) TEST_COMMON: CHAR #3, value is ok.
D (41899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (41899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (41899) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41909) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (41929) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 04
D (41929) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (41929) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (41939) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (41949) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (41949) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (41969) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0016, 15 (bytes), errno 119
D (41969) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04
D (41979) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (41989) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (41989) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (42099) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (42209) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (42209) port.utils: Enqueue data, length=12, TID=0x16
D (42209) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (42219) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (42219) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (42229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (42239) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (42249) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0016 received.
D (42249) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (42259) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0016:0x0017, 0x3ffcad5c.
D (42269) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 294610.
D (42279) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (42289) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (42289) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (42299) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (42299) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (42309) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (42309) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04
D (42319) mb_object.master: 0x3ffc957c, transaction processing time(us) = 375383
D (42319) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (42339) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (42339) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (42359) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (42409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (42409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (42409) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (42419) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (42429) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (42429) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (42439) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (42449) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (42459) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0017, 15 (bytes), errno 119
D (42469) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11
D (42469) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (42479) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (42489) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (42499) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (42719) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (42719) port.utils: Enqueue data, length=12, TID=0x17
D (42719) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (42729) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (42729) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (42739) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (42749) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (42759) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0017 received.
D (42759) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (42769) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0017:0x0018, 0x3ffcad5c.
D (42779) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 310372.
D (42789) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (42799) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 00 00 01
D (42799) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (42799) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (42809) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (42819) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (42819) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (42829) mb_object.master: 0x3ffc957c, transaction processing time(us) = 399469
D (42839) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (42839) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (42859) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (42859) TEST_COMMON: CHAR #0, value is ok.
D (42859) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (42879) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (42879) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (42879) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (42889) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (42899) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (42909) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (42919) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (42929) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0018, 15 (bytes), errno 119
D (42939) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22
D (42939) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (42949) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (43199) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (43199) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (43199) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (43259) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (43259) port.utils: Enqueue data, length=12, TID=0x18
D (43259) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (43269) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (43269) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (43279) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (43289) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (43299) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0018 received.
D (43299) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (43309) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0018:0x0019, 0x3ffcad5c.
D (43319) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 381826.
D (43329) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (43329) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 01 00 01
D (43339) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (43339) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (43349) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (43349) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (43359) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (43359) mb_object.master: 0x3ffc957c, transaction processing time(us) = 470942
D (43369) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (43389) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (43389) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (43409) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (43409) TEST_COMMON: CHAR #1, value is ok.
D (43409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (43409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (43419) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (43429) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 15
D (43439) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (43439) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (43449) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (43459) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (43469) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0006, 15 (bytes), errno 119
D (43479) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (43479) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (43489) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (43519) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (43529) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (43739) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (43739) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (43739) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (43799) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (43799) port.utils: Enqueue data, length=12, TID=0x6
D (43799) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (43809) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (43809) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (43819) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (43829) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (43829) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0006 received.
D (43839) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (43849) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0006:0x0007, 0x3ffcad5c.
D (43859) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 377457.
D (43869) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (43869) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 02 00 01
D (43879) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (43879) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (43889) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (43889) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (43899) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (43899) mb_object.master: 0x3ffc957c, transaction processing time(us) = 465319
D (43919) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (43919) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (43929) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (43939) TEST_COMMON: CHAR #2, value is ok.
D (43949) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (43949) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (43959) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (43959) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (43969) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (43979) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (43989) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (43989) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (43999) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0019, 15 (bytes), errno 119
D (44009) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44
D (44019) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (44019) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (44039) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (44249) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (44249) port.utils: Enqueue data, length=12, TID=0x19
D (44249) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (44259) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (44269) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (44279) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (44279) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (44289) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0019 received.
D (44299) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (44299) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0019:0x001a, 0x3ffcad5c.
D (44309) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 300604.
D (44319) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (44329) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 03 00 01
D (44329) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (44339) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (44339) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (44349) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (44359) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (44359) mb_object.master: 0x3ffc957c, transaction processing time(us) = 389383
D (44369) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (44389) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (44389) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (44389) TEST_COMMON: CHAR #3, value is ok.
D (44409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (44409) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (44409) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 05
D (44419) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (44429) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (44429) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (44439) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (44449) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (44459) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001a, 15 (bytes), errno 119
D (44469) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05
D (44469) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (44479) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (44729) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (44729) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (44729) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (44789) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (44789) port.utils: Enqueue data, length=12, TID=0x1a
D (44789) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (44799) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (44799) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (44809) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (44819) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (44829) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x001a received.
D (44829) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (44839) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001a:0x001b, 0x3ffcad5c.
D (44849) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 377667.
D (44859) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (44859) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (44869) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (44869) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (44879) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (44879) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (44889) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05
D (44889) mb_object.master: 0x3ffc957c, transaction processing time(us) = 466772
D (44909) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (44909) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (44929) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (44959) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (44959) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (44999) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (44999) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (44999) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 00 00 01
D (44999) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (45009) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (45019) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (45029) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (45039) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (45049) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001b, 12 (bytes), errno 119
D (45059) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01
D (45059) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (45069) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (45279) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (45279) port.utils: Enqueue data, length=11, TID=0x1b
D (45279) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (45289) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (45289) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (45299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (45309) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (45319) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x001b received.
D (45319) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (45329) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001b:0x001c, 0x3ffcad5c.
D (45339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 284289.
D (45349) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (45359) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 11 11
D (45359) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (45359) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (45369) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (45379) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (45379) mbm_error_cb_request_success: 03 00 00 00 01
D (45389) mb_object.master: 0x3ffc957c, transaction processing time(us) = 372352
D (45389) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (45409) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (45409) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (45429) TEST_COMMON: CHAR #0, value is ok.
D (45429) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (45439) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (45439) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 01 00 01
D (45439) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (45449) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (45459) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (45469) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (45469) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (45489) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001c, 12 (bytes), errno 119
D (45489) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01
D (45499) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (45509) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (45689) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (45699) port.utils: Enqueue data, length=11, TID=0x1c
D (45699) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (45699) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (45709) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (45719) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (45719) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (45729) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x001c received.
D (45739) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (45739) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001c:0x001d, 0x3ffcad5c.
D (45749) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 260450.
D (45759) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (45769) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 22 22
D (45779) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (45779) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (45789) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (45789) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (45799) mbm_error_cb_request_success: 03 00 01 00 01
D (45799) mb_object.master: 0x3ffc957c, transaction processing time(us) = 349203
D (45819) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (45819) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (45829) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (45849) TEST_COMMON: CHAR #1, value is ok.
D (45849) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (45849) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (45849) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 02 00 01
D (45859) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 12
D (45869) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (45869) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (45879) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (45889) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (45899) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0007, 12 (bytes), errno 119
D (45909) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01
D (45909) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (45919) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (46169) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (46169) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (46169) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (46229) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (46229) port.utils: Enqueue data, length=11, TID=0x7
D (46229) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (46239) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (46239) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (46249) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (46259) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (46269) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0007 received.
D (46269) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (46279) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0007:0x0008, 0x3ffcad5c.
D (46289) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 377870.
D (46299) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (46299) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 33 33
D (46309) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (46309) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (46319) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (46319) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (46329) mbm_error_cb_request_success: 03 00 02 00 01
D (46329) mb_object.master: 0x3ffc957c, transaction processing time(us) = 465469
D (46349) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (46349) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (46369) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (46369) TEST_COMMON: CHAR #2, value is ok.
D (46369) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (46389) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (46389) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 03 00 01
D (46389) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (46399) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (46409) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (46419) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (46419) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (46429) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001d, 12 (bytes), errno 119
D (46439) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01
D (46449) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (46449) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (46709) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (46709) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (46709) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (46769) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (46769) port.utils: Enqueue data, length=11, TID=0x1d
D (46769) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (46779) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (46779) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (46789) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (46799) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (46799) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x001d received.
D (46809) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (46819) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001d:0x001e, 0x3ffcad5c.
D (46829) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384805.
D (46839) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (46839) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 44 44
D (46849) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (46849) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (46859) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (46859) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (46869) mbm_error_cb_request_success: 03 00 03 00 01
D (46869) mb_object.master: 0x3ffc957c, transaction processing time(us) = 472411
D (46889) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (46889) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (46899) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (46909) TEST_COMMON: CHAR #3, value is ok.
D (46909) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (46919) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (46919) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 06
D (46929) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (46939) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (46949) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (46959) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (46959) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (46969) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001e, 15 (bytes), errno 119
D (46979) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06
D (46989) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (46989) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (47249) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (47249) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (47249) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (47279) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (47309) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (47309) port.utils: Enqueue data, length=12, TID=0x1e
D (47309) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (47319) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (47319) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (47329) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (47339) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (47339) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x001e received.
D (47349) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (47359) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001e:0x001f, 0x3ffcad5c.
D (47369) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384089.
D (47379) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (47379) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (47389) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (47389) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (47399) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (47399) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (47409) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06
D (47409) mb_object.master: 0x3ffc957c, transaction processing time(us) = 472918
D (47429) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (47439) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (47439) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (47519) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (47519) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (47519) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (47519) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (47529) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (47539) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (47549) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (47559) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (47569) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001f, 15 (bytes), errno 119
D (47579) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11
D (47579) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (47589) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (47739) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (47739) port.utils: Enqueue data, length=12, TID=0x1f
D (47739) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (47749) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (47749) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (47759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (47769) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (47779) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x001f received.
D (47779) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (47789) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001f:0x0020, 0x3ffcad5c.
D (47799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 222253.
D (47809) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (47819) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 00 00 01
D (47819) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (47819) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (47829) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (47829) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (47839) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (47849) mb_object.master: 0x3ffc957c, transaction processing time(us) = 311409
D (47849) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (47859) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (47879) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (47879) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (47879) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (47899) TEST_COMMON: CHAR #0, value is ok.
D (47899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (47899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (47919) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (47919) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (47929) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (47929) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (47939) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (47949) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (47959) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0020, 15 (bytes), errno 119
D (47969) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22
D (47969) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (47979) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (48229) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (48229) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (48229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (48289) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (48289) port.utils: Enqueue data, length=12, TID=0x20
D (48289) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (48299) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (48299) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (48309) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (48319) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (48329) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0020 received.
D (48329) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (48339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0020:0x0021, 0x3ffcad5c.
D (48349) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 380377.
D (48359) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (48359) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 01 00 01
D (48369) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (48369) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (48379) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (48379) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (48389) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (48389) mb_object.master: 0x3ffc957c, transaction processing time(us) = 463048
D (48409) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (48409) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (48429) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (48439) TEST_COMMON: CHAR #1, value is ok.
D (48439) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (48439) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (48449) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (48449) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 15
D (48459) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (48469) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (48479) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (48489) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (48499) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0008, 15 (bytes), errno 119
D (48509) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (48509) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (48519) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (48759) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (48759) port.utils: Enqueue data, length=12, TID=0x8
D (48759) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (48769) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (48769) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (48779) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (48789) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (48799) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0008 received.
D (48809) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (48809) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0008:0x0009, 0x3ffcad5c.
D (48819) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 315634.
D (48829) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (48839) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 02 00 01
D (48839) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (48849) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (48849) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (48859) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (48859) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (48869) mb_object.master: 0x3ffc957c, transaction processing time(us) = 401152
D (48879) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (48889) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (48889) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (48909) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (48909) TEST_COMMON: CHAR #2, value is ok.
D (48909) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (48919) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (48929) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (48929) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (48939) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (48949) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (48959) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (48959) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (48969) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0021, 15 (bytes), errno 119
D (48979) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44
D (48989) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (48999) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (49249) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (49249) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (49249) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (49309) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (49309) port.utils: Enqueue data, length=12, TID=0x21
D (49309) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (49319) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (49319) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (49329) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (49339) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (49349) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0021 received.
D (49349) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (49359) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0021:0x0022, 0x3ffcad5c.
D (49369) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384003.
D (49379) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (49379) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 03 00 01
D (49389) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (49389) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (49399) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (49399) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (49409) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (49409) mb_object.master: 0x3ffc957c, transaction processing time(us) = 471323
D (49429) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (49439) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (49439) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (49459) TEST_COMMON: CHAR #3, value is ok.
D (49459) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (49459) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (49469) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 07
D (49469) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (49479) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (49489) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (49499) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (49499) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (49519) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0022, 15 (bytes), errno 119
D (49519) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07
D (49529) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (49539) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (49779) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (49789) port.utils: Enqueue data, length=12, TID=0x22
D (49789) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (49789) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (49799) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (49809) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (49819) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (49819) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0022 received.
D (49829) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (49829) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0022:0x0023, 0x3ffcad5c.
D (49849) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 321913.
D (49849) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (49859) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (49869) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (49869) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (49879) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (49879) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (49889) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07
D (49889) mb_object.master: 0x3ffc957c, transaction processing time(us) = 412699
D (49909) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (49909) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (49929) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (49979) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (49979) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (49979) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 00 00 01
D (49989) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (49999) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (49999) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (50009) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (50019) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (50029) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0023, 12 (bytes), errno 119
D (50039) SENT: 00 23 00 00 00 06 01 03 00 00 00 01
D (50039) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (50049) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (50199) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (50209) port.utils: Enqueue data, length=11, TID=0x23
D (50209) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (50209) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (50219) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (50229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (50229) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (50239) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0023 received.
D (50249) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (50249) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0023:0x0024, 0x3ffcad5c.
D (50259) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 225070.
D (50269) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (50279) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 11 11
D (50289) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (50289) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (50299) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (50299) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (50309) mbm_error_cb_request_success: 03 00 00 00 01
D (50309) mb_object.master: 0x3ffc957c, transaction processing time(us) = 313946
D (50329) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (50339) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (50339) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (50339) TEST_COMMON: CHAR #0, value is ok.
D (50359) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (50359) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (50359) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 01 00 01
D (50369) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (50379) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (50379) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (50389) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (50399) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (50409) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0024, 12 (bytes), errno 119
D (50419) SENT: 00 24 00 00 00 06 01 03 00 01 00 01
D (50419) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (50429) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (50679) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (50679) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (50679) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (50739) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (50739) port.utils: Enqueue data, length=11, TID=0x24
D (50739) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (50749) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (50749) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (50759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (50769) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (50779) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0024 received.
D (50779) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (50789) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0024:0x0025, 0x3ffcad5c.
D (50799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 377625.
D (50809) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (50809) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 22 22
D (50819) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (50819) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (50829) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (50829) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (50839) mbm_error_cb_request_success: 03 00 01 00 01
D (50839) mb_object.master: 0x3ffc957c, transaction processing time(us) = 465699
D (50859) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (50859) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (50879) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (50879) TEST_COMMON: CHAR #1, value is ok.
D (50879) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (50889) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (50889) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 02 00 01
D (50899) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 12
D (50909) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (50919) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (50929) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (50929) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (50939) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0009, 12 (bytes), errno 119
D (50949) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01
D (50959) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (50959) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (51219) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (51219) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (51219) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (51279) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (51279) port.utils: Enqueue data, length=11, TID=0x9
D (51279) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (51289) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (51289) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (51299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (51309) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (51319) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0009 received.
D (51319) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (51329) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0009:0x000a, 0x3ffcad5c.
D (51339) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 385596.
D (51349) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (51349) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 33 33
D (51359) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (51359) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (51369) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (51369) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (51379) mbm_error_cb_request_success: 03 00 02 00 01
D (51379) mb_object.master: 0x3ffc957c, transaction processing time(us) = 473671
D (51399) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (51399) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (51409) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (51419) TEST_COMMON: CHAR #2, value is ok.
D (51419) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (51429) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (51449) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 03 00 01
D (51449) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (51459) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (51459) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (51469) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (51479) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (51489) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0025, 12 (bytes), errno 119
D (51499) SENT: 00 25 00 00 00 06 01 03 00 03 00 01
D (51499) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (51509) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (51749) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (51749) port.utils: Enqueue data, length=11, TID=0x25
D (51749) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (51749) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (51759) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (51769) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (51779) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (51779) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0025 received.
D (51789) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (51799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0025:0x0026, 0x3ffcad5c.
D (51809) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 308911.
D (51819) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (51819) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 44 44
D (51829) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (51829) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (51839) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (51839) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (51849) mbm_error_cb_request_success: 03 00 03 00 01
D (51849) mb_object.master: 0x3ffc957c, transaction processing time(us) = 388304
D (51869) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (51869) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (51889) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (51889) TEST_COMMON: CHAR #3, value is ok.
D (51889) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (51909) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (51909) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 08
D (51909) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (51919) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (51929) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (51939) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (51939) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (51949) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0026, 15 (bytes), errno 119
D (51959) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08
D (51969) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (51969) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (52229) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (52229) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (52229) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (52289) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (52289) port.utils: Enqueue data, length=12, TID=0x26
D (52289) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (52299) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (52299) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (52309) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (52319) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (52329) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0026 received.
D (52329) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (52339) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0026:0x0027, 0x3ffcad5c.
D (52349) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384969.
D (52359) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (52359) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (52369) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (52369) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (52379) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (52379) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (52389) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08
D (52389) mb_object.master: 0x3ffc957c, transaction processing time(us) = 472686
D (52409) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (52409) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (52429) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (52489) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (52489) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (52489) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 00 00 01 02 11 11
D (52489) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (52499) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (52509) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (52519) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (52529) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (52539) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0027, 15 (bytes), errno 119
D (52549) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11
D (52549) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (52559) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (52749) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (52759) port.utils: Enqueue data, length=12, TID=0x27
D (52759) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (52759) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (52769) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (52779) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (52779) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (52789) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0027 received.
D (52799) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (52799) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0027:0x0028, 0x3ffcad5c.
D (52809) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 267998.
D (52819) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (52829) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 00 00 01
D (52839) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (52839) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (52849) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (52849) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (52859) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11
D (52859) mb_object.master: 0x3ffc957c, transaction processing time(us) = 358763
D (52879) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (52879) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK
I (52899) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (52899) TEST_COMMON: CHAR #0, value is ok.
D (52899) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (52919) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (52919) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 01 00 01 02 22 22
D (52919) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (52929) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (52929) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (52949) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (52949) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (52959) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0028, 15 (bytes), errno 119
D (52969) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22
D (52979) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (52979) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (53189) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (53189) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (53189) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (53269) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (53269) port.utils: Enqueue data, length=12, TID=0x28
D (53269) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (53279) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (53279) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (53289) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (53299) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (53309) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0028 received.
D (53309) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (53319) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0028:0x0029, 0x3ffcad5c.
D (53329) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 359386.
D (53339) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (53349) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 01 00 01
D (53349) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (53359) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (53359) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (53369) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (53369) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22
D (53379) mb_object.master: 0x3ffc957c, transaction processing time(us) = 445397
D (53379) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (53399) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (53399) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK
I (53419) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (53419) TEST_COMMON: CHAR #1, value is ok.
D (53419) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (53429) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (53429) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 02 00 01 02 33 33
D (53439) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 15
D (53449) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (53459) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (53469) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (53469) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (53479) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x000a, 15 (bytes), errno 119
D (53489) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33
D (53499) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (53499) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (53509) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (53759) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (53759) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (53759) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (53819) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (53819) port.utils: Enqueue data, length=12, TID=0xa
D (53819) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (53829) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (53829) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (53839) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (53849) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (53849) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000a received.
D (53859) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (53869) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x000a:0x000b, 0x3ffcad5c.
D (53879) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 385084.
D (53889) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (53889) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 02 00 01
D (53899) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (53899) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (53909) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (53909) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (53919) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33
D (53919) mb_object.master: 0x3ffc957c, transaction processing time(us) = 474209
D (53939) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (53939) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK
I (53959) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (53959) TEST_COMMON: CHAR #2, value is ok.
D (53959) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (53969) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (53969) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (53989) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 03 00 01 02 44 44
D (53989) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (53999) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (53999) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (54009) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (54019) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (54029) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0029, 15 (bytes), errno 119
D (54039) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44
D (54039) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (54049) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (54299) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (54299) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (54299) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (54359) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (54359) port.utils: Enqueue data, length=12, TID=0x29
D (54359) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (54369) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (54369) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (54379) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (54389) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (54389) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x0029 received.
D (54399) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (54409) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0029:0x002a, 0x3ffcad5c.
D (54419) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 377884.
D (54429) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (54429) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 03 00 01
D (54439) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (54439) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (54449) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (54449) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (54459) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44
D (54459) mb_object.master: 0x3ffc957c, transaction processing time(us) = 464819
D (54469) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (54479) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK
I (54489) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (54509) TEST_COMMON: CHAR #3, value is ok.
D (54509) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (54509) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (54519) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 09
D (54519) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (54529) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (54539) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (54549) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (54549) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (54569) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002a, 15 (bytes), errno 119
D (54569) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09
D (54579) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (54589) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (54799) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (54799) port.utils: Enqueue data, length=12, TID=0x2a
D (54799) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (54809) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (54809) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (54819) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (54829) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (54839) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x002a received.
D (54839) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (54849) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002a:0x002b, 0x3ffcad5c.
D (54859) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 287186.
D (54869) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (54879) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (54879) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (54889) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (54889) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (54899) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (54899) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09
D (54909) mb_object.master: 0x3ffc957c, transaction processing time(us) = 376311
D (54919) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (54929) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (54939) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (54939) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (55009) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (55009) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (55009) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 00 00 01
D (55009) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (55019) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (55029) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (55039) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (55049) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (55059) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002b, 12 (bytes), errno 119
D (55069) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01
D (55069) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (55079) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (55319) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (55319) port.utils: Enqueue data, length=11, TID=0x2b
D (55319) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (55329) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (55329) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (55339) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (55349) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (55359) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x002b received.
D (55359) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (55369) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002b:0x002c, 0x3ffcad5c.
D (55379) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 312231.
D (55389) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (55399) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 11 11
D (55399) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (55399) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (55409) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (55409) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (55419) mbm_error_cb_request_success: 03 00 00 00 01
D (55419) mb_object.master: 0x3ffc957c, transaction processing time(us) = 400330
D (55439) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (55439) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK
I (55459) TEST_COMMON: 0x3ffc957c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (55459) TEST_COMMON: CHAR #0, value is ok.
D (55459) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (55479) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (55479) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 01 00 01
D (55479) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (55489) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (55499) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (55509) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (55509) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (55529) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002c, 12 (bytes), errno 119
D (55529) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01
D (55539) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (55539) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (55719) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (55729) port.utils: Enqueue data, length=11, TID=0x2c
D (55729) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (55729) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (55739) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (55749) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (55749) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (55759) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x002c received.
D (55769) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (55769) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002c:0x002d, 0x3ffcad5c.
D (55779) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 251855.
D (55789) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (55799) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 22 22
D (55809) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (55809) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (55819) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (55819) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (55829) mbm_error_cb_request_success: 03 00 01 00 01
D (55829) mb_object.master: 0x3ffc957c, transaction processing time(us) = 340987
D (55849) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (55849) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK
I (55869) TEST_COMMON: 0x3ffc957c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (55869) TEST_COMMON: CHAR #1, value is ok.
D (55869) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (55889) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (55889) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 02 00 01
D (55889) mb_port.tcp.master: 0x3ffcaec8,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffcab87, len: 12
D (55899) mb_driver: 0x3ffcaec8, fd event get: 0x10:1, |MB_EVENT_SEND_DATA
D (55899) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (55909) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 1
D (55919) mb_port.tcp.master: 0x3ffcaec8, get info: 1, sock_id: 55, queue_state: 0, state: 6.
D (55929) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x000b, 12 (bytes), errno 119
D (55939) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01
D (55939) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (55949) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (56199) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (56199) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (56199) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (56259) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (56259) port.utils: Enqueue data, length=11, TID=0xb
D (56259) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), frame received.
D (56269) mb_driver: 0x3ffcaec8, fd event get: 0x20:1, |MB_EVENT_RECV_DATA
D (56269) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (56279) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 1
D (56289) mb_port.tcp.master: 0x3ffcaec8, slave #1(55) [192.168.32.50], receive data ready.
D (56299) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x000b received.
D (56299) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (56309) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), get packet TID: 0x000b:0x000c, 0x3ffcad5c.
D (56319) mb_port.tcp.master: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), processing time[us] = 377764.
D (56329) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (56329) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 33 33
D (56339) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (56339) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (56349) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (56349) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (56359) mbm_error_cb_request_success: 03 00 02 00 01
D (56359) mb_object.master: 0x3ffc957c, transaction processing time(us) = 462625
D (56379) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (56379) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK
I (56399) TEST_COMMON: 0x3ffc957c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (56399) TEST_COMMON: CHAR #2, value is ok.
D (56399) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (56419) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (56419) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 03 00 03 00 01
D (56419) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 12
D (56429) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (56439) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (56449) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (56449) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (56459) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002d, 12 (bytes), errno 119
D (56469) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01
D (56479) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (56479) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (56739) mb_driver: 0x3ffcaec8, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT
D (56739) event: running post loop:0x3ffcaec8:256 with handler 0x4016e9e0 and context 0x3ffccce4 on loop 0x3ffcb238
D (56739) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_timeout: fd: -1
D (56799) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (56799) port.utils: Enqueue data, length=11, TID=0x2d
D (56799) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (56809) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (56809) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (56819) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (56829) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (56839) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x002d received.
D (56839) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (56849) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002d:0x002e, 0x3ffcad5c.
D (56859) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 384638.
D (56869) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (56869) mbm_tcp#0x3ffc957c:MB_RECV: 03 02 44 44
D (56879) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (56879) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (56889) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (56889) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (56899) mbm_error_cb_request_success: 03 00 03 00 01
D (56899) mb_object.master: 0x3ffc957c, transaction processing time(us) = 472176
D (56909) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (56929) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (56929) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK
I (56939) TEST_COMMON: 0x3ffc957c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (56939) TEST_COMMON: CHAR #3, value is ok.
D (56949) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (56959) mb_port.event: mbm_tcp#0x3ffc957c, mb take resource, (300 ticks).
D (56969) mbm_tcp#0x3ffc957c:MB_TRANSMIT: 10 00 04 00 01 02 00 0a
D (56969) mb_port.tcp.master: 0x3ffcaec8,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffcab87, len: 15
D (56979) mb_driver: 0x3ffcaec8, fd event get: 0x10:0, |MB_EVENT_SEND_DATA
D (56979) event: running post loop:0x3ffcaec8:16 with handler 0x4016eff0 and context 0x3ffccc54 on loop 0x3ffcb238
D (56989) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_send_data: fd: 0
D (56999) mb_port.tcp.master: 0x3ffcaec8, get info: 0, sock_id: 54, queue_state: 0, state: 6.
D (57009) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002e, 15 (bytes), errno 119
D (57019) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a
D (57019) mb_port.timer: mbm_tcp#0x3ffc957c, respond enable timeout (3000).
D (57029) mb_object.master: 0x3ffc957c:EV_FRAME_SENT
D (57139) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (57259) mb_driver: 0x3ffcaec8, socket event active: 40000000000000
D (57259) port.utils: Enqueue data, length=12, TID=0x2e
D (57259) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), frame received.
D (57269) mb_driver: 0x3ffcaec8, fd event get: 0x20:0, |MB_EVENT_RECV_DATA
D (57269) event: running post loop:0x3ffcaec8:32 with handler 0x4016f208 and context 0x3ffccc84 on loop 0x3ffcb238
D (57279) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_recv_data: fd: 0
D (57289) mb_port.tcp.master: 0x3ffcaec8, slave #0(54) [192.168.32.50], receive data ready.
D (57299) mb_port.tcp.master: 0x3ffcaec8, packet TID: 0x002e received.
D (57299) mb_object.master: 0x3ffc957c:EV_FRAME_RECEIVED
D (57309) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002e:0x002f, 0x3ffcad5c.
D (57319) mb_port.tcp.master: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), processing time[us] = 301975.
D (57329) mb_object.master: 0x3ffc957c, frame data received successfully, (0).
D (57339) mbm_tcp#0x3ffc957c:MB_RECV: 10 00 04 00 01
D (57339) mb_object.master: 0x3ffc957c:EV_EXECUTE
D (57349) mb_object.master: 0x3ffc957c, set event EV_ERROR_OK
D (57349) mb_object.master: 0x3ffc957c:EV_ERROR_PROCESS
D (57359) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (57359) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a
D (57369) mb_object.master: 0x3ffc957c, transaction processing time(us) = 386341
D (57389) mb_port.event: mbm_tcp#0x3ffc957c, mb_port_event_wait_req_finish: returned event = 0x400
D (57389) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK
I (57389) TEST_COMMON: 0x3ffc957c, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (57459) TEST_COMMON: Destroy master, inst: 0x3ffc957c.
D (57459) mb_driver: 0x3ffcaec8, socket event active: 80000000000000
D (57469) port.utils: Socket (#55)(192.168.32.50), fail to read modbus header. ret=0
E (57469) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), critical error=-6, errno=128.
D (57479) mb_driver: 0x3ffcaec8, socket event active: c0000000000000
D (57489) port.utils: Socket (#54)(192.168.32.50), fail to read modbus header. ret=0
E (57489) mb_driver: 0x3ffcaec8, node #0, socket(#54)(192.168.32.50), critical error=-6, errno=128.
E (57499) port.utils: socket(#55)(192.168.32.50) connection closed, ret=-1, errno=128.
E (57509) mb_driver: 0x3ffcaec8, node #1, socket(#55)(192.168.32.50), connection lost.
D (57519) mb_driver: 0x3ffcaec8, fd event get: 0x40:1, |MB_EVENT_ERROR
D (57529) event: running post loop:0x3ffcaec8:64 with handler 0x4016ed70 and context 0x3ffccc24 on loop 0x3ffcb238
D (57539) mbc_tcp.master: mb stack is active, try to disable.
D (57539) event: running post loop:0x3ffcaec8:128 with handler 0x4016f328 and context 0x3ffcccb4 on loop 0x3ffcb238
D (57549) mb_port.tcp.master: loop:0x3ffcaec8  mbm_on_close, fd: -1
D (57569) mb_port.timer: mbm_tcp#0x3ffc957c, timer stop, returns 259.
D (57569) mb_port.tcp.master: 0x3ffcaec8, event handler 0x3ffcccf4, unregister.
D (57569) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x1, unregister.
D (57589) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x2, unregister.
D (57589) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x4, unregister.
D (57589) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x8, unregister.
D (57609) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x40, unregister.
D (57609) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x10, unregister.
D (57609) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x20, unregister.
D (57619) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x80, unregister.
D (57629) mb_driver: 0x3ffcaec8, event handler 0x3ffcccf4, event 0x100, unregister.
D (57609) mb_driver: 0x3ffcaec8, fd event get: 0x80:-1, |MB_EVENT_CLOSE
D (57639) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (57649) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc8524
D (57659) esp_netif_lwip: check: local, if=0x3ffbd810 fn=0x40106cf8
D (57659) esp_netif_lwip: check: local, if=0x3ffbd810 fn=0x40106cf8
D (57669) esp_netif_lwip: check: local, if=0x3ffbd810 fn=0x40106cf8
D (57669) esp_netif_lwip: check: local, if=0x3ffbd810 fn=0x40106cf8
D (57679) mb_driver: 0x3ffcaec8, driver unregister.
D (57899) mb_driver: 0x3ffcaec8, driver check shutdown (18)...
D (57899) mb_driver: 0x3ffcaec8, driver task shutdown...
D (57899) mb_driver: delete loop inst: loop:0x3ffcaec8.
D (57899) event: deleting loop 0x3ffcb238
D (57899) mb_driver: delete event loop: 0x3ffcb238.
D (57909) mb_driver: close eventfd (4).
D (57909) mb_driver: 0x3ffcaec8, close node instance #0(mb_slave_tcp_01).
D (57919) port.utils: wrong socket info or disconnected socket: 0, skip.
D (57929) mb_driver: 0x3ffcaec8, close node instance #1(mb_slave_tcp_c8).
D (57929) port.utils: wrong socket info or disconnected socket: 1, skip.
I (57949) TEST_COMMON: Test task 0x3ffce1b4, done successfully.
D (57959) TEST_COMMON: Delete task 0x3ffce1b4
MALLOC_CAP_8BIT usage: Free memory delta: 4352 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 4352 Leak threshold: -64 
D (57959) wifi:Start wifi disconnect
I (57969) wifi:state: run -> init (0x0)
D (57969) wifi:stop beacon and connect timers
D (57969) wifi:connect status 5 -> 6
D (57979) wifi:stop beacon/connect timer, send disassoc(8)
D (57979) wifi:sta leave
I (57979) wifi:pm stop, total sleep time: 33477564 us / 53276993 us

D (57989) wifi:stop CSA timer
I (57989) wifi:<ba-del>idx:0, tid:0
D (57999) wifi:connect status 6 -> 0
D (57999) wifi:remove fe:9f:c2:31:10:0a from rc list
I (57999) wifi:new:<11,0>, old:<11,0>, ap:<255,255>, sta:<11,0>, prof:1, snd_ch_cfg:0x0
D (58009) wifi:filter: set rx policy=8
D (58019) wifi:Send disconnect event, reason=8, AP number=0
D (58019) wifi:filter: set rx policy=8
D (58019) event: running post WIFI_EVENT:5 with handler 0x40109c70 and context 0x3ffc87a0 on loop 0x3ffbdba0
D (58029) esp_netif_handlers: esp_netif action disconnected with netif0x3ffc8524 from event_id=5
D (58039) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x401079dc
D (58049) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffc8524
D (58049) wifi:connect status 0 -> 0
D (58049) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffc85a0
D (58059) wifi:D (58059) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc8524
Start wifi disconnectD (58069) esp_netif_lwip: if0x3ffc8524 start ip lost tmr: already started

D (58079) wifi:connect status 0 -> 0D (58079) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc8524

D (58089) esp_netif_lwip: if0x3ffc8524 start ip lost tmr: already started
D (58089) wifi:D (58099) esp_netif_lwip: check: local, if=0x3ffc8524 fn=0x40107df4
filter: set rx policy=8D (58099) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc8524

D (58109) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (58109) wifi:filter: set rx policy=2
D (58119) wifi:clear scan ap list
D (58129) wifi:clear blacklist
D (58129) wifi:clear rc list
D (58129) wifi:NAN WiFi stop
D (58129) event: running post WIFI_EVENT:3 with handler 0x40109b24 and context 0x3ffc8740 on loop 0x3ffbdba0
D (58139) esp_netif_handlers: esp_netif action stopped with netif0x3ffc8524 from event_id=3
D (58149) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x401078fc
D (58159) esp_netif_lwip: call api in lwip: ret=0x5002, give sem
I (58159) wifi:flush txq
I (58159) wifi:stop sw txq
I (58169) wifi:lmac stop hw txq
D (58169) wifi:filter: set rx policy=0
I (58179) wifi:Deinit lldesc rx mblock:10
D (58179) nvs: nvs_close 2
D (58189) nvs: nvs_close 1
D (58189) wifi_init_default: Clearing wifi default handlers
D (58189) esp_netif_lwip: check: remote, if=0x3ffc8524 fn=0x401074c4
D (58189) esp_netif_objects: esp_netif_remove_from_list_unsafe netif successfully removed (total netifs: 0)
D (58199) esp_netif_lwip: check: local, if=0x3ffc8524 fn=0x40107df4
D (58209) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc8524
D (58219) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (58219) event: deleting loop 0x3ffbdba0
I (58219) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 3522ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
