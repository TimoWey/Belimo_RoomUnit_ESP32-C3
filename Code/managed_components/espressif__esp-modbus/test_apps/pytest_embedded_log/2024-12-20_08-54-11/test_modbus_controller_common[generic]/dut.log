Serial port /dev/ttyUSB3
Connecting.....
Connecting...................
esptool.py v4.8.1
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:4f:b0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x00049fff...
SHA digest in image updated
Compressed 26752 bytes to 16370...
Writing at 0x00001000... (100 %)Wrote 26752 bytes (16370 compressed) at 0x00001000 in 0.8 seconds (effective 284.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 307.9 kbit/s)...
Hash of data verified.
Compressed 234352 bytes to 123755...
Writing at 0x00010000... (12 %)Writing at 0x0001ca00... (25 %)Writing at 0x0002466d... (37 %)Writing at 0x0002ab1e... (50 %)Writing at 0x0003097f... (62 %)Writing at 0x00039a86... (75 %)Writing at 0x0003f93b... (87 %)Writing at 0x00045c9d... (100 %)Wrote 234352 bytes (123755 compressed) at 0x00010000 in 2.7 seconds (effective 701.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2-210-g12938e511e 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:31:39[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (41) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (86) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=0d80ch ( 55308) map[0m
[0;32mI (125) esp_image: segment 1: paddr=0001d834 vaddr=3ffb0000 size=024ech (  9452) load[0m
[0;32mI (128) esp_image: segment 2: paddr=0001fd28 vaddr=40080000 size=002f0h (   752) load[0m
[0;32mI (131) esp_image: segment 3: paddr=00020020 vaddr=400d0020 size=1bc4ch (113740) map[0m
[0;32mI (178) esp_image: segment 4: paddr=0003bc74 vaddr=400802f0 size=0d6d8h ( 55000) load[0m
[0;32mI (207) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (207) boot: Disabling RNG early entropy source...[0m
[0;32mI (219) cpu_start: Multicore app[0m
[0;32mI (227) cpu_start: Pro cpu start user code[0m
[0;32mI (227) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (228) app_init: Application information:[0m
[0;32mI (230) app_init: Project name:     test_mb_controller_common_unit[0m
[0;32mI (237) app_init: App version:      v2.0.0-beta-11-g3117942[0m
[0;32mI (244) app_init: Compile time:     Dec 20 2024 08:31:31[0m
[0;32mI (250) app_init: ELF file SHA256:  285114cde...[0m
[0;32mI (255) app_init: ESP-IDF:          v5.3.2-210-g12938e511e[0m
[0;32mI (261) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (266) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (271) efuse_init: Chip rev:         v3.0[0m
[0;32mI (276) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (283) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (289) heap_init: At 3FFBB260 len 00024DA0 (147 KiB): DRAM[0m
[0;32mI (295) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (301) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (308) heap_init: At 4008D9C8 len 00012638 (73 KiB): IRAM[0m
[0;32mI (316) spi_flash: detected chip: generic[0m
[0;32mI (319) spi_flash: flash io: dio[0m
[0;33mW (323) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (336) main_task: Started on CPU0[0m
[0;32mI (346) main_task: Calling app_main()[0m
Unity test run 1 of 1
TEST(unit_test_controller, test_setup_destroy_master_serial)[0;32mI (346) MODBUS_CONTROLLER_COMMON_TEST: TEST: Verify master create-destroy sequence.[0m
[0;33mW (356) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (2356) mb_object.master.stub: Delete fake mb_base object.[0m
[0;31mE (2356) mbc_serial.master: mbc_serial_master_create(702): mb object create returns (0x2).[0m
[0;31mE (2356) MB_CONTROLLER_MASTER: mbc_master_set_descriptor(179): Master interface is not correctly initialized.[0m
[0;31mE (2366) MB_CONTROLLER_MASTER: mbc_master_delete(21): Master interface is not correctly initialized.[0m
[0;32mI (2376) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
MALLOC_CAP_8BIT usage: Free memory delta: 0 Leak threshold: -128 
MALLOC_CAP_32BIT usage: Free memory delta: 0 Leak threshold: -128 
 PASS
TEST(unit_test_controller, test_setup_destroy_slave_serial)[0;32mI (2396) MODBUS_CONTROLLER_COMMON_TEST: TEST: Verify slave create-destroy sequence.[0m
[0;33mW (2406) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (2436) mb_object.master.stub: Delete fake mb_base object.[0m
[0;31mE (2436) mbc_serial.slave: mbc_serial_slave_create(264): mbs create returns (0x6).[0m
[0;31mE (2436) MB_CONTROLLER_SLAVE: mbc_slave_delete(91): Slave interface is not correctly initialized.[0m
[0;32mI (2446) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
MALLOC_CAP_8BIT usage: Free memory delta: 0 Leak threshold: -128 
MALLOC_CAP_32BIT usage: Free memory delta: 0 Leak threshold: -128 
 PASS
TEST(unit_test_controller, test_master_send_request_serial)[0;33mW (2466) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (2476) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (2476) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (2486) MODBUS_CONTROLLER_COMMON_TEST: Test CID #0, MB_input_reg-0, Data[0m
[0;33mW (2496) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (2506) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (4506) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (4506) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (4506) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (4506) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (4516) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (4526) MODBUS_CONTROLLER_COMMON_TEST: Test CID #0, MB_input_reg-0, Data[0m
[0;31mE (4526) MB_CONTROLLER_MASTER: mbc_master_get_parameter(128): Master get parameter failure, error=(0x107) (ESP_ERR_TIMEOUT).[0m
[0;33mW (4536) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (4546) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (6556) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (6556) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (6556) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (6556) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (6566) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (6576) MODBUS_CONTROLLER_COMMON_TEST: Test CID #1, MB_hold_reg-0, Data[0m
[0;33mW (6576) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (8586) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (8586) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (8586) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (8586) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (8596) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (8606) MODBUS_CONTROLLER_COMMON_TEST: Test CID #1, MB_hold_reg-0, Data[0m
[0;31mE (8606) MB_CONTROLLER_MASTER: mbc_master_get_parameter(128): Master get parameter failure, error=(0x107) (ESP_ERR_TIMEOUT).[0m
[0;33mW (8616) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (8626) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (10636) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (10636) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (10636) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (10636) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (10646) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (10656) MODBUS_CONTROLLER_COMMON_TEST: Test CID #3, MB_coil_reg-0, bit[0m
[0;33mW (10666) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (10666) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (12676) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (12676) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (12676) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (12676) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (12686) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (12696) MODBUS_CONTROLLER_COMMON_TEST: Test CID #3, MB_coil_reg-0, bit[0m
[0;33mW (12706) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;31mE (12706) MB_CONTROLLER_MASTER: mbc_master_get_parameter(128): Master get parameter failure, error=(0x107) (ESP_ERR_TIMEOUT).[0m
[0;33mW (12716) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (12726) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (14736) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (14736) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (14736) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (14736) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (14746) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (14756) MODBUS_CONTROLLER_COMMON_TEST: Test CID #4, MB_discr_reg-0, bit[0m
[0;33mW (14766) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (14766) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (16776) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (16776) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
[0;33mW (16776) mb_object.master.stub: Create fake mb_base object.[0m
[0;33mW (16776) mb_object.master.stub: Enable fake mb_base object.[0m
[0;33mW (16786) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;32mI (16796) MODBUS_CONTROLLER_COMMON_TEST: Test CID #4, MB_discr_reg-0, bit[0m
[0;33mW (16806) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;31mE (16806) MB_CONTROLLER_MASTER: mbc_master_get_parameter(128): Master get parameter failure, error=(0x107) (ESP_ERR_TIMEOUT).[0m
[0;33mW (16816) mb_object.master.stub: Poll function called of fake mb_base object.[0m
[0;33mW (16826) mb_object.master.stub: Disable fake mb_base object.[0m
[0;33mW (18836) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (18836) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
MALLOC_CAP_8BIT usage: Free memory delta: 0 Leak threshold: -128 
MALLOC_CAP_32BIT usage: Free memory delta: 0 Leak threshold: -128 
 PASS
TEST(unit_test_controller, test_setup_destroy_master_tcp)[0;32mI (18846) MODBUS_CONTROLLER_COMMON_TEST: TEST: Verify master create-destroy sequence TCP.[0m
[0;33mW (18856) mb_object.master.stub: Create fake mb_base object.[0m
[0;32mI (18866) mbc_tcp.master: mb found config for cid #0, uid=1.[0m
[0;32mI (18876) mbc_tcp.master: mb found config for cid #1, uid=1.[0m
[0;32mI (18876) mbc_tcp.master: mb found config for cid #2, uid=1.[0m
[0;32mI (18886) mbc_tcp.master: mb found config for cid #3, uid=1.[0m
[0;32mI (18896) mbc_tcp.master: mb found config for cid #4, uid=1.[0m
[0;32mI (18896) mbc_tcp.master: mb found config for cid #5, uid=1.[0m
[0;33mW (18906) mb_object.master.stub: Delete fake mb_base object.[0m
[0;32mI (18906) MODBUS_CONTROLLER_COMMON_TEST: Test passed successfully.[0m
MALLOC_CAP_8BIT usage: Free memory delta: 0 Leak threshold: -128 
MALLOC_CAP_32BIT usage: Free memory delta: 0 Leak threshold: -128 
 PASS

-----------------------
4 Tests 0 Failures 0 Ignored 
OK

Tests finished, rc=0
[0;32mI (18946) main_task: Returned from app_main()[0m
