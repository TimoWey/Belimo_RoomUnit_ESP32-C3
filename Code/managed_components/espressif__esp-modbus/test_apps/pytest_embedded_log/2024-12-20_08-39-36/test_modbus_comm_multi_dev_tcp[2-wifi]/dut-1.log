Serial port /dev/ttyUSB2
Connecting..................
/dev/ttyUSB2 failed to connect: Failed to connect to ESP32: No serial data received.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html
Serial port /dev/ttyUSB1
Connecting....
Connecting....
esptool.py v4.7.0
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x000effff...
Compressed 26480 bytes to 16510...
Writing at 0x00001000... (50 %)Writing at 0x000076bf... (100 %)Wrote 26480 bytes (16510 compressed) at 0x00001000 in 0.8 seconds (effective 270.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 256.3 kbit/s)...
Hash of data verified.
Compressed 915920 bytes to 570345...
Writing at 0x00010000... (2 %)Writing at 0x0001e5f5... (5 %)Writing at 0x00028fff... (8 %)Writing at 0x00034df8... (11 %)Writing at 0x0003c20f... (14 %)Writing at 0x00041f51... (17 %)Writing at 0x00047ad5... (20 %)Writing at 0x0004d95f... (22 %)Writing at 0x00053946... (25 %)Writing at 0x000592ca... (28 %)Writing at 0x0005eb32... (31 %)Writing at 0x000643cb... (34 %)Writing at 0x00069a87... (37 %)Writing at 0x0006f4ba... (40 %)Writing at 0x00074cf5... (42 %)Writing at 0x0007a6bf... (45 %)Writing at 0x00080664... (48 %)Writing at 0x00086461... (51 %)Writing at 0x0008c7d9... (54 %)Writing at 0x00091b24... (57 %)Writing at 0x00096edc... (60 %)Writing at 0x0009c2b6... (62 %)Writing at 0x000a16c3... (65 %)Writing at 0x000a6dc5... (68 %)Writing at 0x000ac5ea... (71 %)Writing at 0x000b2213... (74 %)Writing at 0x000b79f8... (77 %)Writing at 0x000bd57e... (80 %)Writing at 0x000c30d0... (82 %)Writing at 0x000c968e... (85 %)Writing at 0x000d1c13... (88 %)Writing at 0x000d9ec3... (91 %)Writing at 0x000dfe21... (94 %)Writing at 0x000e5bad... (97 %)Writing at 0x000eb1b8... (100 %)Wrote 915920 bytes (570345 compressed) at 0x00010000 in 9.6 seconds (effective 759.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7000
load:0x40078000,len:15520
load:0x40080400,len:3864
entry 0x40080650
[0;32mI (27) boot: ESP-IDF v5.0.7-528-g57ef4c4965 2nd stage bootloader[0m
[0;32mI (27) boot: compile time 08:21:05[0m
[0;32mI (27) boot: Multicore bootloader[0m
[0;32mI (32) boot: chip revision: v3.0[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (40) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (45) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (49) boot: Enabling RNG early entropy source...[0m
[0;32mI (55) boot: Partition Table:[0m
[0;32mI (58) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (66) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (73) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (81) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (88) boot: End of partition table[0m
[0;32mI (92) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=23a74h (146036) map[0m
[0;32mI (154) esp_image: segment 1: paddr=00033a9c vaddr=3ffb0000 size=03ac0h ( 15040) load[0m
[0;32mI (160) esp_image: segment 2: paddr=00037564 vaddr=40080000 size=08ab4h ( 35508) load[0m
[0;32mI (175) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=a194ch (661836) map[0m
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7000
load:0x40078000,len:15520
load:0x40080400,len:3864
entry 0x40080650
[0;32mI (27) boot: ESP-IDF v5.0.7-528-g57ef4c4965 2nd stage bootloader[0m
[0;32mI (27) boot: compile time 08:21:05[0m
[0;32mI (27) boot: Multicore bootloader[0m
[0;32mI (32) boot: chip revision: v3.0[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (40) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (45) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (49) boot: Enabling RNG early entropy source...[0m
[0;32mI (55) boot: Partition Table:[0m
[0;32mI (58) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (66) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (73) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (81) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (88) boot: End of partition table[0m
[0;32mI (92) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=23a74h (146036) map[0m
[0;32mI (154) esp_image: segment 1: paddr=00033a9c vaddr=3ffb0000 size=03ac0h ( 15040) load[0m
[0;32mI (160) esp_image: segment 2: paddr=00037564 vaddr=40080000 size=08ab4h ( 35508) load[0m
[0;32mI (175) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=a194ch (661836) map[0m
[0;32mI (414) esp_image: segment 4: paddr=000e1974 vaddr=40088ab4 size=0e030h ( 57392) load[0m
[0;32mI (449) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (449) boot: Disabling RNG early entropy source...[0m
[0;32mI (461) cpu_start: Multicore app[0m
[0;32mI (461) cpu_start: Pro cpu up.[0m
[0;32mI (461) cpu_start: Starting app cpu, entry point is 0x40081394[0m
[0;32mI (0) cpu_start: App cpu up.[0m
D (471) clk: RTC_SLOW_CLK calibration value: 3127590[0m
[0;32mI (484) cpu_start: Pro cpu start user code[0m
[0;32mI (484) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (484) cpu_start: Application information:[0m
[0;32mI (489) cpu_start: Project name:     test_modbus_comm_multi_dev[0m
[0;32mI (495) cpu_start: App version:      v2.0.0-beta-11-g3117942[0m
[0;32mI (502) cpu_start: Compile time:     Dec 20 2024 08:20:53[0m
[0;32mI (508) cpu_start: ELF file SHA256:  63afed41495d2d50...[0m
[0;32mI (514) cpu_start: ESP-IDF:          v5.0.7-528-g57ef4c4965[0m
[0;32mI (520) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (525) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (530) cpu_start: Chip rev:         v3.0[0m
D (534) memory_layout: Checking 9 reserved memory ranges:[0m
D (540) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000[0m
D (546) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0[0m
D (553) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb8570[0m
D (559) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440[0m
D (565) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350[0m
D (572) memory_layout: Reserved memory range 0x40070000 - 0x40078000[0m
D (578) memory_layout: Reserved memory range 0x40078000 - 0x40080000[0m
D (585) memory_layout: Reserved memory range 0x40080000 - 0x40096ae4[0m
D (591) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000[0m
D (598) memory_layout: Building list of available memory regions:[0m
D (604) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000[0m
D (610) memory_layout: Available memory region 0x3ffb8570 - 0x3ffc0000[0m
D (617) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000[0m
D (623) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000[0m
D (630) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000[0m
D (637) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000[0m
D (643) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000[0m
D (650) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000[0m
D (656) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000[0m
D (663) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000[0m
D (670) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000[0m
D (676) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000[0m
D (683) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000[0m
D (689) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000[0m
D (696) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000[0m
D (703) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000[0m
D (709) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000[0m
D (716) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000[0m
D (722) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20[0m
D (729) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000[0m
D (736) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000[0m
D (742) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000[0m
D (749) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000[0m
D (755) memory_layout: Available memory region 0x3fffc000 - 0x40000000[0m
D (762) memory_layout: Available memory region 0x40096ae4 - 0x40098000[0m
D (769) memory_layout: Available memory region 0x40098000 - 0x4009a000[0m
D (775) memory_layout: Available memory region 0x4009a000 - 0x4009c000[0m
D (782) memory_layout: Available memory region 0x4009c000 - 0x4009e000[0m
D (788) memory_layout: Available memory region 0x4009e000 - 0x400a0000[0m
[0;32mI (795) heap_init: Initializing. RAM available for dynamic allocation:[0m
D (802) heap_init: New heap initialised at 0x3ffae6e0[0m
[0;32mI (807) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
D (813) heap_init: New heap initialised at 0x3ffb8570[0m
[0;32mI (819) heap_init: At 3FFB8570 len 00027A90 (158 KiB): DRAM[0m
[0;32mI (825) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (831) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
D (838) heap_init: New heap initialised at 0x40096ae4[0m
[0;32mI (843) heap_init: At 40096AE4 len 0000951C (37 KiB): IRAM[0m
D (849) intr_alloc: Connected src 46 to int 2 (cpu 0)[0m
D (855) spi_flash: trying chip: issi[0m
D (858) spi_flash: trying chip: gd[0m
D (861) spi_flash: trying chip: mxic[0m
D (865) spi_flash: trying chip: winbond[0m
D (869) spi_flash: trying chip: generic[0m
[0;32mI (873) spi_flash: detected chip: generic[0m
[0;32mI (877) spi_flash: flash io: dio[0m
D (881) cpu_start: calling init function: 0x4014cf68[0m
D (886) cpu_start: calling init function: 0x4014ca84[0m
D (891) cpu_start: calling init function: 0x4010cc68[0m
D (896) cpu_start: calling init function: 0x400ed28c[0m
D (902) cpu_start: calling init function: 0x400d8e74[0m
D (906) cpu_start: calling init function: 0x400d3a38[0m
D (911) cpu_start: calling init function: 0x400d2bd0[0m
D (916) cpu_start: calling init function: 0x400d64dc on core: 0[0m
D (923) intr_alloc: Connected src 17 to int 3 (cpu 0)[0m
D (927) cpu_start: calling init function: 0x401688e4 on core: 0[0m
D (934) intr_alloc: Connected src 24 to int 9 (cpu 0)[0m
[0;32mI (939) app_start: Starting scheduler on CPU0[0m
[0;32D (944) intr_alloc: Connected src 25 to int 2 (cpu 1)[0m
[0;32mI (944) app_start: Starting scheduler on CPU1[0m
mI (944) main_task: Started on CPU0[0m
D (964) heap_init: New heap initialised at 0x3ffe0440[0m
D (964) heap_init: New heap initialised at 0x3ffe4350[0m
D (964) intr_alloc: Connected src 16 to int 12 (cpu 0)[0m
[0;32mI (964) main_task: Calling app_main()[0m


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Modbus RS485 multi-device test cases/nD (1134) esp_netif_lwip: LwIP stack has been initialized[0m
D (1134) esp_netif_lwip: esp-netif has been successfully initialized[0m
D (1134) event: running task for loop 0x3ffbd04c[0m
D (1144) event: created task for loop 0x3ffbd04c[0m
D (1144) event: created event loop 0x3ffbd04c[0m
D (1154) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1154) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1164) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
[0;32mI (1164) example_connect: Start example_connect.[0m
D (1174) nvs: nvs_open_from_partition misc 1[0m
I (1184) wifi:wifi driver task: 3ffc1664, prio:23, stack:6656, core=0
[0;32mI (1184) system_api: Base MAC address is not set[0m
[0;32mI (1184) system_api: read default base MAC address from EFUSE[0m
D (1194) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1204) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1204) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1214) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1224) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1234) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1234) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1244) nvs: nvs_open_from_partition nvs.net80211 1[0m
D (1254) nvs: nvs_get opmode 1[0m
D (1254) nvs: nvs_get_str_or_blob sta.ssid[0m
D (1254) nvs: nvs_get sta.authmode 1[0m
D (1264) nvs: nvs_get_str_or_blob sta.pswd[0m
D (1264) nvs: nvs_get_str_or_blob sta.pmk[0m
D (1274) nvs: nvs_get sta.chan 1[0m
D (1274) nvs: nvs_get auto.conn 1[0m
D (1274) nvs: nvs_get bssid.set 1[0m
D (1274) nvs: nvs_get_str_or_blob sta.bssid[0m
D (1284) nvs: nvs_get sta.lis_intval 2[0m
D (1284) nvs: nvs_get sta.phym 1[0m
D (1294) nvs: nvs_get sta.phybw 1[0m
D (1294) nvs: nvs_get_str_or_blob sta.apsw[0m
D (1294) nvs: nvs_get_str_or_blob sta.apinfo[0m
D (1304) nvs: nvs_get sta.scan_method 1[0m
D (1304) nvs: nvs_get sta.sort_method 1[0m
D (1314) nvs: nvs_get sta.minrssi 1[0m
D (1314) nvs: nvs_get sta.minauth 1[0m
D (1314) nvs: nvs_get sta.pmf_e 1[0m
D (1324) nvs: nvs_get sta.pmf_r 1[0m
D (1324) nvs: nvs_get sta.btm_e 1[0m
D (1324) nvs: nvs_get sta.rrm_e 1[0m
D (1334) nvs: nvs_get sta.mbo_e 1[0m
D (1334) nvs: nvs_get_str_or_blob ap.ssid[0m
D (1334) nvs: nvs_get_str_or_blob ap.passwd[0m
D (1344) nvs: nvs_get_str_or_blob ap.pmk[0m
D (1344) nvs: nvs_get ap.chan 1[0m
D (1354) nvs: nvs_get ap.authmode 1[0m
D (1354) nvs: nvs_get ap.hidden 1[0m
D (1354) nvs: nvs_get ap.max.conn 1[0m
D (1364) nvs: nvs_get bcn.interval 2[0m
D (1364) nvs: nvs_get ap.phym 1[0m
D (1364) nvs: nvs_get ap.phybw 1[0m
D (1374) nvs: nvs_get ap.sndchan 1[0m
D (1374) nvs: nvs_get ap.pmf_e 1[0m
D (1374) nvs: nvs_get ap.pmf_r 1[0m
D (1384) nvs: nvs_get ap.p_cipher 1[0m
D (1384) nvs: nvs_get lorate 1[0m
D (1384) nvs: nvs_get_str_or_blob country[0m
D (1394) nvs: nvs_get ap.ftm_r 1[0m
D (1394) nvs: nvs_get sta.ft 1[0m
D (1394) nvs: nvs_get sta.owe 1[0m
D (1404) nvs: nvs_get sta.trans_d 1[0m
D (1404) nvs: nvs_get sta.sae_h2e 1[0m
D (1404) nvs: nvs_get sta.bss_retry 1[0m
D (1414) nvs: nvs_get_str_or_blob sta.owe_data[0m
D (1414) nvs: nvs_get_str_or_blob ap.pmk_info[0m
D (1424) nvs: nvs_get sta.pwr_reset 1[0m
D (1424) nvs: nvs_set ap.sndchan 1 1[0m
I (1424) wifi:wifi firmware version: 0eafacb
I (1434) wifi:wifi certification version: v7.0
I (1434) wifi:config NVS flash: enabled
I (1444) wifi:config nano formating: disabled
I (1444) wifi:Init data frame dynamic rx buffer num: 32
I (1444) wifi:Init static rx mgmt buffer num: 5
I (1454) wifi:Init management short buffer num: 32
I (1454) wifi:Init dynamic tx buffer num: 32
I (1464) wifi:Init static rx buffer size: 1600
I (1464) wifi:Init static rx buffer num: 10
I (1474) wifi:Init dynamic rx buffer num: 32
[0;32mI (1474) wifi_init: rx ba win: 6[0m
[0;32mI (1474) wifi_init: tcpip mbox: 32[0m
[0;32mI (1484) wifi_init: udp mbox: 6[0m
[0;32mI (1484) wifi_init: tcp mbox: 6[0m
[0;32mI (1484) wifi_init: tcp tx win: 5760[0m
[0;32mI (1494) wifi_init: tcp rx win: 5760[0m
[0;32mI (1494) wifi_init: tcp mss: 1440[0m
[0;32mI (1504) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (1504) wifi_init: WiFi RX IRAM OP enabled[0m
D (1514) esp_netif_lwip: check: remote, if=0x0 fn=0x401095f8
[0m
D (1514) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1524) esp_netif_objects: esp_netif_add_to_list 0x3ffc716c[0m
D (1524) esp_netif_objects: esp_netif_add_to_list netif added successfully (total netifs: 1)[0m
[0;32mI (1534) phy_init: phy_version 4830,54550f7,Jun 20 2024,14:22:08[0m
D (1544) phy_init: loading PHY init data from application binary[0m
D (1554) nvs: nvs_open_from_partition phy 0[0m
D (1554) nvs: nvs_get cal_version 4[0m
D (1554) phy_init: load_cal_data_from_nvs_handle: expected calibration data format 4830, found 4840[0m
D (1564) nvs: nvs_close 3[0m
[0;33mW (1574) phy_init: failed to load RF calibration data (0xffffffff), falling back to full calibration[0m
D (1584) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1584) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1594) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1604) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1604) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1614) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1624) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
[0;33mW (1694) phy_init: saving new calibration data because of checksum failure, mode(2)[0m
D (1694) nvs: nvs_open_from_partition phy 1[0m
D (1694) nvs: nvs_set_blob cal_data 1904[0m
D (1714) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1714) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1714) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1724) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1734) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1734) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1744) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1754) nvs: nvs_set_blob cal_mac 6[0m
D (1754) nvs: nvs_set cal_version 4 4830[0m
D (1774) nvs: nvs_close 4[0m
D (1774) wifi:filter: set rx policy=0
I (1774) wifi:mode : sta (10:97:bd:d5:51:f0)
I (1774) wifi:enable tsf
D (1774) wifi:filter: set rx policy=1
D (1774) wifi:connect status 0 -> 0
D (1784) event: running post WIFI_EVENT:2 with handler 0x400e9190 and context 0x3ffbe114 on loop 0x3ffbd04c[0m
D (1794) event: running post WIFI_EVENT:2 with handler 0x4010cedc and context 0x3ffc7340 on loop 0x3ffbd04c[0m
D (1794) wifi_init_default: wifi_start esp-netif:0x3ffc716c event-id2[0m
D (1804) wifi_init_default: WIFI mac address: 10 97 bd d5 51 f0[0m
D (1814) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x40109608
[0m
D (1814) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1824) esp_netif_handlers: esp_netif action has started with netif0x3ffc716c from event_id=2[0m
D (1834) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x40109e8c
[0m
D (1834) esp_netif_lwip: esp_netif_start_api 0x3ffc716c[0m
D (1844) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffc716c[0m
D (1854) esp_netif_lwip: check: local, if=0x3ffc716c fn=0x4010ab90
[0m
D (1854) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc716c[0m
D (1864) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (1874) example_connect: Connecting to EspressifTest...[0m
D (1874) wifi:clear blacklist
W (1874) wifi:Password length matches WPA2 standards, authmode threshold changes from OPEN to WPA2
D (1884) wifi:Start wifi connect
D (1894) wifi:connect status 0 -> 0
D (1894) wifi:connect chan=0
D (1894) wifi:first chan=1
D (1894) wifi:connect status 0 -> 1
D (1904) wifi:filter: set rx policy=3
D (1904) wifi:clear scan ap list
D (1904) wifi:start scan: type=0x50f, priority=2, cb=0x40134034, arg=0x0, ss_state=0x1, time=137412, index=0
D (1914) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
[0;32mI (1924) example_connect: Waiting for IP(s)[0m
D (2044) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2044) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (2164) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2164) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (2284) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2284) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (2404) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2414) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (2534) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2534) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (2654) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2654) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (2774) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2774) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (2894) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (2894) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (3014) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (3014) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (3134) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x3
D (3134) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (3144) wifi:rsn valid: gcipher=3 ucipher=3 akm=5

D (3144) wifi:profile match: ss_state=0x7
D (3174) wifi:rsn valid: gcipher=3 ucipher=3 akm=5

D (3174) wifi:set max rate: from <rate=130, phy=3, sig=0> to <rate=144, phy=3 sig=0>
D (3174) wifi:sig_b=1, sig_g=0, sig_n=0, max_b=22, max_g=108, max_n=144
D (3184) wifi:profile match: ss_state=0x7
D (3264) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x7
D (3264) wifi:perform scan: ss_state=0xd, chan<12,0>, dur<360,360>
D (3624) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x7
D (3624) wifi:perform scan: ss_state=0xd, chan<13,0>, dur<360,360>
D (3984) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x7
D (3984) wifi:perform scan: ss_state=0xd, chan<14,0>, dur<360,360>
D (4344) wifi:scan end: arg=0x3ffb5d8a, status=0, ss_state=0x7
D (4344) wifi:filter: set rx policy=4
D (4344) wifi:first chan=1
D (4344) wifi:handoff_cb: status=0
D (4344) wifi:ap found, mac=fe:9f:c2:31:10:0a
D (4594) wifi:going for connection with bssid=fe:9f:c2:31:10:0a
D (4594) wifi:new_bss=0x3ffb7138, cur_bss=0x0, new_chan=<11,0>, cur_chan=1
D (4594) wifi:filter: set rx policy=5
I (4594) wifi:new:<11,0>, old:<1,0>, ap:<255,255>, sta:<11,0>, prof:1
D (4604) wifi:connect_op: status=0, auth=5, cipher=3 
D (4614) wifi:auth mode is not none
D (4614) wifi:connect_bss: auth=1, reconnect=0
I (4614) wifi:state: init -> auth (b0)
D (4624) wifi:start 1s AUTH timer
D (4624) wifi:clear scan ap list
D (4634) wifi:recv auth: seq=2, status=0, algo=0
I (4634) wifi:state: auth -> assoc (0)
D (4634) wifi:restart connect 1s timer for assoc
D (4644) wifi:recv assoc: type=0x10
D (4644) wifi:filter: set rx policy=6
I (4644) wifi:state: assoc -> run (10)
D (4644) wifi:start 10s connect timer for 4 way handshake
I (4674) wifi:connected with EspressifTest, aid = 2, channel 11, BW20, bssid = fe:9f:c2:31:10:0a
I (4684) wifi:security: WPA2-PSK, phy: bgn, rssi: -39
D (4684) wifi:remove all except fe:9f:c2:31:10:0a from rc list
D (4684) wifi:clear blacklist
D (4694) wifi:filter: set rx policy=7
I (4694) wifi:pm start, type: 1

I (4694) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us
D (4704) wifi:Send sta connected event
D (4704) wifi:connect status 1 -> 5
D (4714) wifi:obss scan is disabled
D (4714) wifi:start obss scan: obss scan is stopped
I (4724) wifi:AP's beacon interval = 102400 us, DTIM period = 1
D (4724) event: running post WIFI_EVENT:4 with handler 0x400e9190 and context 0x3ffbe114 on loop 0x3ffbd04c[0m
D (4734) event: running post WIFI_EVENT:4 with handler 0x4010cf0c and context 0x3ffc73a0 on loop 0x3ffbd04c[0m
D (4744) esp_netif_handlers: esp_netif action connected with netif0x3ffc716c from event_id=4[0m
D (4754) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x4010a0d8
[0m
D (4764) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffc716c[0m
D (4764) esp_netif_lwip: check: local, if=0x3ffc716c fn=0x4010ab90
[0m
D (4774) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc716c[0m
D (4774) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (4784) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x40109cc4
[0m
D (4794) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffc716c[0m
D (4794) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc716c[0m
D (4804) esp_netif_lwip: if0x3ffc716c start ip lost tmr: no need start because netif=0x3ffc71e4 interval=120 ip=0[0m
D (4814) esp_netif_lwip: starting dhcp client[0m
D (4824) wifi:D (4824) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
eb is dhcp or dns sport = 68, dport = 67
D (4834) event: running post WIFI_EVENT:4 with handler 0x40168b5c and context 0x3ffc7c90 on loop 0x3ffbd04c[0m
I (4834) wifi:<ba-add>idx:0 (ifx:0, fe:9f:c2:31:10:0a), tid:0, ssn:0, winSize:64
D (5324) wifi:eb is dhcp or dns sport = 68, dport = 67
D (5944) wifi:eb is dhcp or dns sport = 68, dport = 67
D (6824) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffc71e4[0m
D (6824) esp_netif_lwip: if0x3ffc716c ip changed=1[0m
D (6824) event: running post IP_EVENT:0 with handler 0x400e9190 and context 0x3ffbe148 on loop 0x3ffbd04c[0m
D (6834) event: running post IP_EVENT:0 with handler 0x4010cd38 and context 0x3ffc7460 on loop 0x3ffbd04c[0m
D (6844) wifi_init_default: Got IP wifi default handler entered[0m
D (6844) esp_netif_handlers: esp_netif action got_ip with netif0x3ffc716c from event_id=0[0m
[0;32mI (6854) esp_netif_handlers: example_netif_sta ip: 192.168.32.52, mask: 255.255.254.0, gw: 192.168.32.3[0m
D (6864) event: running post IP_EVENT:0 with handler 0x400ebbe0 and context 0x3ffc7c70 on loop 0x3ffbd04c[0m
[0;32mI (6874) example_connect: Got IPv4 event: Interface "example_netif_sta" address: 192.168.32.52[0m
D (6884) esp_netif_lwip: check: remote, if=0x400ebae0 fn=0x40169548
[0m
[0;32mI (6894) example_common: Connected to example_netif_sta[0m
D (6894) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
[0;32mI (6904) example_common: - IPv4 address: 192.168.32.52,[0m
D (6914) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (6914) esp_netif_lwip: check: remote, if=0x3ffba490 fn=0x4010954c
[0m
D (6924) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (6924) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).[0m
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.
D (7384) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m

D (7784) event: created event loop 0x3ffc859c[0m
D (7784) mb_driver: Start of driver task.[0m
D (7784) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (7994) mb_driver: 0x3ffc8504, driver check shutdown (8)...[0m
D (7994) mb_driver: 0x3ffc8504, driver task is suspended...[0m
D (7994) mb_driver: 0x3ffc8504, stop tcp driver task.[0m
D (7994) mb_driver: 0x3ffc8504, event 0x1, register.[0m
D (8004) mb_driver: 0x3ffc8504, event 0x2, register.[0m
D (8004) mb_driver: 0x3ffc8504, event 0x4, register.[0m
D (8014) mb_driver: 0x3ffc8504, event 0x8, register.[0m
D (8014) mb_driver: 0x3ffc8504, event 0x40, register.[0m
D (8024) mb_driver: 0x3ffc8504, event 0x10, register.[0m
D (8024) mb_driver: 0x3ffc8504, event 0x20, register.[0m
D (8034) mb_driver: 0x3ffc8504, event 0x80, register.[0m
D (8034) mb_driver: 0x3ffc8504, event 0x100, register.[0m
D (8044) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4[0m
D (8054) mb_driver: 0x3ffc8504, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502[0m
D (8064) mb_port.tcp.master: 0x3ffc8504, open slave: 0, mb_slave_tcp_01:1502[0m
D (8064) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4[0m
D (8074) mb_driver: 0x3ffc8504, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502[0m
D (8084) mb_port.tcp.master: 0x3ffc8504, open slave: 1, mb_slave_tcp_c8:502[0m
[0;32mI (8094) port.utils: hostname set to: [mb_master_tcp_d551f0][0m
D (8104) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
[0;32mI (8104) port.utils: mdns delegate hostname set to: [mb_master_tcp_00][0m
[0;32mI (8114) port.utils: IP: 192.168.32.52[0m
[0;32mI (8114) port.utils: GW: 192.168.32.3[0m
[0;32mI (8124) port.utils: NETMASK: 255.255.254.0[0m
D (8124) mb_port.tcp.master: created object @0x3ffc9870[0m
D (8134) mb_port.timer: initialized mb_port.timer object @0x3ffcc0dc[0m
D (8134) mb_port.event: initialized object @0x3ffcc1d0[0m
D (8144) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffc9614[0m
D (8154) mb_object.master: created object mbm_tcp#0x3ffc80dc[0m
[0;32mI (8154) mbc_tcp.master: mb found config for cid #0, uid=1.[0m
[0;32mI (8164) mbc_tcp.master: mb found config for cid #1, uid=1.[0m
[0;32mI (8174) mbc_tcp.master: mb found config for cid #2, uid=200.[0m
[0;32mI (8174) mbc_tcp.master: mb found config for cid #3, uid=1.[0m
[0;32mI (8184) mbc_tcp.master: mb found config for cid #4, uid=1.[0m
[0;32mI (8184) TEST_COMMON: 0x3ffc80dc, modbus master stack is initialized[0m
D (8194) mb_driver: 0x3ffc8504, resume tcp driver task.[0m
D (8204) mb_driver: 0x3ffc8504, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT[0m
D (8214) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (8224) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (8224) event: running post loop:0x3ffc8504:2 with handler 0x4016c3e8 and context 0x3ffca484 on loop 0x3ffc859c[0m
D (8234) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_open: fd: 0[0m
D (8244) event: running post loop:0x3ffc8504:2 with handler 0x4016c3e8 and context 0x3ffca484 on loop 0x3ffc859c[0m
D (8254) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_open: fd: 1[0m
D (8254) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (8264) event: running post loop:0x3ffc8504:4 with handler 0x4016c93c and context 0x3ffca4b4 on loop 0x3ffc859c[0m
D (8274) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_resolve: fd: -1[0m
D (8284) mb_driver: 0x3ffc8504, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (8284) event: running post loop:0x3ffc8504:4 with handler 0x4016c93c and context 0x3ffca4b4 on loop 0x3ffc859c[0m
D (8294) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_resolve: fd: 0[0m
D (8314) mb_port.timer: mbm_tcp#0x3ffc80dc, start timer (1000000).[0m
D (8314) wifi:eb is dhcp or dns sport = 54746, dport = 53
D (8324) port.utils: Incorrect host IP: mb_slave_tcp_01[0m
D (8324) port.utils: Query A: mb_slave_tcp_01.local[0m
D (8364) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (8664) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (8964) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (9264) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (9314) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (9314) mb_port.timer: timer mode: (0) triggered[0m
D (10364) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (10744) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (11464) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (11864) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
[0;31mE (12464) port.utils: Host: mb_slave_tcp_01, was not resolved![0m
D (12474) mb_driver: 0x3ffc8504, fd event get: 0x08:-1, |MB_EVENT_CONNECT[0m
D (12474) event: running post loop:0x3ffc8504:4 with handler 0x4016c93c and context 0x3ffca4b4 on loop 0x3ffc859c[0m
D (12484) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_resolve: fd: 1[0m
D (12484) wifi:eb is dhcp or dns sport = 46990, dport = 53
D (12504) port.utils: Incorrect host IP: mb_slave_tcp_c8[0m
D (12504) port.utils: Query A: mb_slave_tcp_c8.local[0m
D (12794) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (12794) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (12794) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (12804) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.32.50[0m
[0;32mI (12804) mb_port.tcp.master: 0x3ffc8504, slave: 1, resolved with IP:192.168.32.50.[0m
D (12814) mb_driver: 0x3ffc8504, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (12824) event: running post loop:0x3ffc8504:4 with handler 0x4016c93c and context 0x3ffca4b4 on loop 0x3ffc859c[0m
D (12834) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_resolve: fd: 0[0m
D (12844) wifi:eb is dhcp or dns sport = 42657, dport = 53
D (12844) port.utils: Incorrect host IP: mb_slave_tcp_01[0m
D (12844) port.utils: Query A: mb_slave_tcp_01.local[0m
D (12904) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13204) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13214) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13214) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13304) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13304) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13314) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13504) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13824) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13824) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13824) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (13834) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (14034) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (14224) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (14324) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (14324) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.32.50[0m
[0;32mI (14324) mb_port.tcp.master: 0x3ffc8504, slave: 0, resolved with IP:192.168.32.50.[0m
D (14334) mb_driver: 0x3ffc8504, fd event get: 0x08:0, |MB_EVENT_CONNECT[0m
D (14344) event: running post loop:0x3ffc8504:8 with handler 0x4016cb40 and context 0x3ffca4e4 on loop 0x3ffc859c[0m
D (14354) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_connect: fd: 1[0m
D (14354) mb_port.tcp.master: 0x3ffc8504, connection phase, slave: #1(-1) [192.168.32.50].[0m
D (14414) mb_port.tcp.master: Opened/connected: 2, 0.[0m
D (14414) mb_driver: 0x3ffc8504, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (14414) event: running post loop:0x3ffc8504:8 with handler 0x4016cb40 and context 0x3ffca4e4 on loop 0x3ffc859c[0m
D (14424) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_connect: fd: 0[0m
D (14424) mb_port.tcp.master: 0x3ffc8504, connection phase, slave: #0(-1) [192.168.32.50].[0m
D (14484) mb_port.tcp.master: Opened/connected: 2, 0.[0m
D (14484) mb_driver: 0x3ffc8504, fd event get: 0x08:0, |MB_EVENT_CONNECT[0m
D (14484) event: running post loop:0x3ffc8504:8 with handler 0x4016cb40 and context 0x3ffca4e4 on loop 0x3ffc859c[0m
D (14494) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_connect: fd: 1[0m
D (14494) mb_port.tcp.master: 0x3ffc8504, connection phase, slave: #1(54) [192.168.32.50].[0m
D (14554) mb_port.tcp.master: Opened/connected: 2, 0.[0m
D (14554) mb_driver: 0x3ffc8504, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (14554) event: running post loop:0x3ffc8504:8 with handler 0x4016cb40 and context 0x3ffca4e4 on loop 0x3ffc859c[0m
D (14564) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_connect: fd: 0[0m
D (14564) mb_port.tcp.master: 0x3ffc8504, connection phase, slave: #0(55) [192.168.32.50].[0m
D (14624) mb_port.tcp.master: Opened/connected: 2, 0.[0m
D (14624) mb_driver: 0x3ffc8504, fd event get: 0x08:0, |MB_EVENT_CONNECT[0m
D (14624) event: running post loop:0x3ffc8504:8 with handler 0x4016cb40 and context 0x3ffca4e4 on loop 0x3ffc859c[0m
D (14634) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_connect: fd: 1[0m
D (14634) mb_port.tcp.master: 0x3ffc8504, connection phase, slave: #1(54) [192.168.32.50].[0m
D (14654) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
[0;32mI (14664) mb_port.tcp.master: 0x3ffc8504, slave: #1, sock:54, IP: 192.168.32.50, is connected.[0m
D (14664) mb_port.tcp.master: Opened/connected: 2, 1.[0m
D (14664) event: running post loop:0x3ffc8504:8 with handler 0x4016cb40 and context 0x3ffca4e4 on loop 0x3ffc859c[0m
D (14674) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_connect: fd: 0[0m
D (14684) mb_port.tcp.master: 0x3ffc8504, connection phase, slave: #0(55) [192.168.32.50].[0m
[0;32mI (14704) mb_port.tcp.master: 0x3ffc8504, slave: #0, sock:55, IP: 192.168.32.50, is connected.[0m
D (14704) mb_port.tcp.master: Opened/connected: 2, 2.[0m
[0;32mI (14704) mbc_tcp.master: mb controller connection done.[0m
[0;32mI (14714) mb_port.tcp.master: 0x3ffc8504, Connected: 2, 2, start polling.[0m
[0;32mI (14724) TEST_COMMON: 0x3ffc80dc, modbus master start...[0m
D (14724) mb_object.master: 0x3ffc80dc:EV_READY[0m
Send signal: [Master_started]!
D (14734) TEST_COMMON: Notify task start 0x3ffce1b4[0m
D (14744) TEST_COMMON: Task: 0x3ffce1b4, get notify value = 1[0m
D (14744) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (14754) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (14764) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (14764) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (14774) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (14784) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (14784) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (14794) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (14804) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (14814) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (14824) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (14834) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (14834) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (15044) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (15044) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (15044) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (15204) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (15214) port.utils: Enqueue data, length=12, TID=0x0[0m
D (15214) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (15214) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (15224) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (15234) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (15244) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (15244) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0000 received.[0m
D (15254) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (15264) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0000:0x0001, 0x3ffc98d0.[0m
D (15274) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 446619.[0m
D (15284) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (15294) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 00 00 01 [0m
D (15294) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (15294) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (15304) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (15314) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (15314) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (15324) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 540653[0m
D (15344) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (15344) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (15354) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
D (15364) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (15364) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (15374) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (15374) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (15384) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (15394) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (15404) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (15414) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (15424) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0001, 15 (bytes), errno 119[0m
D (15434) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (15434) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (15444) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (15694) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (15694) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (15694) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (15774) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (15774) port.utils: Enqueue data, length=12, TID=0x1[0m
D (15774) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (15784) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (15784) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (15794) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (15804) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (15814) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0001 received.[0m
D (15814) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (15824) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0001:0x0002, 0x3ffc98d0.[0m
D (15834) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 402247.[0m
D (15844) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (15854) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 01 00 01 [0m
D (15854) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (15864) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (15864) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (15874) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (15884) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (15884) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 494234[0m
D (15904) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (15904) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (15924) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
D (15924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (15924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (15934) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (15944) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 15[0m
D (15954) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (15954) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (15964) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (15974) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (15984) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (15994) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (16004) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (16004) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (16014) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (16214) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (16214) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (16214) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (16284) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (16284) port.utils: Enqueue data, length=12, TID=0x0[0m
D (16284) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (16294) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (16294) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (16304) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (16314) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (16324) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0000 received.[0m
D (16324) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (16334) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0000:0x0001, 0x3ffc98d0.[0m
D (16344) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 350548.[0m
D (16354) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (16364) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 02 00 01 [0m
D (16364) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (16374) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (16374) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (16384) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (16394) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (16394) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 444043[0m
D (16414) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (16414) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (16434) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
D (16434) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (16444) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (16444) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (16454) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (16464) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (16464) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (16474) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (16484) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (16494) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (16504) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (16514) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (16514) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (16724) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (16724) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (16724) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (16784) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (16784) port.utils: Enqueue data, length=12, TID=0x2[0m
D (16784) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (16794) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (16794) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (16804) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (16814) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (16824) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0002 received.[0m
D (16824) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (16834) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0002:0x0003, 0x3ffc98d0.[0m
D (16844) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 339422.[0m
D (16854) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (16864) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 03 00 01 [0m
D (16864) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (16874) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (16874) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (16884) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (16894) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (16894) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 432893[0m
D (16904) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (16914) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (16914) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (16934) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
D (16934) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (16954) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (16954) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 00 00 01 [0m
D (16954) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (16964) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (16974) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (16984) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (16994) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (17004) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (17014) SENT: 00 03 00 00 00 06 01 03 00 00 00 01 [0m
D (17014) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (17024) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (17084) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (17194) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (17194) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (17194) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (17224) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (17274) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (17274) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (17274) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (17404) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (17404) port.utils: Enqueue data, length=11, TID=0x3[0m
D (17404) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (17414) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (17424) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (17434) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (17444) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (17444) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0003 received.[0m
D (17454) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (17464) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0003:0x0004, 0x3ffc98d0.[0m
D (17474) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 460633.[0m
D (17484) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (17484) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 11 11 [0m
D (17494) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (17494) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (17504) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (17504) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (17514) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (17524) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 553094[0m
D (17534) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (17534) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (17554) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (17554) TEST_COMMON: CHAR #0, value is ok.[0m
D (17564) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (17564) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (17584) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 01 00 01 [0m
D (17584) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (17594) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (17594) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (17604) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (17614) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (17624) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0004, 12 (bytes), errno 119[0m
D (17634) SENT: 00 04 00 00 00 06 01 03 00 01 00 01 [0m
D (17644) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (17644) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (17854) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (17854) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (17854) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (17924) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (17924) port.utils: Enqueue data, length=11, TID=0x4[0m
D (17924) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (17934) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (17934) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (17944) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (17954) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (17964) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0004 received.[0m
D (17964) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (17974) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0004:0x0005, 0x3ffc98d0.[0m
D (17984) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 349488.[0m
D (17994) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (18004) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 22 22 [0m
D (18004) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (18014) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (18014) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (18024) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (18034) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (18034) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 438043[0m
D (18054) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (18054) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (18064) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (18084) TEST_COMMON: CHAR #1, value is ok.[0m
D (18084) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (18084) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (18094) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 02 00 01 [0m
D (18094) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 12[0m
D (18104) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (18114) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (18124) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (18124) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (18144) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0001, 12 (bytes), errno 119[0m
D (18144) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01 [0m
D (18154) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (18164) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (18414) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (18414) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (18414) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (18474) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (18474) port.utils: Enqueue data, length=11, TID=0x1[0m
D (18474) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (18484) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (18484) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (18494) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (18504) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (18514) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0001 received.[0m
D (18514) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (18524) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0001:0x0002, 0x3ffc98d0.[0m
D (18534) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 386025.[0m
D (18544) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (18554) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 33 33 [0m
D (18554) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (18564) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (18564) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (18574) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (18574) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (18584) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 478383[0m
D (18604) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (18604) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (18624) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (18624) TEST_COMMON: CHAR #2, value is ok.[0m
D (18634) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (18644) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (18644) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 03 00 01 [0m
D (18654) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (18664) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (18664) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (18674) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (18684) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (18694) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (18704) SENT: 00 05 00 00 00 06 01 03 00 03 00 01 [0m
D (18704) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (18714) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (18944) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (18944) port.utils: Enqueue data, length=11, TID=0x5[0m
D (18944) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (18954) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (18954) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (18964) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (18974) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (18984) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0005 received.[0m
D (18994) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (18994) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0005:0x0006, 0x3ffc98d0.[0m
D (19004) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 303375.[0m
D (19014) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (19024) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 44 44 [0m
D (19034) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (19034) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (19044) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (19044) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (19054) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (19054) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 396529[0m
D (19064) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (19084) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (19084) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (19104) TEST_COMMON: CHAR #3, value is ok.[0m
D (19104) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (19104) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (19124) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 00 [0m
D (19124) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (19134) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (19134) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (19144) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (19154) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (19164) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (19174) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00 [0m
D (19184) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (19184) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (19194) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (19394) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (19394) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (19394) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (19454) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (19454) port.utils: Enqueue data, length=12, TID=0x6[0m
D (19454) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (19464) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (19474) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (19484) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (19484) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (19494) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0006 received.[0m
D (19504) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (19514) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0006:0x0007, 0x3ffc98d0.[0m
D (19524) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 345537.[0m
D (19534) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (19534) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (19544) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (19544) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (19554) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (19554) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (19564) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 [0m
D (19574) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 430021[0m
D (19584) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (19584) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (19604) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.[0m
D (19654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (19654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (19654) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (19664) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (19674) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (19674) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (19684) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (19694) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (19714) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0007, 15 (bytes), errno 119[0m
D (19714) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (19724) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (19734) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (19934) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (19934) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (19934) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (19994) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (19994) port.utils: Enqueue data, length=12, TID=0x7[0m
D (19994) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (20004) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (20004) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (20014) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (20024) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (20034) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0007 received.[0m
D (20034) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (20044) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0007:0x0008, 0x3ffc98d0.[0m
D (20054) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 339147.[0m
D (20064) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (20074) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 00 00 01 [0m
D (20074) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (20084) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (20084) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (20094) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (20104) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (20104) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 431560[0m
D (20114) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (20134) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (20134) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (20134) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (20154) TEST_COMMON: CHAR #0, value is ok.[0m
D (20154) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (20164) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (20164) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (20174) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (20184) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (20184) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (20194) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (20204) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (20224) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (20224) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (20234) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (20234) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (20444) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (20444) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (20444) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (20504) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (20504) port.utils: Enqueue data, length=12, TID=0x8[0m
D (20504) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (20514) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (20514) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (20524) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (20534) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (20544) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0008 received.[0m
D (20544) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (20554) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0008:0x0009, 0x3ffc98d0.[0m
D (20564) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 338423.[0m
D (20574) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (20584) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 01 00 01 [0m
D (20584) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (20594) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (20594) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (20604) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (20614) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (20614) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 429621[0m
D (20634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (20634) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (20654) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (20654) TEST_COMMON: CHAR #1, value is ok.[0m
D (20654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (20664) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (20674) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (20674) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 15[0m
D (20684) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (20694) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (20704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (20704) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (20724) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (20734) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (20734) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (20744) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (20994) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (20994) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (21004) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (21054) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (21054) port.utils: Enqueue data, length=12, TID=0x2[0m
D (21054) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (21064) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (21064) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (21074) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (21084) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (21094) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0002 received.[0m
D (21094) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (21104) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0002:0x0003, 0x3ffc98d0.[0m
D (21114) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 384357.[0m
D (21124) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (21134) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 02 00 01 [0m
D (21134) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (21144) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (21144) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (21154) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (21154) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (21164) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 471454[0m
D (21174) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (21184) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (21184) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (21204) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (21204) TEST_COMMON: CHAR #2, value is ok.[0m
D (21224) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (21224) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (21224) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (21234) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (21244) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (21244) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (21254) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (21264) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (21274) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0009, 15 (bytes), errno 119[0m
D (21284) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (21294) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (21294) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (21494) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (21504) port.utils: Enqueue data, length=12, TID=0x9[0m
D (21504) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (21514) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (21514) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (21524) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (21534) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (21544) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0009 received.[0m
D (21544) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (21554) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0009:0x000a, 0x3ffc98d0.[0m
D (21564) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 277464.[0m
D (21574) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (21584) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 03 00 01 [0m
D (21584) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (21594) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (21594) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (21604) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (21604) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (21614) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 371636[0m
D (21634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (21634) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (21654) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (21654) TEST_COMMON: CHAR #3, value is ok.[0m
D (21654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (21664) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (21684) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 01 [0m
D (21684) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (21684) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (21694) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (21704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (21714) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (21724) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (21734) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01 [0m
D (21734) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (21744) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (21914) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (21914) port.utils: Enqueue data, length=12, TID=0xa[0m
D (21914) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (21924) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (21924) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (21934) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (21944) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (21954) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000a received.[0m
D (21964) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (21964) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x000a:0x000b, 0x3ffc98d0.[0m
D (21974) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 245977.[0m
D (21984) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (21994) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (22004) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (22004) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (22014) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (22014) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (22024) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 [0m
D (22024) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 331229[0m
D (22044) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (22044) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (22064) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.[0m
D (22114) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (22114) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (22114) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 00 00 01 [0m
D (22124) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (22134) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (22134) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (22144) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (22154) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (22164) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (22174) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01 [0m
D (22184) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (22184) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (22394) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (22394) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (22394) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (22464) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (22464) port.utils: Enqueue data, length=11, TID=0xb[0m
D (22464) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (22474) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (22484) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (22494) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (22494) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (22504) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000b received.[0m
D (22514) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (22514) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x000b:0x000c, 0x3ffc98d0.[0m
D (22524) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 353298.[0m
D (22534) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (22544) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 11 11 [0m
D (22554) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (22554) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (22564) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (22564) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (22574) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (22574) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 445652[0m
D (22594) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (22594) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (22614) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (22624) TEST_COMMON: CHAR #0, value is ok.[0m
D (22634) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (22634) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (22654) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 01 00 01 [0m
D (22654) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (22654) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (22664) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (22674) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (22684) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (22694) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x000c, 12 (bytes), errno 119[0m
D (22704) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01 [0m
D (22704) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (22714) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (22954) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (22954) port.utils: Enqueue data, length=11, TID=0xc[0m
D (22954) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (22964) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (22964) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (22974) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (22984) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (22994) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000c received.[0m
D (23004) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (23004) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x000c:0x000d, 0x3ffc98d0.[0m
D (23014) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 315627.[0m
D (23024) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (23034) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 22 22 [0m
D (23034) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (23044) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (23044) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (23054) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (23064) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (23064) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 399729[0m
D (23084) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (23084) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (23104) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (23104) TEST_COMMON: CHAR #1, value is ok.[0m
D (23104) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (23124) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (23124) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 02 00 01 [0m
D (23124) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 12[0m
D (23134) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (23144) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (23154) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (23164) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (23174) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (23184) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01 [0m
D (23184) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (23194) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (23444) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (23444) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (23444) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (23504) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (23504) port.utils: Enqueue data, length=11, TID=0x3[0m
D (23504) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (23514) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (23514) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (23524) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (23534) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (23544) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0003 received.[0m
D (23544) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (23554) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0003:0x0004, 0x3ffc98d0.[0m
D (23564) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 383721.[0m
D (23574) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (23584) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 33 33 [0m
D (23584) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (23594) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (23594) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (23604) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (23604) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (23614) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 476127[0m
D (23634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (23634) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (23644) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (23654) TEST_COMMON: CHAR #2, value is ok.[0m
D (23654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (23664) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (23684) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 03 00 01 [0m
D (23684) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (23684) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (23694) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (23704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (23714) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (23724) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x000d, 12 (bytes), errno 119[0m
D (23734) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01 [0m
D (23734) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (23744) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (23994) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (23994) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (23994) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (24064) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (24064) port.utils: Enqueue data, length=11, TID=0xd[0m
D (24064) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (24074) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (24084) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (24094) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (24094) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (24104) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000d received.[0m
D (24114) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (24114) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x000d:0x000e, 0x3ffc98d0.[0m
D (24124) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 398527.[0m
D (24134) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (24144) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 44 44 [0m
D (24154) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (24154) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (24164) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (24164) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (24174) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (24174) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 482324[0m
D (24184) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (24204) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (24204) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (24224) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (24224) TEST_COMMON: CHAR #3, value is ok.[0m
D (24224) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (24234) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (24254) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 02 [0m
D (24254) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (24254) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (24264) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (24274) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (24284) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (24294) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x000e, 15 (bytes), errno 119[0m
D (24304) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02 [0m
D (24304) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (24314) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (24564) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (24564) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (24564) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (24674) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (24674) port.utils: Enqueue data, length=12, TID=0xe[0m
D (24674) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (24684) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (24684) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (24704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (24704) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (24714) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000e received.[0m
D (24724) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (24724) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x000e:0x000f, 0x3ffc98d0.[0m
D (24734) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 437156.[0m
D (24744) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (24754) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (24764) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (24764) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (24774) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (24774) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (24784) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 [0m
D (24784) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 522584[0m
D (24804) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (24804) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (24824) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.[0m
D (24874) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (24874) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (24874) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (24884) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (24894) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (24894) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (24904) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (24914) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (24924) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x000f, 15 (bytes), errno 119[0m
D (24934) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (24944) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (24944) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (25154) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (25154) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (25154) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (25214) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (25214) port.utils: Enqueue data, length=12, TID=0xf[0m
D (25214) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (25224) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (25224) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (25234) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (25244) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (25254) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000f received.[0m
D (25254) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (25264) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x000f:0x0010, 0x3ffc98d0.[0m
D (25274) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 339241.[0m
D (25284) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (25294) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 00 00 01 [0m
D (25294) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (25304) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (25304) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (25314) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (25324) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (25324) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 432649[0m
D (25344) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (25344) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (25364) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (25364) TEST_COMMON: CHAR #0, value is ok.[0m
D (25364) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (25374) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (25384) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (25384) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (25394) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (25404) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (25414) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (25414) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (25434) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0010, 15 (bytes), errno 119[0m
D (25444) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (25444) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (25454) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (25704) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (25704) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (25704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (25764) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (25764) port.utils: Enqueue data, length=12, TID=0x10[0m
D (25764) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (25774) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (25774) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (25784) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (25794) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (25804) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0010 received.[0m
D (25804) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (25814) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0010:0x0011, 0x3ffc98d0.[0m
D (25824) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 384277.[0m
D (25834) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (25844) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 01 00 01 [0m
D (25844) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (25854) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (25854) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (25864) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (25864) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (25874) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 475443[0m
D (25884) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (25894) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
D (25894) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
[0;32mI (25914) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
D (25914) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
[0;32mI (25934) TEST_COMMON: CHAR #1, value is ok.[0m
D (25934) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (25934) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (25954) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (25954) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 15[0m
D (25954) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (25964) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (25974) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (25984) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (25994) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0004, 15 (bytes), errno 119[0m
D (26004) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (26004) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (26014) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (26264) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (26264) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (26264) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (26414) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (26414) port.utils: Enqueue data, length=12, TID=0x4[0m
D (26414) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (26424) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (26434) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (26444) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (26444) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (26454) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0004 received.[0m
D (26464) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (26464) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0004:0x0005, 0x3ffc98d0.[0m
D (26474) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 475508.[0m
D (26484) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (26494) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 02 00 01 [0m
D (26504) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (26504) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (26514) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (26514) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (26524) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (26524) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 561413[0m
D (26544) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (26544) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (26564) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (26564) TEST_COMMON: CHAR #2, value is ok.[0m
D (26574) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (26574) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (26594) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (26594) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (26594) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (26604) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (26614) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (26624) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (26634) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0011, 15 (bytes), errno 119[0m
D (26644) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (26644) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (26654) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (26904) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (26904) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (26904) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (26964) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (26964) port.utils: Enqueue data, length=12, TID=0x11[0m
D (26964) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (26974) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (26974) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (26984) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (26994) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (27004) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0011 received.[0m
D (27004) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (27014) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0011:0x0012, 0x3ffc98d0.[0m
D (27024) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 381984.[0m
D (27034) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (27044) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 03 00 01 [0m
D (27044) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (27054) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (27054) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (27064) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (27074) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (27074) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 468461[0m
D (27094) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (27094) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (27114) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (27114) TEST_COMMON: CHAR #3, value is ok.[0m
D (27124) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (27124) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (27134) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 03 [0m
D (27134) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (27144) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (27154) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (27164) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (27174) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (27184) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0012, 15 (bytes), errno 119[0m
D (27194) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03 [0m
D (27194) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (27204) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (27454) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (27454) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (27454) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (27514) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (27514) port.utils: Enqueue data, length=12, TID=0x12[0m
D (27514) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (27524) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (27524) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (27534) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (27544) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (27554) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0012 received.[0m
D (27554) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (27564) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0012:0x0013, 0x3ffc98d0.[0m
D (27574) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 384143.[0m
D (27584) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (27594) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (27594) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (27604) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (27604) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (27614) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (27614) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 [0m
D (27624) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 473440[0m
D (27634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (27644) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (27664) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.[0m
D (27724) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (27724) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (27724) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 00 00 01 [0m
D (27724) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (27734) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (27744) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (27754) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (27764) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (27774) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0013, 12 (bytes), errno 119[0m
D (27784) SENT: 00 13 00 00 00 06 01 03 00 00 00 01 [0m
D (27784) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (27794) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (27954) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (27954) port.utils: Enqueue data, length=11, TID=0x13[0m
D (27954) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (27964) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (27974) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (27984) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (27984) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (27994) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0013 received.[0m
D (28004) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (28004) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0013:0x0014, 0x3ffc98d0.[0m
D (28014) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 235963.[0m
D (28024) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (28034) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 11 11 [0m
D (28044) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (28044) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (28054) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (28054) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (28064) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (28064) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 328344[0m
D (28084) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (28084) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (28104) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (28104) TEST_COMMON: CHAR #0, value is ok.[0m
D (28104) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (28124) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (28124) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 01 00 01 [0m
D (28124) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (28134) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (28144) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (28154) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (28164) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (28174) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0014, 12 (bytes), errno 119[0m
D (28184) SENT: 00 14 00 00 00 06 01 03 00 01 00 01 [0m
D (28184) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (28194) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (28444) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (28444) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (28444) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (28504) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (28504) port.utils: Enqueue data, length=11, TID=0x14[0m
D (28504) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (28514) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (28514) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (28524) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (28534) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (28544) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0014 received.[0m
D (28554) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (28554) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0014:0x0015, 0x3ffc98d0.[0m
D (28564) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 382268.[0m
D (28574) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (28584) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 22 22 [0m
D (28584) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (28594) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (28594) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (28604) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (28614) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (28614) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 474614[0m
D (28634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (28634) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (28644) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (28654) TEST_COMMON: CHAR #1, value is ok.[0m
D (28654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (28664) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (28674) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 02 00 01 [0m
D (28674) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 12[0m
D (28684) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (28694) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (28704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (28704) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (28724) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (28724) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01 [0m
D (28734) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (28744) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (28754) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (28754) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (28994) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (28994) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (28994) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (29054) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (29054) port.utils: Enqueue data, length=11, TID=0x5[0m
D (29054) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (29064) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (29064) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (29074) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (29084) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (29094) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0005 received.[0m
D (29094) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (29104) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0005:0x0006, 0x3ffc98d0.[0m
D (29114) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 385373.[0m
D (29124) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (29134) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 33 33 [0m
D (29134) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (29144) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (29144) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (29154) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (29154) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (29164) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 477754[0m
D (29184) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (29184) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (29184) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (29204) TEST_COMMON: CHAR #2, value is ok.[0m
D (29204) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (29214) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (29224) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 03 00 01 [0m
D (29224) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (29234) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (29244) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (29254) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (29254) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (29274) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0015, 12 (bytes), errno 119[0m
D (29284) SENT: 00 15 00 00 00 06 01 03 00 03 00 01 [0m
D (29284) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (29294) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (29294) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (29304) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (29544) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (29544) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (29544) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (29694) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (29694) port.utils: Enqueue data, length=11, TID=0x15[0m
D (29694) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (29704) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (29704) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (29714) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (29724) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (29734) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0015 received.[0m
D (29734) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (29744) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0015:0x0016, 0x3ffc98d0.[0m
D (29754) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 474779.[0m
D (29764) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (29774) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 44 44 [0m
D (29774) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (29784) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (29784) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (29794) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (29794) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (29804) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 567877[0m
D (29814) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (29824) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (29824) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (29844) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (29844) TEST_COMMON: CHAR #3, value is ok.[0m
D (29864) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (29864) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (29864) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 04 [0m
D (29874) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (29884) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (29884) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (29894) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (29904) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (29914) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0016, 15 (bytes), errno 119[0m
D (29924) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04 [0m
D (29934) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (29934) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (29994) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (30144) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (30144) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (30144) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (30204) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (30204) port.utils: Enqueue data, length=12, TID=0x16[0m
D (30204) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (30214) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (30214) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (30224) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (30234) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (30244) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0016 received.[0m
D (30254) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (30254) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0016:0x0017, 0x3ffc98d0.[0m
D (30264) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 341133.[0m
D (30274) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (30284) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (30294) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (30294) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (30304) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (30304) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (30314) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 [0m
D (30314) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 435310[0m
D (30334) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (30334) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (30354) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.[0m
D (30414) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (30414) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (30414) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (30424) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (30434) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (30434) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (30444) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (30454) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (30464) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0017, 15 (bytes), errno 119[0m
D (30474) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (30484) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (30484) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (30694) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (30694) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (30694) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (30754) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (30754) port.utils: Enqueue data, length=12, TID=0x17[0m
D (30754) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (30764) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (30764) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (30774) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (30784) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (30794) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0017 received.[0m
D (30794) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (30804) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0017:0x0018, 0x3ffc98d0.[0m
D (30814) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 341161.[0m
D (30824) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (30834) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 00 00 01 [0m
D (30834) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (30844) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (30844) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (30854) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (30864) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (30864) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 434533[0m
D (30884) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (30884) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (30904) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (30904) TEST_COMMON: CHAR #0, value is ok.[0m
D (30924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (30924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (30924) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (30924) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (30944) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (30944) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (30954) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (30964) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (30974) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0018, 15 (bytes), errno 119[0m
D (30984) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (30984) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (30994) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (31014) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (31224) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (31224) port.utils: Enqueue data, length=12, TID=0x18[0m
D (31224) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (31234) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (31244) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (31254) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (31264) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (31264) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0018 received.[0m
D (31274) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (31284) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0018:0x0019, 0x3ffc98d0.[0m
D (31294) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 307739.[0m
D (31304) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (31304) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 01 00 01 [0m
D (31314) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (31314) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (31324) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (31324) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (31334) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (31344) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 401174[0m
D (31354) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (31354) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (31364) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (31384) TEST_COMMON: CHAR #1, value is ok.[0m
D (31384) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (31404) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (31404) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (31404) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 15[0m
D (31414) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (31424) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (31434) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (31434) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (31454) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (31454) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (31464) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (31474) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (31524) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (31524) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (31724) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (31724) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (31734) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (31784) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (31784) port.utils: Enqueue data, length=12, TID=0x6[0m
D (31784) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (31794) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (31794) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (31804) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (31814) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (31824) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0006 received.[0m
D (31824) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (31834) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0006:0x0007, 0x3ffc98d0.[0m
D (31844) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 386159.[0m
D (31854) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (31864) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 02 00 01 [0m
D (31864) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (31874) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (31874) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (31884) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (31894) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (31894) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 477856[0m
D (31914) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (31914) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (31924) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (31934) TEST_COMMON: CHAR #2, value is ok.[0m
D (31934) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (31944) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (31954) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (31954) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (31964) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (31974) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (31984) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (31984) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (32004) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0019, 15 (bytes), errno 119[0m
D (32014) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (32014) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (32024) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (32264) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (32264) port.utils: Enqueue data, length=12, TID=0x19[0m
D (32264) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (32274) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (32274) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (32284) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (32294) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (32304) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0019 received.[0m
D (32304) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (32314) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0019:0x001a, 0x3ffc98d0.[0m
D (32324) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 314137.[0m
D (32334) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (32344) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 03 00 01 [0m
D (32344) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (32354) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (32354) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (32364) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (32364) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (32374) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 407333[0m
D (32394) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (32394) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (32414) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (32414) TEST_COMMON: CHAR #3, value is ok.[0m
D (32414) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (32434) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (32434) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 05 [0m
D (32434) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (32444) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (32454) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (32464) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (32464) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (32484) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x001a, 15 (bytes), errno 119[0m
D (32494) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05 [0m
D (32494) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (32504) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (32514) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (32514) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (32754) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (32754) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (32764) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (32814) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (32814) port.utils: Enqueue data, length=12, TID=0x1a[0m
D (32814) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (32824) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (32824) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (32834) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (32844) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (32854) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x001a received.[0m
D (32854) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (32864) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x001a:0x001b, 0x3ffc98d0.[0m
D (32874) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 385394.[0m
D (32884) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (32894) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (32894) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (32904) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (32904) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (32914) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (32914) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 [0m
D (32924) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 477720[0m
D (32934) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (32954) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (32954) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (32964) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.[0m
D (33034) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (33034) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (33034) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 00 00 01 [0m
D (33034) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (33044) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (33054) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (33064) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (33074) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (33084) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x001b, 12 (bytes), errno 119[0m
D (33094) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01 [0m
D (33094) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (33104) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (33354) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (33354) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (33354) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (33474) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (33484) port.utils: Enqueue data, length=11, TID=0x1b[0m
D (33484) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (33494) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (33494) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (33504) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (33514) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (33524) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x001b received.[0m
D (33524) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (33534) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x001b:0x001c, 0x3ffc98d0.[0m
D (33544) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 451255.[0m
D (33554) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (33564) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 11 11 [0m
D (33564) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (33574) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (33574) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (33584) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (33584) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (33594) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 543664[0m
D (33614) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (33614) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (33614) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (33634) TEST_COMMON: CHAR #0, value is ok.[0m
D (33634) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (33644) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (33664) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 01 00 01 [0m
D (33664) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (33664) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (33674) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (33684) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (33694) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (33704) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x001c, 12 (bytes), errno 119[0m
D (33714) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01 [0m
D (33714) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (33724) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (33974) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (33974) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (33984) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (34034) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (34034) port.utils: Enqueue data, length=11, TID=0x1c[0m
D (34034) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (34044) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (34044) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (34054) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (34064) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (34074) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x001c received.[0m
D (34074) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (34084) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x001c:0x001d, 0x3ffc98d0.[0m
D (34094) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 384100.[0m
D (34104) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (34114) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 22 22 [0m
D (34114) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (34124) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (34124) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (34134) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (34144) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (34144) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 467896[0m
D (34164) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (34164) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (34174) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (34184) TEST_COMMON: CHAR #1, value is ok.[0m
D (34184) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (34194) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (34194) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (34214) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 02 00 01 [0m
D (34214) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 12[0m
D (34224) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (34224) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (34234) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (34244) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (34254) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0007, 12 (bytes), errno 119[0m
D (34264) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01 [0m
D (34274) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (34274) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (34484) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (34484) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (34484) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (34514) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (34514) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (34544) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (34544) port.utils: Enqueue data, length=11, TID=0x7[0m
D (34544) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (34554) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (34554) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (34564) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (34574) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (34584) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0007 received.[0m
D (34584) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (34594) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0007:0x0008, 0x3ffc98d0.[0m
D (34604) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 339353.[0m
D (34614) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (34624) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 33 33 [0m
D (34624) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (34634) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (34634) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (34644) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (34644) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (34654) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 427720[0m
D (34664) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (34684) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (34684) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (34694) TEST_COMMON: CHAR #2, value is ok.[0m
D (34704) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (34704) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (34714) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 03 00 01 [0m
D (34714) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (34724) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (34734) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (34744) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (34744) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (34764) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x001d, 12 (bytes), errno 119[0m
D (34764) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01 [0m
D (34774) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (34784) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (35014) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (35014) port.utils: Enqueue data, length=11, TID=0x1d[0m
D (35014) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (35024) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (35034) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (35044) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (35044) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (35054) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x001d received.[0m
D (35064) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (35064) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x001d:0x001e, 0x3ffc98d0.[0m
D (35084) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 311005.[0m
D (35094) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (35094) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 44 44 [0m
D (35104) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (35104) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (35114) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (35114) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (35124) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (35124) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 402735[0m
D (35144) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (35144) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (35164) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (35164) TEST_COMMON: CHAR #3, value is ok.[0m
D (35174) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (35174) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (35194) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 06 [0m
D (35194) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (35204) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (35204) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (35214) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (35224) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (35234) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x001e, 15 (bytes), errno 119[0m
D (35244) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06 [0m
D (35254) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (35254) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (35464) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (35464) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (35464) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (35524) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (35524) port.utils: Enqueue data, length=12, TID=0x1e[0m
D (35524) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (35534) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (35534) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (35544) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (35554) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (35564) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x001e received.[0m
D (35564) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (35574) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x001e:0x001f, 0x3ffc98d0.[0m
D (35584) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 340352.[0m
D (35594) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (35604) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (35604) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (35614) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (35614) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (35624) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (35634) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 [0m
D (35634) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 428069[0m
D (35654) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (35654) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (35664) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.[0m
D (35744) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (35744) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (35744) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (35754) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (35764) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (35764) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (35774) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (35784) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (35794) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x001f, 15 (bytes), errno 119[0m
D (35804) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (35814) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (35814) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (35824) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (36024) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (36024) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (36024) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (36144) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (36144) port.utils: Enqueue data, length=12, TID=0x1f[0m
D (36144) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (36154) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (36154) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (36164) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (36174) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (36184) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x001f received.[0m
D (36194) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (36194) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x001f:0x0020, 0x3ffc98d0.[0m
D (36204) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 402068.[0m
D (36214) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (36224) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 00 00 01 [0m
D (36224) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (36234) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (36234) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (36244) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (36254) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (36254) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 495511[0m
D (36264) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (36284) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (36284) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (36304) TEST_COMMON: CHAR #0, value is ok.[0m
D (36304) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (36304) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (36324) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (36324) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (36324) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (36334) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (36344) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (36354) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (36364) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0020, 15 (bytes), errno 119[0m
D (36374) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (36374) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (36384) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (36634) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (36634) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (36644) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (36754) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (36754) port.utils: Enqueue data, length=12, TID=0x20[0m
D (36754) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (36764) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (36774) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (36784) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (36784) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (36794) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0020 received.[0m
D (36804) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (36814) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0020:0x0021, 0x3ffc98d0.[0m
D (36824) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 449579.[0m
D (36834) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (36834) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 01 00 01 [0m
D (36844) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (36844) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (36854) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (36854) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (36864) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (36874) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 534058[0m
D (36884) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (36884) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (36904) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (36904) TEST_COMMON: CHAR #1, value is ok.[0m
D (36924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (36924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (36924) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (36934) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 15[0m
D (36944) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (36944) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (36954) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (36964) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (36974) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (36984) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (36994) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (36994) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (37054) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (37184) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (37184) port.utils: Enqueue data, length=12, TID=0x8[0m
D (37184) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (37194) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (37194) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (37204) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (37214) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (37224) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0008 received.[0m
D (37234) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (37234) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0008:0x0009, 0x3ffc98d0.[0m
D (37244) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 260088.[0m
D (37254) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (37264) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 02 00 01 [0m
D (37264) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (37274) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (37274) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (37284) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (37294) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (37294) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 353527[0m
D (37304) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (37324) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (37324) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (37324) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (37344) TEST_COMMON: CHAR #2, value is ok.[0m
D (37344) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (37354) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (37354) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (37364) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (37374) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (37384) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (37394) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (37394) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (37404) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0021, 15 (bytes), errno 119[0m
D (37414) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (37424) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (37434) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (37564) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (37564) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (37674) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (37674) port.utils: Enqueue data, length=12, TID=0x21[0m
D (37674) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (37684) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (37694) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (37704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (37704) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (37714) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0021 received.[0m
D (37724) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (37724) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0021:0x0022, 0x3ffc98d0.[0m
D (37734) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 320899.[0m
D (37744) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (37754) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 03 00 01 [0m
D (37764) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (37764) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (37774) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (37774) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (37784) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (37784) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 414254[0m
D (37794) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (37804) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (37814) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (37814) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (37834) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (37834) TEST_COMMON: CHAR #3, value is ok.[0m
D (37854) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (37854) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (37854) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 07 [0m
D (37864) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (37874) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (37874) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (37884) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (37894) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (37904) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0022, 15 (bytes), errno 119[0m
D (37914) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07 [0m
D (37924) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (37924) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (38134) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (38134) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (38134) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (38194) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (38194) port.utils: Enqueue data, length=12, TID=0x22[0m
D (38194) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (38204) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (38204) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (38214) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (38224) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (38234) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0022 received.[0m
D (38234) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (38244) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0022:0x0023, 0x3ffc98d0.[0m
D (38254) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 338646.[0m
D (38264) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (38274) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (38274) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (38284) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (38284) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (38294) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (38304) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 [0m
D (38304) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 432069[0m
D (38324) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (38324) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (38344) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.[0m
D (38394) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (38394) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (38394) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 00 00 01 [0m
D (38404) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (38414) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (38414) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (38424) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (38434) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (38444) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0023, 12 (bytes), errno 119[0m
D (38454) SENT: 00 23 00 00 00 06 01 03 00 00 00 01 [0m
D (38464) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (38464) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (38584) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (38674) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (38674) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (38674) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (38734) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (38734) port.utils: Enqueue data, length=11, TID=0x23[0m
D (38734) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (38744) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (38744) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (38754) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (38764) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (38774) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0023 received.[0m
D (38774) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (38784) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0023:0x0024, 0x3ffc98d0.[0m
D (38794) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 339114.[0m
D (38804) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (38814) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 11 11 [0m
D (38814) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (38824) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (38824) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (38834) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (38844) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (38844) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 431464[0m
D (38864) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (38864) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (38874) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (38884) TEST_COMMON: CHAR #0, value is ok.[0m
D (38884) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (38894) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (38914) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 01 00 01 [0m
D (38914) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (38914) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (38924) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (38934) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (38934) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (38954) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0024, 12 (bytes), errno 119[0m
D (38964) SENT: 00 24 00 00 00 06 01 03 00 01 00 01 [0m
D (38964) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (38974) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (39204) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (39204) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (39204) port.utils: Enqueue data, length=11, TID=0x24[0m
D (39214) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (39224) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (39224) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (39234) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (39244) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (39254) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0024 received.[0m
D (39254) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (39264) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0024:0x0025, 0x3ffc98d0.[0m
D (39274) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 314198.[0m
D (39284) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (39294) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 22 22 [0m
D (39294) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (39304) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (39304) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (39314) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (39314) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (39324) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 396587[0m
D (39334) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (39344) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (39344) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (39364) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (39364) TEST_COMMON: CHAR #1, value is ok.[0m
D (39374) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (39374) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (39394) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 02 00 01 [0m
D (39394) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 12[0m
D (39404) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (39404) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (39414) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (39424) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (39434) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x0009, 12 (bytes), errno 119[0m
D (39444) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01 [0m
D (39444) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (39454) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (39704) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (39704) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (39704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (39764) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (39764) port.utils: Enqueue data, length=11, TID=0x9[0m
D (39764) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (39774) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (39774) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (39784) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (39794) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (39804) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0009 received.[0m
D (39804) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (39814) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x0009:0x000a, 0x3ffc98d0.[0m
D (39824) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 381089.[0m
D (39834) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (39844) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 33 33 [0m
D (39844) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (39854) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (39854) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (39864) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (39874) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (39874) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 467952[0m
D (39894) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (39894) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (39904) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (39914) TEST_COMMON: CHAR #2, value is ok.[0m
D (39914) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (39934) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (39934) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 03 00 01 [0m
D (39934) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (39944) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (39954) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (39964) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (39964) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (39984) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0025, 12 (bytes), errno 119[0m
D (39984) SENT: 00 25 00 00 00 06 01 03 00 03 00 01 [0m
D (39994) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (40004) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (40254) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (40254) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (40254) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (40314) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (40314) port.utils: Enqueue data, length=11, TID=0x25[0m
D (40314) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (40324) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (40324) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (40334) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (40344) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (40354) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0025 received.[0m
D (40354) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (40364) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0025:0x0026, 0x3ffc98d0.[0m
D (40374) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 385650.[0m
D (40384) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (40394) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 44 44 [0m
D (40394) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (40404) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (40404) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (40414) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (40424) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (40424) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 477541[0m
D (40434) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (40444) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (40454) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (40464) TEST_COMMON: CHAR #3, value is ok.[0m
D (40464) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (40484) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (40484) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 08 [0m
D (40484) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (40494) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (40504) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (40514) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (40514) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (40534) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0026, 15 (bytes), errno 119[0m
D (40544) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08 [0m
D (40544) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (40554) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (40804) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (40804) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (40804) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (40944) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (40944) port.utils: Enqueue data, length=12, TID=0x26[0m
D (40944) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (40954) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (40954) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (40964) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (40974) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (40984) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0026 received.[0m
D (40994) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (40994) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0026:0x0027, 0x3ffc98d0.[0m
D (41004) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 467008.[0m
D (41014) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (41024) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (41024) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (41034) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (41044) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (41044) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (41054) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 [0m
D (41054) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 562046[0m
D (41064) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (41084) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (41084) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.[0m
D (41164) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (41164) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (41164) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (41174) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (41184) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (41184) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (41194) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (41204) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (41214) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0027, 15 (bytes), errno 119[0m
D (41224) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (41234) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (41234) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (41444) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (41444) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (41454) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (41504) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (41504) port.utils: Enqueue data, length=12, TID=0x27[0m
D (41504) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (41514) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (41514) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (41524) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (41534) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (41544) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0027 received.[0m
D (41544) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (41554) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0027:0x0028, 0x3ffc98d0.[0m
D (41564) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 340894.[0m
D (41574) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (41584) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 00 00 01 [0m
D (41584) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (41594) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (41594) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (41604) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (41614) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (41614) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 434305[0m
D (41634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (41634) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (41644) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (41654) TEST_COMMON: CHAR #0, value is ok.[0m
D (41654) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (41664) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (41684) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (41684) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (41684) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (41694) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (41704) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (41704) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (41724) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0028, 15 (bytes), errno 119[0m
D (41734) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (41734) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (41744) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (41964) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (41964) port.utils: Enqueue data, length=12, TID=0x28[0m
D (41964) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (41974) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (41984) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (41994) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (41994) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (42004) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0028 received.[0m
D (42014) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (42014) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0028:0x0029, 0x3ffc98d0.[0m
D (42034) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 300282.[0m
D (42044) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (42044) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 01 00 01 [0m
D (42054) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (42054) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (42064) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (42064) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (42074) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (42084) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 384421[0m
D (42094) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (42094) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (42114) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (42114) TEST_COMMON: CHAR #1, value is ok.[0m
D (42134) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (42134) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (42134) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (42144) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 15[0m
D (42154) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (42164) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (42174) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (42174) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (42194) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (42194) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (42204) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (42214) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (42464) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (42464) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (42464) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (42524) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (42524) port.utils: Enqueue data, length=12, TID=0xa[0m
D (42524) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (42534) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (42534) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (42544) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (42554) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (42564) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000a received.[0m
D (42574) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (42574) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x000a:0x000b, 0x3ffc98d0.[0m
D (42584) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 386463.[0m
D (42594) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (42604) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 02 00 01 [0m
D (42604) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (42614) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (42614) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (42624) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (42634) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (42634) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 479886[0m
D (42654) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (42654) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (42664) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (42674) TEST_COMMON: CHAR #2, value is ok.[0m
D (42674) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (42684) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (42694) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (42694) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (42704) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (42714) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (42724) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (42724) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (42744) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x0029, 15 (bytes), errno 119[0m
D (42754) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (42754) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (42764) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (43004) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (43004) port.utils: Enqueue data, length=12, TID=0x29[0m
D (43004) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (43014) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (43024) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (43034) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (43044) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (43044) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x0029 received.[0m
D (43054) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (43064) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x0029:0x002a, 0x3ffc98d0.[0m
D (43074) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 321086.[0m
D (43084) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (43084) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 03 00 01 [0m
D (43094) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (43094) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (43104) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (43104) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (43114) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (43124) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 414502[0m
D (43134) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (43134) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (43154) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (43154) TEST_COMMON: CHAR #3, value is ok.[0m
D (43164) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (43164) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (43184) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 09 [0m
D (43184) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (43194) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (43194) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (43204) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (43214) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (43224) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x002a, 15 (bytes), errno 119[0m
D (43234) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09 [0m
D (43244) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (43244) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (43454) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (43454) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (43454) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (43514) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (43514) port.utils: Enqueue data, length=12, TID=0x2a[0m
D (43514) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (43524) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (43524) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (43534) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (43544) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (43554) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x002a received.[0m
D (43554) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (43564) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x002a:0x002b, 0x3ffc98d0.[0m
D (43574) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 338705.[0m
D (43584) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (43594) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (43594) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (43604) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (43604) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (43614) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (43624) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 [0m
D (43624) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 428373[0m
D (43634) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (43644) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (43664) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.[0m
D (43724) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (43724) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (43724) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 00 00 01 [0m
D (43724) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (43734) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (43744) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (43754) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (43764) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (43774) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x002b, 12 (bytes), errno 119[0m
D (43784) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01 [0m
D (43784) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (43794) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (44044) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (44044) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (44044) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (44114) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (44114) port.utils: Enqueue data, length=11, TID=0x2b[0m
D (44114) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (44124) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (44134) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (44144) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (44144) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (44154) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x002b received.[0m
D (44164) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (44164) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x002b:0x002c, 0x3ffc98d0.[0m
D (44174) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 395449.[0m
D (44184) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (44194) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 11 11 [0m
D (44204) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (44204) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (44214) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (44214) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (44224) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (44224) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 489385[0m
D (44234) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc716c[0m
D (44254) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44254) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (44264) TEST_COMMON: 0x3ffc80dc, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (44284) TEST_COMMON: CHAR #0, value is ok.[0m
D (44284) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (44284) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (44304) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 01 00 01 [0m
D (44304) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (44304) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (44314) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (44324) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (44324) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (44344) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x002c, 12 (bytes), errno 119[0m
D (44354) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01 [0m
D (44354) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (44364) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (44614) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (44614) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (44614) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (44674) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (44674) port.utils: Enqueue data, length=11, TID=0x2c[0m
D (44674) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (44684) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (44684) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (44694) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (44704) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (44714) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x002c received.[0m
D (44714) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (44724) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x002c:0x002d, 0x3ffc98d0.[0m
D (44734) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 385957.[0m
D (44744) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (44754) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 22 22 [0m
D (44754) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (44764) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (44764) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (44774) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (44784) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (44784) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 468358[0m
D (44804) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44804) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (44824) TEST_COMMON: 0x3ffc80dc, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (44824) TEST_COMMON: CHAR #1, value is ok.[0m
D (44834) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (44834) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (44854) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 02 00 01 [0m
D (44854) mb_port.tcp.master: 0x3ffc8504,  send fd: 1, sock_id: 54[mb_slave_tcp_c8], 0x3ffc975b, len: 12[0m
D (44854) mb_driver: 0x3ffc8504, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (44864) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (44874) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 1[0m
D (44884) mb_port.tcp.master: 0x3ffc8504, get info: 1, sock_id: 54, queue_state: 0, state: 6.[0m
D (44894) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (44904) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01 [0m
D (44904) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (44914) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (45164) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (45164) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (45164) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (45244) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (45244) port.utils: Enqueue data, length=11, TID=0xb[0m
D (45244) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), frame received.[0m
D (45254) mb_driver: 0x3ffc8504, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (45254) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (45264) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 1[0m
D (45274) mb_port.tcp.master: 0x3ffc8504, slave #1(54) [192.168.32.50], receive data ready.[0m
D (45284) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x000b received.[0m
D (45284) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (45294) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), get packet TID: 0x000b:0x000c, 0x3ffc98d0.[0m
D (45304) mb_port.tcp.master: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), processing time[us] = 403171.[0m
D (45314) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (45324) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 33 33 [0m
D (45324) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (45334) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (45334) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (45344) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (45344) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (45354) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 487756[0m
D (45364) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45384) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (45394) TEST_COMMON: 0x3ffc80dc, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (45394) TEST_COMMON: CHAR #2, value is ok.[0m
D (45414) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (45414) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (45414) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 03 00 03 00 01 [0m
D (45424) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 12[0m
D (45434) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45434) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (45444) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (45454) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (45474) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x002d, 12 (bytes), errno 119[0m
D (45474) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01 [0m
D (45484) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (45484) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (45694) mb_driver: 0x3ffc8504, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (45694) event: running post loop:0x3ffc8504:256 with handler 0x4016cb10 and context 0x3ffca5d4 on loop 0x3ffc859c[0m
D (45694) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_timeout: fd: -1[0m
D (45754) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (45754) port.utils: Enqueue data, length=11, TID=0x2d[0m
D (45754) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (45764) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45764) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (45774) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (45784) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (45794) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x002d received.[0m
D (45804) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (45804) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x002d:0x002e, 0x3ffc98d0.[0m
D (45814) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 340341.[0m
D (45824) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (45834) mbm_tcp#0x3ffc80dc:MB_RECV: 03 02 44 44 [0m
D (45834) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (45844) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (45854) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (45854) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (45864) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (45864) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 434607[0m
D (45884) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45884) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (45904) TEST_COMMON: 0x3ffc80dc, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (45904) TEST_COMMON: CHAR #3, value is ok.[0m
D (45904) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (45924) mb_port.event: mbm_tcp#0x3ffc80dc, mb take resource, (300 ticks).[0m
D (45924) mbm_tcp#0x3ffc80dc:MB_TRANSMIT: 10 00 04 00 01 02 00 0a [0m
D (45924) mb_port.tcp.master: 0x3ffc8504,  send fd: 0, sock_id: 55[mb_slave_tcp_01], 0x3ffc975b, len: 15[0m
D (45934) mb_driver: 0x3ffc8504, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45944) event: running post loop:0x3ffc8504:16 with handler 0x4016d130 and context 0x3ffca544 on loop 0x3ffc859c[0m
D (45954) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_send_data: fd: 0[0m
D (45964) mb_port.tcp.master: 0x3ffc8504, get info: 0, sock_id: 55, queue_state: 0, state: 6.[0m
D (45974) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), send data successful: TID:0x002e, 15 (bytes), errno 119[0m
D (45984) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a [0m
D (45984) mb_port.timer: mbm_tcp#0x3ffc80dc, respond enable timeout (3000).[0m
D (45994) mb_object.master: 0x3ffc80dc:EV_FRAME_SENT[0m
D (46204) mb_driver: 0x3ffc8504, socket event active: 80000000000000[0m
D (46204) port.utils: Enqueue data, length=12, TID=0x2e[0m
D (46204) mb_driver: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), frame received.[0m
D (46214) mb_driver: 0x3ffc8504, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (46214) event: running post loop:0x3ffc8504:32 with handler 0x4016d34c and context 0x3ffca574 on loop 0x3ffc859c[0m
D (46224) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_recv_data: fd: 0[0m
D (46234) mb_port.tcp.master: 0x3ffc8504, slave #0(55) [192.168.32.50], receive data ready.[0m
D (46244) mb_port.tcp.master: 0x3ffc8504, packet TID: 0x002e received.[0m
D (46254) mb_object.master: 0x3ffc80dc:EV_FRAME_RECEIVED[0m
D (46254) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), get packet TID: 0x002e:0x002f, 0x3ffc98d0.[0m
D (46264) mb_port.tcp.master: 0x3ffc8504, node #0, socket(#55)(192.168.32.50), processing time[us] = 286015.[0m
D (46274) mb_object.master: 0x3ffc80dc, frame data received successfully, (0).[0m
D (46284) mbm_tcp#0x3ffc80dc:MB_RECV: 10 00 04 00 01 [0m
D (46294) mb_object.master: 0x3ffc80dc:EV_EXECUTE[0m
D (46294) mb_object.master: 0x3ffc80dc, set event EV_ERROR_OK[0m
D (46304) mb_object.master: 0x3ffc80dc:EV_ERROR_PROCESS[0m
D (46304) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (46314) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a [0m
D (46314) mb_object.master: 0x3ffc80dc, transaction processing time(us) = 379707[0m
D (46334) mb_port.event: mbm_tcp#0x3ffc80dc, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46334) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (46354) TEST_COMMON: 0x3ffc80dc, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.[0m
D (46384) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
D (46384) port.utils: Socket (#54)(192.168.32.50), fail to read modbus header. ret=0[0m
[0;31mE (46394) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), critical error=-6, errno=128.[0m
D (46404) mb_driver: 0x3ffc8504, socket event active: 40000000000000[0m
[0;31mE (46404) port.utils: socket(#54)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (46414) mb_driver: 0x3ffc8504, node #1, socket(#54)(192.168.32.50), connection lost.[0m
D (46424) mb_driver: 0x3ffc8504, fd event get: 0x40:1, |MB_EVENT_ERROR[0m
D (46434) event: running post loop:0x3ffc8504:64 with handler 0x4016ce9c and context 0x3ffca514 on loop 0x3ffc859c[0m
[0;32mI (46454) TEST_COMMON: Destroy master, inst: 0x3ffc80dc.[0m
D (46454) mbc_tcp.master: mb stack is active, try to disable.[0m
D (46454) event: running post loop:0x3ffc8504:128 with handler 0x4016d46c and context 0x3ffca5a4 on loop 0x3ffc859c[0m
D (46464) mb_port.tcp.master: loop:0x3ffc8504  mbm_on_close, fd: -1[0m
D (46484) mb_port.timer: mbm_tcp#0x3ffc80dc, timer stop, returns 259.[0m
D (46484) mb_port.tcp.master: 0x3ffc8504, event handler 0x3ffca5e4, unregister.[0m
D (46484) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x1, unregister.[0m
D (46494) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x2, unregister.[0m
D (46494) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x4, unregister.[0m
D (46514) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x8, unregister.[0m
D (46514) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x40, unregister.[0m
D (46524) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x10, unregister.[0m
D (46524) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x20, unregister.[0m
D (46524) mb_driver: 0x3ffc8504, fd event get: 0x80:-1, |MB_EVENT_CLOSE[0m
D (46544) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x80, unregister.[0m
D (46554) mb_driver: 0x3ffc8504, event handler 0x3ffca5e4, event 0x100, unregister.[0m
D (46574) mb_driver: 0x3ffc8504, driver unregister.[0m
D (46804) mb_driver: 0x3ffc8504, driver check shutdown (18)...[0m
D (46804) mb_driver: delete loop inst: loop:0x3ffc8504.[0m
D (46804) event: deleted loop 0x3ffc859c[0m
D (46804) mb_driver: delete event loop: 0x3ffc859c.[0m
D (46804) mb_driver: close eventfd (3).[0m
D (46814) mb_driver: 0x3ffc8504, driver task shutdown...[0m
D (46814) mb_driver: 0x3ffc8504, close node instance #0(mb_slave_tcp_01).[0m
D (46824) port.utils: wrong socket info or disconnected socket: 0, skip.[0m
D (46834) mb_driver: 0x3ffc8504, close node instance #1(mb_slave_tcp_c8).[0m
D (46834) port.utils: wrong socket info or disconnected socket: 1, skip.[0m
[0;32mI (46854) TEST_COMMON: Test task 0x3ffce1b4, done successfully.[0m
D (46864) TEST_COMMON: Delete task 0x3ffce1b4[0m
MALLOC_CAP_8BIT usage: Free memory delta: 4980 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 4980 Leak threshold: -64 
D (46874) wifi:Start wifi disconnect
I (46874) wifi:state: run -> init (0)
D (46874) wifi:stop beacon and connect timers
D (46884) wifi:connect status 5 -> 6
D (46884) wifi:stop beacon/connect timer, send disassoc(8)
D (46884) wifi:sta leave
I (46894) wifi:pm stop, total sleep time: 20545118 us / 42193700 us

D (46894) wifi:stop CSA timer
I (46904) wifi:<ba-del>idx
D (46904) wifi:connect status 6 -> 0
D (46904) wifi:remove fe:9f:c2:31:10:0a from rc list
I (46914) wifi:new:<11,0>, old:<11,0>, ap:<255,255>, sta:<11,0>, prof:1
D (46914) wifi:filter: set rx policy=8
D (46924) wifi:Send disconnect event, reason=8, AP number=0
D (46924) wifi:filter: set rx policy=8
D (46924) event: running post WIFI_EVENT:5 with handler 0x4010cef4 and context 0x3ffc73d0 on loop 0x3ffbd04c[0m
D (46934) esp_netif_handlers: esp_netif action disconnected with netif0x3ffc716c from event_id=5[0m
D (46944) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x4010a128
[0m
D (46954) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffc716c[0m
D (46954) wifi:connect status 0 -> 0
D (46964) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffc71e4[0m
D (46964) wifi:D (46974) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc716c[0m
Start wifi disconnect
D (46974) esp_netif_lwip: if0x3ffc716c start ip lost tmr: interval=120[0m
D (46984) wifi:connect status 0 -> 0
D (46984) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc716c[0m
D (46994) wifi:D (46994) esp_netif_lwip: if0x3ffc716c start ip lost tmr: already started[0m
filter: set rx policy=8
D (47004) esp_netif_lwip: check: local, if=0x3ffc716c fn=0x4010ab90
[0m
D (47004) wifi:D (47014) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc716c[0m
filter: set rx policy=2
D (47024) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (47024) wifi:clear scan ap list
D (47034) wifi:clear blacklist
D (47034) wifi:clear rc list
D (47034) event: running post WIFI_EVENT:3 with handler 0x4010cda8 and context 0x3ffc7370 on loop 0x3ffbd04c[0m
D (47044) esp_netif_handlers: esp_netif action stopped with netif0x3ffc716c from event_id=3[0m
D (47054) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x4010a05c
[0m
D (47064) esp_netif_lwip: call api in lwip: ret=0x5002, give sem[0m
I (47064) wifi:flush txq
I (47074) wifi:stop sw txq
I (47074) wifi:lmac stop hw txq
D (47074) wifi:filter: set rx policy=0
I (47084) wifi:Deinit lldesc rx mblock:10
D (47084) nvs: nvs_close 2[0m
D (47094) nvs: nvs_close 1[0m
D (47094) wifi_init_default: Clearing wifi default handlers[0m
D (47094) esp_netif_objects: esp_netif_remove_from_list netif successfully removed (total netifs: 0)[0m
D (47104) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x40109bf0
[0m
D (47114) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (47114) esp_netif_lwip: check: remote, if=0x3ffc716c fn=0x4010ab90
[0m
D (47124) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc716c[0m
D (47134) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (47134) event: deleted loop 0x3ffbd04c[0m
[0;32mI (47144) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).[0m
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 19280ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
