<testsuite errors="0" failures="0" skipped="0" tests="2"><testcase file="./main/test_modbus_rs485_comm_master_slave.c" line="126" time="13.254" name="Modbus RS485 RTU multi device master - slave case."><system-out>Please press "Enter" key once any board send this signal.

D (1073) TEST_COMMON: Notify task start 0x3ffbace0
D (1073) TEST_COMMON: Task: 0x3ffbace0, get notify value = 1
D (1133) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1133) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1133) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1143) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1143) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1153) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1163) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (1163) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 510135
D (1173) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (1183) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1183) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1193) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1193) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (1203) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (1213) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1213) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1223) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1233) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (1233) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1243) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93489
I (1253) SLAVE: OBJ 0x3ffaff5c, WRITE (554342 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (1343) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1343) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1343) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1353) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1353) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1363) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1363) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (1373) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 124814
D (1383) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (1383) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1393) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1393) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1403) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (1413) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (1413) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1423) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1433) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1433) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (1443) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1443) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93490
I (1413) SLAVE: OBJ 0x3ffaff5c, WRITE (761123 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (1543) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1543) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1553) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1553) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1563) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1563) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1573) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (1583) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 124771
D (1583) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (1593) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1593) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1603) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1613) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (1623) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (1623) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1633) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1633) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1643) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (1653) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1653) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (1663) SLAVE: OBJ 0x3ffaff5c, WRITE (967861 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (1753) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1753) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1753) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1763) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1763) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1773) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1783) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (1783) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 125331
D (1793) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (1803) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1803) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1813) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1813) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (1823) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (1833) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1833) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1843) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1853) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (1853) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1863) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93489
I (1833) SLAVE: OBJ 0x3ffaff5c, WRITE (1175159 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (1963) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1963) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (1963) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1963) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1973) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1983) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (1983) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (1993) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 123491
D (2003) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (2003) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2013) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2013) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2023) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (2033) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (2033) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2043) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2043) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2053) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (2063) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2063) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (2073) SLAVE: OBJ 0x3ffaff5c, READ (1378881 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (2173) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2173) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2173) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2173) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2183) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2183) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2193) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (2203) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (2203) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (2213) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2213) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2223) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2233) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (2243) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (2243) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2253) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2253) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2263) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (2263) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2273) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (2283) SLAVE: OBJ 0x3ffaff5c, READ (1586526 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (2373) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2373) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2373) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2383) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2393) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2393) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2403) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (2403) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127865
D (2413) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (2423) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2423) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2433) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2433) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (2443) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (2453) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2453) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2463) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2473) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (2473) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2483) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91232
I (2453) SLAVE: OBJ 0x3ffaff5c, READ (1794101 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (2583) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2583) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2583) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2593) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2593) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2603) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2613) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (2613) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (2623) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (2623) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2633) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2643) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2643) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (2653) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (2663) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2663) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2673) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2673) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (2683) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2683) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (2693) SLAVE: OBJ 0x3ffaff5c, READ (2001746 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (2793) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2793) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (2793) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (2803) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2803) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2813) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (2813) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 00 a7 d4 
D (2823) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129150
D (2833) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 00 
D (2833) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2843) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (2853) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2853) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (2863) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (2873) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2873) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2883) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2883) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (2893) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2903) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (2903) SLAVE: OBJ 0x3ffaff5c, WRITE (2212342 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x0), SIZE:1
D (3043) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3043) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3043) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3053) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3053) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3063) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3073) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (3073) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 169608
D (3083) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (3093) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3093) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3103) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3103) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (3113) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (3123) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3123) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3133) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3143) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (3143) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3153) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (3153) SLAVE: OBJ 0x3ffaff5c, WRITE (2463917 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (3253) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3253) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3253) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3263) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3263) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3273) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3283) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (3283) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129565
D (3293) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (3303) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3303) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3313) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3323) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (3323) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (3333) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3333) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3343) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3353) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (3353) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3363) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (3373) SLAVE: OBJ 0x3ffaff5c, WRITE (2675449 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (3463) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3463) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3463) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3473) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3483) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3483) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3493) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (3503) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129634
D (3503) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (3513) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3513) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3523) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3533) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (3543) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (3543) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3553) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3553) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3563) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (3563) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3573) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93489
I (3543) SLAVE: OBJ 0x3ffaff5c, WRITE (2887049 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (3683) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3683) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3683) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3683) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3693) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3693) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3703) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (3713) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129633
D (3723) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (3723) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3733) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3733) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3743) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (3753) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (3753) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3763) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3763) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3773) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (3783) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3783) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (3793) SLAVE: OBJ 0x3ffaff5c, WRITE (3098650 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (3893) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3893) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3893) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3893) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3903) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3913) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3913) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 01 66 14 
D (3923) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129565
D (3933) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 01 
D (3933) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3943) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3943) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3953) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (3963) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (3963) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3973) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3973) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3983) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (3993) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3993) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (4003) SLAVE: OBJ 0x3ffaff5c, WRITE (3310181 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x1), SIZE:1
D (4143) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4143) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4143) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4153) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4153) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4163) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4163) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (4173) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 170544
D (4183) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (4183) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4193) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4193) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4203) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (4213) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (4213) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4223) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4233) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4233) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (4243) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4243) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (4253) SLAVE: OBJ 0x3ffaff5c, READ (3560956 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (4353) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4353) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4353) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4353) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4363) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4373) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4373) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (4383) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (4393) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (4393) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4403) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4403) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4413) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (4423) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (4423) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4433) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4433) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4443) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (4453) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4453) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (4463) SLAVE: OBJ 0x3ffaff5c, READ (3768601 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (4553) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4553) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4563) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4563) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4573) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4573) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4583) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (4593) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127865
D (4593) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (4603) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4603) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4613) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4623) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (4623) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (4633) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4643) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4643) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4653) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (4653) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4663) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91232
I (4633) SLAVE: OBJ 0x3ffaff5c, READ (3976176 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (4763) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4763) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4763) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4773) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4773) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4783) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4793) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (4793) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (4803) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (4813) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4813) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4823) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4823) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (4833) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (4843) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4843) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4853) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4863) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (4863) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4873) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (4873) SLAVE: OBJ 0x3ffaff5c, READ (4183821 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (4973) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4973) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (4973) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (4983) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4983) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4993) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5003) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 02 26 15 
D (5003) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129150
D (5013) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 02 
D (5023) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5023) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5033) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5033) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (5043) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (5053) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5053) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5063) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5073) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (5073) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5083) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (5083) SLAVE: OBJ 0x3ffaff5c, WRITE (4394417 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x2), SIZE:1
D (5223) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5223) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5223) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5233) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5233) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5243) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5253) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (5253) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 167526
D (5263) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (5273) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5273) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5283) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5283) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (5293) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (5303) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5303) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5313) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5323) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (5323) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5333) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (5333) SLAVE: OBJ 0x3ffaff5c, WRITE (4643910 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (5433) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5433) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5433) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5443) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5443) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5453) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5463) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (5463) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129564
D (5473) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (5483) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5483) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5493) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5503) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (5503) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (5513) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5513) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5523) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5533) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (5533) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5543) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (5553) SLAVE: OBJ 0x3ffaff5c, WRITE (4855441 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (5643) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5643) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5643) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5653) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5663) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5663) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5673) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (5683) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129634
D (5683) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (5693) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5693) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5703) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5713) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (5723) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (5723) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5733) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5733) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5743) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (5743) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5753) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93490
I (5723) SLAVE: OBJ 0x3ffaff5c, WRITE (5067042 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (5863) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5863) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5863) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5863) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5873) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5873) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5883) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (5893) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129633
D (5903) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (5903) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5913) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5913) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5923) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (5933) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (5933) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5943) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5943) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5953) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (5963) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5963) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (5973) SLAVE: OBJ 0x3ffaff5c, WRITE (5278643 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (6073) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6073) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (6073) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (6073) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6083) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6093) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (6093) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 03 e7 d5 
D (6103) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129565
D (6113) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 03 
D (6113) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6123) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6123) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6133) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (6143) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (6143) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6153) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6153) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6163) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (6173) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6173) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (6183) SLAVE: OBJ 0x3ffaff5c, WRITE (5490174 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x3), SIZE:1
D (6323) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6323) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6323) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6333) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6333) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6343) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6343) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (6353) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 170544
D (6363) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (6363) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6373) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (6373) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6383) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (6393) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (6393) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6403) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6413) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (6413) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (6423) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6423) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (6433) SLAVE: OBJ 0x3ffaff5c, READ (5740949 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (6533) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6533) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6533) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6533) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6543) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6553) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6553) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (6563) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (6573) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (6573) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6583) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (6583) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6593) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (6603) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (6603) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6613) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6613) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (6623) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (6633) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6633) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (6643) SLAVE: OBJ 0x3ffaff5c, READ (5948594 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (6733) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6733) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6743) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6743) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6753) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6753) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6763) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (6773) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127866
D (6773) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (6783) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6783) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (6793) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6803) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (6803) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (6813) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6823) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6823) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (6833) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (6833) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6843) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91233
I (6813) SLAVE: OBJ 0x3ffaff5c, READ (6156169 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (6943) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6943) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6943) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6953) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6953) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6963) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6973) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (6973) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (6983) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (6993) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6993) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7003) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7003) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (7013) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (7023) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7023) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7033) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (7043) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (7043) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7053) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (7053) SLAVE: OBJ 0x3ffaff5c, READ (6363814 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (7153) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7153) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7153) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7163) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7163) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7173) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7183) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 04 a6 17 
D (7183) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129150
D (7193) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 04 
D (7203) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7203) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7213) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7213) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (7223) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (7233) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7233) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7243) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7253) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (7253) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7263) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93494
I (7263) SLAVE: OBJ 0x3ffaff5c, WRITE (6574410 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x4), SIZE:1
D (7403) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7403) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7403) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7413) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7413) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7423) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7433) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (7433) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 167526
D (7443) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (7453) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7453) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7463) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7463) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (7473) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (7483) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7483) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7493) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7503) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (7503) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7513) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93494
I (7513) SLAVE: OBJ 0x3ffaff5c, WRITE (6823903 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (7613) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7613) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7613) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7623) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7623) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7633) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7643) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (7643) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129564
D (7653) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (7663) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7663) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7673) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7683) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (7683) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (7693) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7693) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7703) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7713) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (7713) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7723) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (7733) SLAVE: OBJ 0x3ffaff5c, WRITE (7035434 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (7823) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7823) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7823) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7833) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7843) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7843) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7853) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (7863) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129634
D (7863) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (7873) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7873) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7883) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7893) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (7903) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (7903) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7913) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7913) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7923) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (7923) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7933) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93490
I (7903) SLAVE: OBJ 0x3ffaff5c, WRITE (7247035 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (8043) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8043) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (8043) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (8043) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8053) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8053) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (8063) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (8073) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129633
D (8083) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (8083) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8093) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8093) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8103) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (8113) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (8113) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8123) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8123) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8133) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (8143) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8143) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (8153) SLAVE: OBJ 0x3ffaff5c, WRITE (7458635 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (8253) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8253) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (8253) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (8253) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8263) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8273) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (8273) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 05 67 d7 
D (8283) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129565
D (8293) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 05 
D (8293) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8303) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8303) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8313) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (8323) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (8323) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8333) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8333) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8343) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (8353) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8353) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (8363) SLAVE: OBJ 0x3ffaff5c, WRITE (7670167 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x5), SIZE:1
D (8503) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8503) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (8503) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8513) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8513) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8523) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (8523) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (8533) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 170544
D (8543) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (8543) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8553) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (8553) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8563) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (8573) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (8573) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8583) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8593) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (8593) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (8603) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8603) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (8613) SLAVE: OBJ 0x3ffaff5c, READ (7920942 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (8713) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8713) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (8713) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8713) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8723) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8733) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (8733) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (8743) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (8753) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (8753) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8763) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (8763) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8773) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (8783) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (8783) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8793) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8793) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (8803) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (8813) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8813) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (8823) SLAVE: OBJ 0x3ffaff5c, READ (8128587 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (8913) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8913) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (8923) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8923) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8933) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8933) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (8943) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (8953) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127865
D (8953) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (8963) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8963) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (8973) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8983) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (8983) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (8993) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9003) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9003) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (9013) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (9013) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9023) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91233
I (8993) SLAVE: OBJ 0x3ffaff5c, READ (8336162 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (9123) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9123) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (9123) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9133) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9133) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9143) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (9153) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (9153) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (9163) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (9173) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9173) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9183) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9183) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (9193) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (9203) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9203) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9213) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (9223) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (9223) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9233) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (9233) SLAVE: OBJ 0x3ffaff5c, READ (8543807 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (9333) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9333) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (9333) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (9343) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9343) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9353) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (9363) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 06 27 d6 
D (9363) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129150
D (9373) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 06 
D (9383) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9383) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9393) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9393) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (9403) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (9413) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9413) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9423) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9433) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (9433) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9443) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (9443) SLAVE: OBJ 0x3ffaff5c, WRITE (8754403 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x6), SIZE:1
D (9583) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9583) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (9583) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (9593) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9593) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9603) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (9613) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (9613) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 167526
D (9623) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (9633) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9633) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9643) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9643) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (9653) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (9663) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9663) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9673) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9683) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (9683) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9693) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93494
I (9693) SLAVE: OBJ 0x3ffaff5c, WRITE (9003896 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (9793) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9793) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (9793) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (9803) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9803) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9813) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (9823) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (9823) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129564
D (9833) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (9843) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9843) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9853) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9863) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (9863) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (9873) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9873) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9883) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9893) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (9893) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9903) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (9913) SLAVE: OBJ 0x3ffaff5c, WRITE (9215427 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (10003) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10003) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (10003) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (10013) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10023) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10023) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (10033) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (10043) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 130069
D (10043) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (10053) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10053) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10063) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10073) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (10083) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (10083) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10093) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10093) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10103) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (10113) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10113) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94791
I (10083) SLAVE: OBJ 0x3ffaff5c, WRITE (9428071 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (10223) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10223) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (10223) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (10233) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10233) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10243) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (10243) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (10253) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131143
D (10263) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (10263) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10273) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10283) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10283) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (10293) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (10303) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10303) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10313) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10313) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (10323) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10333) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94796
I (10333) SLAVE: OBJ 0x3ffaff5c, WRITE (9642308 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (10433) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10433) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (10433) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (10443) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10453) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10453) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (10463) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 07 e6 16 
D (10473) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131559
D (10473) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 07 
D (10483) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10483) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10493) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10503) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (10513) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (10513) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10523) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10523) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10533) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (10533) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10543) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94797
I (10553) SLAVE: OBJ 0x3ffaff5c, WRITE (9856962 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x7), SIZE:1
D (10693) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10693) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (10693) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10703) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10703) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10713) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (10723) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (10723) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 173927
D (10733) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (10733) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10743) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (10753) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10753) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (10763) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (10773) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10773) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10783) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (10783) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (10793) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10803) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92539
I (10803) SLAVE: OBJ 0x3ffaff5c, READ (10112248 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (10903) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10903) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (10903) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10913) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10913) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10923) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (10933) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (10933) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129999
D (10943) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (10953) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10953) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (10963) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10963) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (10973) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (10983) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10983) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10993) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (10993) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (11003) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11013) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92538
I (11013) SLAVE: OBJ 0x3ffaff5c, READ (10323086 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (11113) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11113) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (11113) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11123) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11123) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11133) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (11143) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (11143) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129860
D (11153) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (11163) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11163) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11173) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11173) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (11183) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (11193) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11193) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11203) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (11213) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (11213) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11223) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92539
I (11223) SLAVE: OBJ 0x3ffaff5c, READ (10533784 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (11323) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11323) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (11323) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11333) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11333) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11343) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (11353) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (11353) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129999
D (11363) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (11373) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11373) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11383) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11383) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (11393) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (11403) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11403) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11413) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (11423) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (11423) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11433) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92538
I (11433) SLAVE: OBJ 0x3ffaff5c, READ (10744621 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (11533) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11533) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (11533) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (11543) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11553) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11553) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (11563) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 08 a6 12 
D (11573) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131214
D (11573) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 08 
D (11583) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11583) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11593) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11603) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (11613) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (11613) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11623) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11623) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11633) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (11643) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11643) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94795
I (11653) SLAVE: OBJ 0x3ffaff5c, WRITE (10958410 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x8), SIZE:1
D (11793) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11793) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (11793) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (11803) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11803) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11813) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (11823) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (11823) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 173685
D (11833) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (11843) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11843) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11853) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11853) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (11863) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (11873) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11873) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11883) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11893) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (11893) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11903) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94795
I (11913) SLAVE: OBJ 0x3ffaff5c, WRITE (11215190 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (12013) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12013) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12013) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12013) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12023) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12023) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12033) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (12043) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131628
D (12053) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (12053) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12063) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12063) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12073) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (12083) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (12083) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12093) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12103) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12103) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (12113) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12113) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94795
I (12123) SLAVE: OBJ 0x3ffaff5c, WRITE (11429914 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (12223) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12223) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12223) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12233) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12233) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12243) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12253) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (12253) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131629
D (12263) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (12273) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12273) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12283) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12283) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (12293) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (12303) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12303) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12313) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12323) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (12323) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12333) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94796
I (12343) SLAVE: OBJ 0x3ffaff5c, WRITE (11644637 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (12433) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12443) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12443) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12443) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12453) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12453) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12463) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (12473) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131569
D (12483) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (12483) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12493) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12493) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12503) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (12513) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (12513) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12523) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12523) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12533) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (12543) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12543) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94791
I (12513) SLAVE: OBJ 0x3ffaff5c, WRITE (11859302 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (12653) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12653) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12653) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12663) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12663) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12673) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12683) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 09 67 d2 
D (12683) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131549
D (12693) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 09 
D (12703) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12703) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12713) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12713) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (12723) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (12733) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12733) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12743) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12753) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (12753) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12763) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94795
I (12763) SLAVE: OBJ 0x3ffaff5c, WRITE (12073945 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x9), SIZE:1
D (12903) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12903) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (12903) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12913) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12913) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12923) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (12933) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (12933) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 166918
D (12943) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (12943) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12953) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12963) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12963) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (12973) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (12983) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12983) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12993) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (12993) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (13003) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13013) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92539
I (13013) SLAVE: OBJ 0x3ffaff5c, READ (12322222 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (13113) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13113) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (13113) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13123) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13123) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13133) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13143) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (13143) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129999
D (13153) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (13163) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13163) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13173) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13173) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (13183) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (13193) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13193) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13203) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13203) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (13213) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13223) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92538
I (13223) SLAVE: OBJ 0x3ffaff5c, READ (12533059 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (13323) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13323) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (13323) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13333) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13333) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13343) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13353) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (13353) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129860
D (13363) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (13373) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13373) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13383) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13383) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (13393) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (13403) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13403) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13413) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13423) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (13423) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13433) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92538
I (13433) SLAVE: OBJ 0x3ffaff5c, READ (12743758 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (13533) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13533) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (13533) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13543) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13543) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13553) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13563) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (13563) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129998
D (13573) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (13583) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13583) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13593) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13593) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (13603) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (13613) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13613) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13623) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13633) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (13633) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13643) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92539
I (13643) SLAVE: OBJ 0x3ffaff5c, READ (12954595 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (13743) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13743) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (13743) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (13753) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13763) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13763) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (13773) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 0a 27 d3 
D (13783) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131144
D (13783) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 0a 
D (13793) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13793) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13803) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13813) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (13823) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (13823) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13833) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13833) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13843) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (13853) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13853) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94795
D (13863) TEST_COMMON: Stop slave: 0x3ffaff5c.
I (13923) TEST_COMMON: Destroy slave, inst: 0x3ffaff5c.
D (13923) mb_port.serial: mbs_rtu@0x3ffaff5c, suspend port.
D (13923) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13933) TEST_COMMON: Notify task done, inst: 0x3ffbace0.
./main/test_modbus_rs485_comm_master_slave.c:126:Modbus RS485 RTU multi device master - slave case.:PASS
Test ran in 13152ms

&amp;lt;-------------------&amp;gt;

I (923) uart: queue free spaces: 20
D (923) intr_alloc: Connected src 35 to int 8 (cpu 0)
I (923) mb_port.serial: mbm_rtu@0x3ffaff5c, suspend port from task.
D (933) mb_port.serial: created object @0x3ffb7628
D (933) mb_port.timer: initialized mb_port.timer object @0x3ffb91bc
D (943) mb_port.event: initialized object @0x3ffb91f4
D (943) mb_transp.rtu_master: created mb_transp.rtu_master object @0x3ffb7374
D (953) mb_object.master: created object mbm_rtu@0x3ffaff5c
I (953) TEST_COMMON: 0x3ffaff5c, modbus master stack is initialized
D (963) mb_port.serial: mbm_rtu@0x3ffaff5c, resume port.
D (973) mb_port.timerD (973) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (973) mb_port.timer: timer mode: (0) triggered
: mbm_rtu@0x3ffaff5c, start timer (1750).
D (983) mb_object.master: 0x3ffaff5c:EV_READY
I (993) TEST_COMMON: 0x3ffaff5c, modbus master start...
D (1003) TEST_COMMON: Notify task start 0x3ffbaaac
D (1003) TEST_COMMON: Task: 0x3ffbaaac, get notify value = 1
D (1003) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1023) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1023) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (1023) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1033) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1043) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1043) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (1053) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1063) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1103) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1103) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1103) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1113) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1123) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1123) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (1133) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 67145
D (1143) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1143) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (1153) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1153) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1163) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1163) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1173) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (1183) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140428
D (1193) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1193) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (1213) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (1213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1233) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1233) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (1233) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1243) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1243) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1253) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (1263) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1263) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1313) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1313) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1313) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1323) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1323) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1333) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (1343) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66869
D (1343) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1353) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (1363) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1363) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1373) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1373) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1383) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (1383) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140228
D (1403) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1403) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (1423) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (1423) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1443) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1443) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (1443) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1443) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1453) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1463) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (1463) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1473) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1523) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1523) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1523) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1523) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1533) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1543) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (1543) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66864
D (1553) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1563) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (1563) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1573) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1573) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1583) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1583) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (1593) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137011
D (1613) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1613) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (1633) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (1633) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1633) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1653) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (1653) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1653) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1663) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1663) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (1673) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1683) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1723) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1723) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1733) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1733) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1743) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1743) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (1753) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 67359
D (1763) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1763) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (1773) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1773) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1783) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1783) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1793) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (1803) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134386
D (1813) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1813) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (1833) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (1833) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1853) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1853) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (1853) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1863) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1863) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1873) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (1883) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1883) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1933) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1933) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (1933) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (1943) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1943) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (1953) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (1953) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65182
D (1963) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1973) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (1973) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1983) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1983) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1993) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1993) mbm_error_cb_request_success: 03 00 00 00 01 
D (2003) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136360
D (2023) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2023) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (2023) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (2043) TEST_COMMON: CHAR #0, value is ok.
D (2043) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2063) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2063) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (2063) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2063) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2073) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2083) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (2083) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2093) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2143) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2143) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (2143) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2143) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2153) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2153) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (2163) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65098
D (2173) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2173) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (2183) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2183) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2193) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2203) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2203) mbm_error_cb_request_success: 03 00 01 00 01 
D (2213) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134685
D (2223) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2223) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (2243) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (2243) TEST_COMMON: CHAR #1, value is ok.
D (2263) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2263) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2263) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (2273) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2273) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2283) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2283) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (2293) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2303) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2343) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2343) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (2343) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2353) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2363) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2363) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (2373) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65159
D (2383) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2383) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (2393) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2393) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2403) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2403) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2413) mbm_error_cb_request_success: 03 00 02 00 01 
D (2413) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136352
D (2433) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2433) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (2453) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (2453) TEST_COMMON: CHAR #2, value is ok.
D (2473) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2473) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2473) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (2473) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2483) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2493) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2493) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (2503) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2513) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2553) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2553) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (2553) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2563) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2563) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2573) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (2583) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65166
D (2583) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2593) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (2593) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2603) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2613) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2613) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2623) mbm_error_cb_request_success: 03 00 03 00 01 
D (2623) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136359
D (2643) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2643) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (2663) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (2663) TEST_COMMON: CHAR #3, value is ok.
D (2663) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2683) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2683) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 00 
D (2683) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2693) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2693) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (2703) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 00 a7 d4 
D (2713) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2713) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2763) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2763) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (2763) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2773) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2773) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (2783) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (2793) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66840
D (2793) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2803) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (2813) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2813) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2823) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2823) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2833) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 
D (2833) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140211
D (2853) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2853) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (2873) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (2933) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2933) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2933) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (2933) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2943) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2953) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (2953) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (2963) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2973) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3013) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3013) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3013) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3023) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3033) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3033) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (3043) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66816
D (3053) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3053) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (3063) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3063) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3073) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3073) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3083) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (3093) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140176
D (3103) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3103) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (3123) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (3123) TEST_COMMON: CHAR #0, value is ok.
D (3143) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3143) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3143) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (3153) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3153) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3163) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3163) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (3173) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3183) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3223) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3233) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3233) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3233) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3243) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3243) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (3253) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66869
D (3263) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3263) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (3273) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3273) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3283) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3293) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3293) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (3303) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140228
D (3313) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3313) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (3333) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (3333) TEST_COMMON: CHAR #1, value is ok.
D (3353) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3353) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3353) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (3363) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3363) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3373) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3383) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (3383) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3393) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3443) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3443) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3443) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3443) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3453) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3463) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (3463) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66862
D (3473) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3483) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (3483) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3493) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3493) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3503) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3503) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (3513) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140221
D (3533) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3533) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (3533) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (3553) TEST_COMMON: CHAR #2, value is ok.
D (3553) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3573) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3573) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (3573) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3573) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3583) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3593) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (3593) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3603) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3653) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3653) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3653) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3663) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3663) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3673) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (3673) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66792
D (3683) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3693) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (3693) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3703) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3703) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3713) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3713) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (3723) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137724
D (3743) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3743) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (3763) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (3763) TEST_COMMON: CHAR #3, value is ok.
D (3763) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3783) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3783) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 01 
D (3783) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3793) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3793) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3803) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 01 66 14 
D (3813) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3813) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3863) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3863) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3863) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3873) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3873) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3883) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (3883) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66870
D (3893) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3903) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (3903) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3913) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3913) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3923) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3933) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 
D (3933) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139316
D (3953) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3953) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (3973) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (4033) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4033) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4033) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (4033) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4043) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4043) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4053) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (4063) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4063) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4113) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4113) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4113) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4123) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4123) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4133) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (4133) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65190
D (4143) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4153) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (4153) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4163) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4163) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4173) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4183) mbm_error_cb_request_success: 03 00 00 00 01 
D (4183) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136367
D (4203) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4203) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (4223) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (4223) TEST_COMMON: CHAR #0, value is ok.
D (4223) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4243) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4243) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (4243) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4253) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4253) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4263) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (4273) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4273) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4323) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4323) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4323) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4323) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4333) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4343) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (4343) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65098
D (4353) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4363) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (4363) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4373) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4373) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4383) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4383) mbm_error_cb_request_success: 03 00 01 00 01 
D (4393) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136291
D (4413) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4413) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (4413) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (4433) TEST_COMMON: CHAR #1, value is ok.
D (4433) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4453) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4453) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (4453) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4453) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4463) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4473) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (4473) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4483) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4533) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4533) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4533) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4533) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4543) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4543) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (4553) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65159
D (4563) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4563) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (4573) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4573) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4583) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4583) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4593) mbm_error_cb_request_success: 03 00 02 00 01 
D (4603) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134399
D (4613) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4613) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (4633) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (4633) TEST_COMMON: CHAR #2, value is ok.
D (4653) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4653) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4653) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (4663) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4663) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4673) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4673) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (4683) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4693) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4733) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4733) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4733) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4743) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4753) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4753) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (4763) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65167
D (4763) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4773) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (4783) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4783) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4793) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4793) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4803) mbm_error_cb_request_success: 03 00 03 00 01 
D (4803) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136360
D (4823) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4823) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (4843) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (4843) TEST_COMMON: CHAR #3, value is ok.
D (4843) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4863) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4863) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 02 
D (4863) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4873) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4883) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (4883) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 02 26 15 
D (4893) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4903) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4943) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4943) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (4943) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4953) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4963) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (4963) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (4973) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66840
D (4983) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4983) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (4993) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4993) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5003) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5003) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5013) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 
D (5023) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140211
D (5033) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5033) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (5053) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (5113) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5113) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5113) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (5113) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5123) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5133) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5133) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (5143) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5153) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5193) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5193) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5193) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5203) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5213) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5213) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (5223) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66809
D (5233) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5233) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (5243) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5243) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5253) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5253) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5263) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (5273) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140168
D (5283) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5283) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (5303) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (5303) TEST_COMMON: CHAR #0, value is ok.
D (5323) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5323) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5323) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (5333) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5333) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5343) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5343) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (5353) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5363) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5403) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5413) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5413) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5413) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5423) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5423) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (5433) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66867
D (5443) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5443) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (5453) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5453) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5463) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5473) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5473) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (5483) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140226
D (5493) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5493) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (5513) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (5513) TEST_COMMON: CHAR #1, value is ok.
D (5533) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5533) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5533) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (5543) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5543) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5553) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5563) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (5563) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5573) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5623) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5623) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5623) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5623) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5633) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5643) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (5643) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66864
D (5653) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5663) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (5663) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5673) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5673) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5683) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5683) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (5693) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140223
D (5713) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5713) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (5713) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (5733) TEST_COMMON: CHAR #2, value is ok.
D (5733) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5753) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5753) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (5753) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5753) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5763) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5773) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (5773) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5783) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5833) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5833) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5833) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5843) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5843) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5853) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (5853) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66792
D (5863) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5873) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (5873) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5883) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5883) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5893) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5893) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (5903) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137717
D (5923) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5923) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (5943) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (5943) TEST_COMMON: CHAR #3, value is ok.
D (5943) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5963) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5963) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 03 
D (5963) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5973) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5973) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5983) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 03 e7 d5 
D (5993) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5993) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6043) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6043) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (6043) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6053) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6053) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (6063) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (6063) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66870
D (6073) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6083) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (6083) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6093) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6093) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6103) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6113) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 
D (6113) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139309
D (6133) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6133) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (6153) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (6213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6213) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (6213) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6223) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6223) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6233) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (6243) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6243) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6293) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6293) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6293) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6303) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6303) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6313) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (6313) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65183
D (6323) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6333) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (6333) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6343) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6343) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6353) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6363) mbm_error_cb_request_success: 03 00 00 00 01 
D (6363) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136360
D (6383) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6383) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (6403) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (6403) TEST_COMMON: CHAR #0, value is ok.
D (6403) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6423) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6423) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (6423) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6433) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6433) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6443) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (6453) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6453) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6503) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6503) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6503) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6503) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6513) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6523) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (6523) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65097
D (6533) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6543) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (6543) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6553) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6553) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6563) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6563) mbm_error_cb_request_success: 03 00 01 00 01 
D (6573) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136290
D (6593) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6593) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (6593) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (6613) TEST_COMMON: CHAR #1, value is ok.
D (6613) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6633) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6633) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (6633) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6633) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6643) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6653) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (6653) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6663) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6713) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6713) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6713) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6713) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6723) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6723) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (6733) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65158
D (6743) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6743) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (6753) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6753) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6763) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6763) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6773) mbm_error_cb_request_success: 03 00 02 00 01 
D (6783) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134392
D (6793) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6793) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (6813) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (6813) TEST_COMMON: CHAR #2, value is ok.
D (6833) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6833) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6833) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (6843) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6843) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6853) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6853) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (6863) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6873) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6913) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6913) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6913) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6923) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6933) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6933) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (6943) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65167
D (6943) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6953) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (6963) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6963) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6973) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6973) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6983) mbm_error_cb_request_success: 03 00 03 00 01 
D (6983) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136360
D (7003) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7003) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (7023) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (7023) TEST_COMMON: CHAR #3, value is ok.
D (7023) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7043) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7043) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 04 
D (7043) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7053) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7063) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7063) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 04 a6 17 
D (7073) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7083) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7123) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7123) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7123) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7133) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7143) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7143) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (7153) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66841
D (7163) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7163) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (7173) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7173) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7183) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7183) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7193) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 
D (7203) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140212
D (7213) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7213) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (7233) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (7293) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7293) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7293) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (7293) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7303) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7313) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7313) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (7323) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7333) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7373) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7373) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7373) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7383) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7393) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7393) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (7403) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66802
D (7413) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7413) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (7423) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7423) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7433) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7433) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7443) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (7453) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140161
D (7463) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7463) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (7483) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (7483) TEST_COMMON: CHAR #0, value is ok.
D (7503) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7503) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7503) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (7513) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7513) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7523) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7523) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (7533) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7543) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7583) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7593) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7593) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7593) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7603) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7603) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (7613) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66866
D (7623) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7623) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (7633) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7633) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7643) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7653) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7653) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (7663) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140225
D (7673) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7673) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (7693) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (7693) TEST_COMMON: CHAR #1, value is ok.
D (7713) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7713) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7713) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (7723) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7723) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7733) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7743) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (7743) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7753) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7803) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7803) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7803) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7803) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7813) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7823) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (7823) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66865
D (7833) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7843) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (7843) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7853) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7853) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7863) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7863) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (7873) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140224
D (7893) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7893) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (7893) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (7913) TEST_COMMON: CHAR #2, value is ok.
D (7913) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7933) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7933) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (7933) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7933) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7943) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7953) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (7953) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7963) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8013) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8013) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (8013) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8023) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8023) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (8033) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (8033) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66792
D (8043) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8053) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (8053) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8063) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8063) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8073) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8073) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (8083) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137710
D (8103) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8103) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (8123) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (8123) TEST_COMMON: CHAR #3, value is ok.
D (8123) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8143) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8143) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 05 
D (8143) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8153) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8153) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (8163) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 05 67 d7 
D (8173) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8173) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8223) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8223) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (8223) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8233) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8233) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (8243) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (8243) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66876
D (8253) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8263) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (8263) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8273) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8273) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8283) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8293) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 
D (8293) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139302
D (8313) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8313) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (8333) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (8393) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8393) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8393) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (8393) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8403) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8403) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8413) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (8423) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8423) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8473) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8473) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (8473) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (8483) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8483) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (8493) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (8493) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65176
D (8503) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8513) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (8513) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8523) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8523) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8533) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8543) mbm_error_cb_request_success: 03 00 00 00 01 
D (8543) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136353
D (8563) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8563) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (8583) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (8583) TEST_COMMON: CHAR #0, value is ok.
D (8583) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8603) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8603) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (8603) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8613) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8613) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8623) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (8633) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8633) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8683) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8683) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (8683) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (8683) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8693) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (8703) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (8703) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65095
D (8713) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8723) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (8723) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8733) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8733) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8743) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8743) mbm_error_cb_request_success: 03 00 01 00 01 
D (8753) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136290
D (8773) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8773) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (8773) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (8793) TEST_COMMON: CHAR #1, value is ok.
D (8793) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8813) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8813) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (8813) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8813) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8823) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8833) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (8833) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8843) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8893) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8893) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (8893) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (8893) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8903) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (8903) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (8913) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65159
D (8923) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8923) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (8933) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8933) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8943) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8943) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8953) mbm_error_cb_request_success: 03 00 02 00 01 
D (8963) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134385
D (8973) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8973) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (8993) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (8993) TEST_COMMON: CHAR #2, value is ok.
D (9013) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9013) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9013) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (9023) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9023) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9033) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9033) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (9043) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9053) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9093) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9093) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (9093) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (9103) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9113) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (9113) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (9123) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65167
D (9123) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9133) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (9143) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9143) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9153) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9153) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9163) mbm_error_cb_request_success: 03 00 03 00 01 
D (9163) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136360
D (9183) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9183) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (9203) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (9203) TEST_COMMON: CHAR #3, value is ok.
D (9203) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9223) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9223) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 06 
D (9223) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9233) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9243) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9243) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 06 27 d6 
D (9253) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9263) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9303) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9303) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9303) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9313) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9323) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (9323) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (9333) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66841
D (9343) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9343) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (9353) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9353) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9363) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9363) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9373) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 
D (9383) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140212
D (9393) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9393) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (9413) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (9473) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9473) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9473) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (9473) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9483) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9493) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9493) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (9503) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9513) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9553) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9553) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9553) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9563) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9573) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (9573) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (9583) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66794
D (9593) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9593) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (9603) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9603) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9613) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9613) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9623) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (9633) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140153
D (9643) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9643) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (9663) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (9663) TEST_COMMON: CHAR #0, value is ok.
D (9683) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9683) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9683) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (9693) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9693) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9703) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9703) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (9713) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9723) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9763) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9773) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9773) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9773) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9783) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (9783) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (9793) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66869
D (9803) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9803) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (9813) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9813) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9823) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9833) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9833) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (9843) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140228
D (9853) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9853) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (9873) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (9873) TEST_COMMON: CHAR #1, value is ok.
D (9893) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9893) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9893) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (9903) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9903) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9913) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9923) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (9923) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9933) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9983) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9983) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9983) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9983) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9993) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (10003) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (10003) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68042
D (10013) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10023) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (10023) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10033) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10033) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10043) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10043) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (10053) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 141922
D (10073) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10073) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (10093) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (10093) TEST_COMMON: CHAR #2, value is ok.
D (10093) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10113) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10113) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (10113) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10123) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10123) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (10133) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (10143) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10143) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10193) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10193) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (10193) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10203) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10203) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (10213) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (10223) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68025
D (10223) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10233) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (10243) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10243) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10253) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10253) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10263) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (10273) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142425
D (10283) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10283) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (10303) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (10303) TEST_COMMON: CHAR #3, value is ok.
D (10323) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10323) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10323) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 07 
D (10333) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10333) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10343) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (10343) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 07 e6 16 
D (10353) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10363) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10413) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10413) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (10413) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10413) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10423) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (10433) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (10433) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68014
D (10443) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10453) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (10453) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10463) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10463) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10473) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10473) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 
D (10483) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142414
D (10503) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10503) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (10523) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (10583) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10583) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10583) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (10583) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10593) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10603) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10603) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (10613) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10623) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10663) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10663) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (10663) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (10673) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10673) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (10683) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (10693) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66428
D (10693) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10703) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (10713) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10713) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10723) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10723) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10733) mbm_error_cb_request_success: 03 00 00 00 01 
D (10733) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138647
D (10753) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10753) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (10773) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (10773) TEST_COMMON: CHAR #0, value is ok.
D (10793) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10793) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10793) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (10793) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10803) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10813) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10813) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (10823) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10833) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10873) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10873) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (10873) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (10883) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10893) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (10893) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (10903) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66380
D (10903) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10913) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (10923) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10923) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10933) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10933) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10943) mbm_error_cb_request_success: 03 00 01 00 01 
D (10943) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138615
D (10963) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10963) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (10983) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (10983) TEST_COMMON: CHAR #1, value is ok.
D (11003) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11003) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11003) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (11013) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11013) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11023) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11023) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (11033) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11043) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11083) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11083) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (11083) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (11093) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11103) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (11103) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (11113) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66372
D (11123) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11123) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (11133) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11133) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11143) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11143) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11153) mbm_error_cb_request_success: 03 00 02 00 01 
D (11163) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138607
D (11173) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11173) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (11193) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (11193) TEST_COMMON: CHAR #2, value is ok.
D (11213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11213) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (11223) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11223) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11233) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11233) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (11243) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11253) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11293) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11293) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (11293) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (11303) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11313) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (11313) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (11323) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66449
D (11333) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11333) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (11343) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11343) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11353) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11353) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11363) mbm_error_cb_request_success: 03 00 03 00 01 
D (11373) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138684
D (11383) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11383) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (11403) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (11403) TEST_COMMON: CHAR #3, value is ok.
D (11423) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11423) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11423) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 08 
D (11433) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11433) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11443) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (11453) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 08 a6 12 
D (11453) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11463) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11513) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11513) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (11513) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11523) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11523) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (11533) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (11533) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68054
D (11543) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11553) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (11553) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11563) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11563) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11573) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11583) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 
D (11583) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142467
D (11603) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11603) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (11623) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (11683) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11683) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11683) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (11683) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11693) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11703) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (11703) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (11713) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11723) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11763) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11773) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (11773) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11773) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11783) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (11783) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (11793) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68034
D (11803) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11813) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (11813) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11813) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11823) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11833) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11833) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (11843) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142436
D (11863) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11863) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (11863) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (11883) TEST_COMMON: CHAR #0, value is ok.
D (11883) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11903) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11903) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (11903) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11903) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11913) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (11923) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (11923) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11933) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11983) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11983) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (11983) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11993) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11993) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12003) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (12003) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68075
D (12013) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12023) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (12023) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12033) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12043) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12043) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12053) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (12053) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140148
D (12073) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12073) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (12093) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (12093) TEST_COMMON: CHAR #1, value is ok.
D (12093) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12113) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12113) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (12113) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12123) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12133) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (12133) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (12143) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12153) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12193) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12193) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12203) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12203) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12213) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12213) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (12223) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68082
D (12233) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12233) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (12243) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12243) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12253) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12263) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12263) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (12273) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142484
D (12293) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12293) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (12293) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (12313) TEST_COMMON: CHAR #2, value is ok.
D (12313) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12333) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12333) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (12333) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12333) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12343) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (12353) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (12353) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12363) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12413) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12413) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12413) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12423) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12423) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12433) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (12433) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68006
D (12443) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12453) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (12453) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12463) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12463) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12473) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12483) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (12483) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139530
D (12503) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12503) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (12523) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (12523) TEST_COMMON: CHAR #3, value is ok.
D (12523) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12543) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12543) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 09 
D (12543) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12553) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12553) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (12563) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 09 67 d2 
D (12573) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12583) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12623) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12623) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12623) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12633) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12643) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12643) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (12653) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68014
D (12663) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12663) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (12673) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12673) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12683) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12683) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12693) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 
D (12703) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142414
D (12713) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12713) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (12733) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (12793) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12793) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12793) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (12793) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12803) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12813) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12813) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (12823) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12833) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12873) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12873) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (12873) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (12883) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12883) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (12893) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (12903) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66402
D (12903) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12913) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (12923) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12923) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12933) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12933) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12943) mbm_error_cb_request_success: 03 00 00 00 01 
D (12943) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138621
D (12963) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12963) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (12983) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (12983) TEST_COMMON: CHAR #0, value is ok.
D (13003) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13003) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13003) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (13003) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13013) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13023) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13023) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (13033) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13043) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13083) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13083) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (13083) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (13093) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13103) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (13103) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (13113) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66380
D (13113) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13123) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (13133) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13133) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13143) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13143) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13153) mbm_error_cb_request_success: 03 00 01 00 01 
D (13153) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138614
D (13173) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13173) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (13193) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (13193) TEST_COMMON: CHAR #1, value is ok.
D (13213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13213) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13213) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (13223) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13223) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13233) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13233) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (13243) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13253) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13293) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13293) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (13293) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (13303) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13313) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (13313) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (13323) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66372
D (13333) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13333) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (13343) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13343) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13353) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13353) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13363) mbm_error_cb_request_success: 03 00 02 00 01 
D (13373) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138606
D (13383) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13383) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (13403) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (13403) TEST_COMMON: CHAR #2, value is ok.
D (13423) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13423) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13423) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (13433) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13433) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13443) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13443) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (13453) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13463) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13503) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13503) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (13503) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (13513) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13523) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (13523) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (13533) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66450
D (13543) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13543) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (13553) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13553) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13563) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13563) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13573) mbm_error_cb_request_success: 03 00 03 00 01 
D (13583) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138684
D (13593) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13593) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (13613) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (13613) TEST_COMMON: CHAR #3, value is ok.
D (13633) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13633) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13633) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 0a 
D (13643) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13643) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13653) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (13663) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 0a 27 d3 
D (13663) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13673) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13723) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13723) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (13723) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13733) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13733) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (13743) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (13743) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 67984
D (13753) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13763) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (13763) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13773) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13773) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13783) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13793) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a 
D (13793) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142397
D (13813) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13813) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (13833) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (13893) TEST_COMMON: Destroy master, inst: 0x3ffaff5c.
D (13893) mb_port.serial: mbm_rtu@0x3ffaff5c, suspend port.
D (13893) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
./main/test_modbus_rs485_comm_master_slave.c:126:Modbus RS485 RTU multi device master - slave case.:PASS
Test ran in 13093ms</system-out></testcase><testcase file="./main/test_modbus_rs485_comm_master_slave.c" line="191" time="14.367" name="Modbus RS485 ASCII multi device master - slave case."><system-out>Please press "Enter" key once any board send this signal.

D (1353) TEST_COMMON: Notify task start 0x3ffbaee8
D (1353) TEST_COMMON: Task: 0x3ffbaee8, get notify value = 1
D (1353) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1353) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (1363) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (1373) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1373) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (1383) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (1393) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (1393) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 732943
D (1403) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (1413) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1413) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1423) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1423) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (1433) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (1443) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1443) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (1453) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (1463) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (1473) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (1473) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1483) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 102347
I (1493) SLAVE: OBJ 0x3ffaff5c, WRITE (784811 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (1583) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1583) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (1583) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (1593) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1593) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (1603) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (1613) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (1623) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (1623) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 130747
D (1633) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (1633) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1643) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1653) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1653) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (1663) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (1673) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1673) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (1683) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (1693) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (1693) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (1703) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1703) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (1713) SLAVE: OBJ 0x3ffaff5c, WRITE (1012803 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (1813) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1813) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (1813) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (1813) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1823) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (1833) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (1833) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (1843) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (1853) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 128791
D (1863) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (1863) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1873) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1873) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1883) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (1893) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (1893) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1903) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (1903) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (1913) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (1923) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (1923) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1933) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (1943) SLAVE: OBJ 0x3ffaff5c, WRITE (1238839 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (2033) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2033) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (2033) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (2043) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2053) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2053) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (2063) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (2073) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (2073) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 128791
D (2083) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (2093) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2093) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (2103) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2103) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (2113) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (2123) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2123) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2133) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2143) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (2153) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2153) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2163) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (2123) SLAVE: OBJ 0x3ffaff5c, WRITE (1464875 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (2263) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2263) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2263) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2273) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2273) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2283) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2293) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (2293) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2303) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 130182
D (2313) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (2313) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2323) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2323) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2333) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (2343) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (2343) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2353) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2353) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (2363) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (2373) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2383) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (2383) SLAVE: OBJ 0x3ffaff5c, READ (1689871 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (2483) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2483) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2483) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2493) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2503) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2503) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2513) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (2523) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2523) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131915
D (2533) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (2533) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2543) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2553) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2553) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (2563) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (2573) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2573) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2583) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (2583) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (2593) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2603) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (2603) SLAVE: OBJ 0x3ffaff5c, READ (1911739 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (2703) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2703) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2713) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2713) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2723) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2723) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2733) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (2743) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2743) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131849
D (2753) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (2763) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2763) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2773) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2773) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (2783) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (2793) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2793) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2803) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (2813) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (2813) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2823) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (2833) SLAVE: OBJ 0x3ffaff5c, READ (2133541 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (2933) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2933) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2933) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2933) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2943) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2953) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2953) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (2963) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2963) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131850
D (2973) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (2983) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2983) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2993) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (3003) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (3003) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (3013) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3013) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3023) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (3033) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (3043) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3043) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101648
I (3053) SLAVE: OBJ 0x3ffaff5c, READ (2355351 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (3153) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3153) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3153) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3163) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3163) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3173) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3183) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (3183) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 30 45 38 0d 0a 
D (3193) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133169
D (3203) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 00 
D (3203) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3213) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3213) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3223) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (3233) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (3233) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3243) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3253) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3253) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (3263) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (3273) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3273) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (3283) SLAVE: OBJ 0x3ffaff5c, WRITE (2580896 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x0), SIZE:1
D (3423) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3423) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3423) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3433) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3433) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3443) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3453) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (3453) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (3463) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 173902
D (3473) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (3473) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3483) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3493) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3493) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (3503) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (3513) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3513) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3523) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3523) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (3533) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (3543) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3543) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (3553) SLAVE: OBJ 0x3ffaff5c, WRITE (2852042 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (3653) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3653) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3653) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3663) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3663) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3673) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3683) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (3693) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (3693) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133650
D (3703) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (3713) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3713) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3723) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3723) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (3733) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (3743) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3743) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3753) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3763) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (3763) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (3773) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3773) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (3783) SLAVE: OBJ 0x3ffaff5c, WRITE (3082936 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (3883) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3883) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3883) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3893) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3893) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3903) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3913) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (3923) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (3923) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133650
D (3933) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (3943) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3943) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3953) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3953) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (3963) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (3973) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3973) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3983) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3993) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (3993) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4003) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4003) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (4013) SLAVE: OBJ 0x3ffaff5c, WRITE (3313830 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (4113) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4113) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (4113) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (4123) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4133) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4133) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (4143) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (4153) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (4153) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (4163) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (4173) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4173) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (4183) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4183) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (4193) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (4203) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4203) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4213) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4223) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (4233) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4233) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4233) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (4243) SLAVE: OBJ 0x3ffaff5c, WRITE (3544724 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (4343) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4343) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (4343) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (4353) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4363) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4363) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (4373) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (4383) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 31 45 37 0d 0a 
D (4383) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (4393) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 01 
D (4403) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4403) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (4413) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4423) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (4423) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (4433) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4443) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4443) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4453) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (4463) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4463) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4473) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (4473) SLAVE: OBJ 0x3ffaff5c, WRITE (3775617 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x1), SIZE:1
D (4623) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4623) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (4623) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4633) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4633) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4643) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (4653) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (4653) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4663) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 177856
D (4673) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (4673) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4683) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4683) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4693) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (4703) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (4703) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4713) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4713) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (4723) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (4733) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4733) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (4703) SLAVE: OBJ 0x3ffaff5c, READ (4048287 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (4843) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4843) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (4843) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4853) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4853) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4863) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (4873) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (4883) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4883) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131854
D (4893) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (4893) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4903) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4903) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4913) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (4923) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (4923) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4933) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4943) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (4943) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (4953) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4963) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101648
I (4963) SLAVE: OBJ 0x3ffaff5c, READ (4270093 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (5063) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5063) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (5063) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5073) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5083) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5083) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (5093) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (5103) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5103) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131845
D (5113) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (5113) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5123) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (5133) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (5133) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (5143) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (5153) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5153) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5163) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (5163) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (5173) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5183) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (5183) SLAVE: OBJ 0x3ffaff5c, READ (4491892 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (5283) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5283) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (5293) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5293) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5303) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5303) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (5313) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (5323) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5323) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131849
D (5333) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (5343) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5343) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (5353) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (5353) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (5363) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (5373) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5373) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5383) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (5393) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (5393) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5403) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101648
I (5413) SLAVE: OBJ 0x3ffaff5c, READ (4713694 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (5513) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5513) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (5513) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (5523) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5523) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5533) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (5533) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (5543) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 32 45 36 0d 0a 
D (5553) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133169
D (5563) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 02 
D (5563) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5573) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5573) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5583) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (5593) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (5593) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5603) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5603) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (5613) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (5623) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (5623) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5633) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (5643) SLAVE: OBJ 0x3ffaff5c, WRITE (4939247 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x2), SIZE:1
D (5783) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5783) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (5783) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (5793) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5793) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5803) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (5813) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (5813) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (5823) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 175567
D (5833) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (5833) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5843) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5853) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5853) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (5863) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (5873) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5873) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5883) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (5883) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (5893) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (5903) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5903) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (5913) SLAVE: OBJ 0x3ffaff5c, WRITE (5212059 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (6013) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6013) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6013) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6023) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6023) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6033) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6043) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (6053) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (6053) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (6063) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (6073) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6073) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6083) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6083) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (6093) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (6103) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6103) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6113) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6123) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (6123) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6133) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6133) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6143) SLAVE: OBJ 0x3ffaff5c, WRITE (5442952 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (6243) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6243) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6243) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6253) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6253) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6263) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6273) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (6283) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (6283) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (6293) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (6303) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6303) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6313) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6313) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (6323) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (6333) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6333) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6343) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6353) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (6353) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6363) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6363) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6373) SLAVE: OBJ 0x3ffaff5c, WRITE (5673846 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (6473) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6473) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6473) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6483) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6493) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6493) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6503) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (6513) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (6513) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133650
D (6523) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (6533) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6533) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6543) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6543) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (6553) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (6563) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6563) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6573) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6583) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (6593) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6593) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6603) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6603) SLAVE: OBJ 0x3ffaff5c, WRITE (5904740 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (6703) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6703) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6703) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6713) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6723) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6723) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6733) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (6743) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 33 45 35 0d 0a 
D (6743) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133650
D (6753) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 03 
D (6763) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6763) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6773) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6783) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (6783) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (6793) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6803) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6803) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6813) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (6823) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6823) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6833) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6833) SLAVE: OBJ 0x3ffaff5c, WRITE (6135634 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x3), SIZE:1
D (6983) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6983) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (6983) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6993) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6993) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7003) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7013) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (7013) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7023) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 177856
D (7033) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (7033) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7043) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7043) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7053) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (7063) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (7063) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7073) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7073) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7083) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (7093) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7093) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (7063) SLAVE: OBJ 0x3ffaff5c, READ (6408304 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (7203) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7203) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (7203) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7213) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7213) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7223) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7233) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (7243) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7243) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131853
D (7253) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (7253) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7263) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7263) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7273) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (7283) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (7283) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7293) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7303) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7303) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (7313) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7323) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (7323) SLAVE: OBJ 0x3ffaff5c, READ (6630110 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (7423) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7423) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (7423) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7433) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7443) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7443) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7453) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (7463) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7463) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131846
D (7473) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (7473) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7483) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7493) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7493) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (7503) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (7513) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7513) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7523) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7523) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (7533) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7543) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101648
I (7543) SLAVE: OBJ 0x3ffaff5c, READ (6851908 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (7643) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7643) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (7653) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7653) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7663) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7663) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7673) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (7683) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7683) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131849
D (7693) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (7703) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7703) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7713) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7713) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (7723) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (7733) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7733) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7743) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7753) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (7753) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7763) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (7773) SLAVE: OBJ 0x3ffaff5c, READ (7073711 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (7873) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7873) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (7873) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (7883) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7883) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7893) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (7893) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (7903) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 34 45 34 0d 0a 
D (7913) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133169
D (7923) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 04 
D (7923) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7933) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7933) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7943) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (7953) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (7953) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7963) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7963) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7973) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (7983) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7983) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7993) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (8003) SLAVE: OBJ 0x3ffaff5c, WRITE (7299264 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x4), SIZE:1
D (8143) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8143) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8143) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8153) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8153) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8163) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8173) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (8173) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (8183) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 175567
D (8193) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (8193) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8203) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8213) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8213) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (8223) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (8233) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8233) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8243) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8243) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (8253) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8263) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8263) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (8273) SLAVE: OBJ 0x3ffaff5c, WRITE (7572075 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (8373) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8373) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8373) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8383) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8383) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8393) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8403) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (8413) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (8413) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133650
D (8423) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (8433) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8433) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8443) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8443) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (8453) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (8463) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8463) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8473) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8483) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (8483) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8493) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8493) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (8503) SLAVE: OBJ 0x3ffaff5c, WRITE (7802969 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (8603) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8603) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8603) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8613) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8613) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8623) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8633) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (8643) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (8643) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (8653) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (8663) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8663) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8673) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8673) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (8683) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (8693) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8693) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8703) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8713) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (8713) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8723) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8723) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (8733) SLAVE: OBJ 0x3ffaff5c, WRITE (8033863 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (8833) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8833) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8833) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8843) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8853) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8853) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8863) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (8873) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (8873) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (8883) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (8893) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8893) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8903) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8903) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (8913) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (8923) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8923) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8933) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8943) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (8953) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8953) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8963) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (8963) SLAVE: OBJ 0x3ffaff5c, WRITE (8264756 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (9063) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9063) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (9063) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (9073) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9083) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9083) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (9093) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (9103) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 35 45 33 0d 0a 
D (9103) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133649
D (9113) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 05 
D (9123) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9123) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9133) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9143) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (9143) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (9153) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9163) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9163) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9173) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (9183) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9183) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9193) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (9193) SLAVE: OBJ 0x3ffaff5c, WRITE (8495650 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x5), SIZE:1
D (9343) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9343) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (9343) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9353) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9353) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9363) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (9373) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (9373) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9383) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 177856
D (9393) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (9393) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9403) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9403) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9413) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (9423) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (9423) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9433) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9433) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (9443) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (9453) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9453) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (9423) SLAVE: OBJ 0x3ffaff5c, READ (8768320 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (9563) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9563) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (9563) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9573) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9573) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9583) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (9593) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (9603) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9603) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131854
D (9613) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (9613) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9623) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9623) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9633) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (9643) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (9643) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9653) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9663) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (9663) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (9673) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9683) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101648
I (9683) SLAVE: OBJ 0x3ffaff5c, READ (8990126 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (9783) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9783) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (9783) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9793) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9803) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9803) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (9813) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (9823) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9823) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131845
D (9833) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (9833) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9843) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9853) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9853) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (9863) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (9873) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9873) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9883) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (9883) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (9893) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9903) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101649
I (9903) SLAVE: OBJ 0x3ffaff5c, READ (9211925 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (10003) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10003) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (10013) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10013) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10023) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10023) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (10033) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (10043) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10043) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 132285
D (10053) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (10063) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10063) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (10073) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10073) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (10083) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (10093) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10093) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10103) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (10113) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (10123) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10123) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (10133) SLAVE: OBJ 0x3ffaff5c, READ (9434857 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (10233) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10233) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10233) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10243) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10243) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10253) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (10263) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (10273) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 36 45 32 0d 0a 
D (10273) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 134799
D (10283) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 06 
D (10293) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10293) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10303) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10303) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (10313) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (10323) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10323) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10333) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (10343) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (10343) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (10353) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10353) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (10363) SLAVE: OBJ 0x3ffaff5c, WRITE (9663255 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x6), SIZE:1
D (10513) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10513) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10513) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10523) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10523) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10533) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (10543) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (10553) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (10553) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 181621
D (10563) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (10573) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10573) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10583) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10583) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (10593) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (10603) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10603) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10613) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (10623) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (10623) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (10633) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10633) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (10603) SLAVE: OBJ 0x3ffaff5c, WRITE (9943423 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (10743) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10743) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10753) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10753) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10763) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10763) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (10773) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (10783) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (10793) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135682
D (10793) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (10803) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10803) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10813) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10823) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (10833) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (10833) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10843) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10843) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (10853) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (10863) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (10863) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10873) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (10883) SLAVE: OBJ 0x3ffaff5c, WRITE (10177652 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (10983) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10983) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10983) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10993) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10993) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11003) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (11013) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (11013) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (11023) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135674
D (11033) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (11033) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11043) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11053) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11053) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (11063) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (11073) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11073) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11083) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11083) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (11093) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11103) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11103) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (11113) SLAVE: OBJ 0x3ffaff5c, WRITE (10411873 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (11213) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11213) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (11213) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (11223) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11233) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11233) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (11243) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (11253) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (11253) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135678
D (11263) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (11273) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11273) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11283) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11293) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (11293) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (11303) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11313) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11313) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11323) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (11333) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11333) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11343) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (11343) SLAVE: OBJ 0x3ffaff5c, WRITE (10646098 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (11453) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11453) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (11453) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (11463) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11463) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11473) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (11473) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (11483) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 37 45 31 0d 0a 
D (11493) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135678
D (11503) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 07 
D (11503) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11513) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11513) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11523) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (11533) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (11533) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11543) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11553) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11553) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (11563) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11573) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11573) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (11583) SLAVE: OBJ 0x3ffaff5c, WRITE (10880323 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x7), SIZE:1
D (11723) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11723) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (11723) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11733) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11733) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11743) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (11753) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (11753) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11763) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 173222
D (11773) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (11773) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11783) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11783) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11793) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (11803) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (11803) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11813) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11823) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (11823) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (11833) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11843) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (11843) SLAVE: OBJ 0x3ffaff5c, READ (11149661 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (11943) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11943) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (11953) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11953) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11963) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11963) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (11973) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (11983) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11983) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133827
D (11993) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (12003) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12003) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12013) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12013) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (12023) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (12033) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12033) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12043) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (12053) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (12063) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12063) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (12073) SLAVE: OBJ 0x3ffaff5c, READ (11374656 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (12173) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12173) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (12173) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12183) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12183) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12193) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (12203) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (12203) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12213) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133827
D (12223) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (12223) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12233) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12233) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12243) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (12253) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (12253) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12263) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12273) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (12273) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (12283) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12293) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (12293) SLAVE: OBJ 0x3ffaff5c, READ (11599651 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (12393) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12393) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (12403) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12403) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12413) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12413) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (12423) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (12433) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12433) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133827
D (12443) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (12453) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12453) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12463) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12463) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (12473) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (12483) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12483) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12493) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (12503) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (12513) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12513) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (12523) SLAVE: OBJ 0x3ffaff5c, READ (11824646 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (12623) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12623) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (12623) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (12633) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12633) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12643) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (12653) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (12663) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 38 45 30 0d 0a 
D (12663) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135146
D (12673) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 08 
D (12683) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12683) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12693) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12693) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (12703) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (12713) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12713) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12723) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (12733) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (12733) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (12743) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12743) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (12753) SLAVE: OBJ 0x3ffaff5c, WRITE (12053391 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x8), SIZE:1
D (12903) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12903) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (12903) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (12913) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12913) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12923) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (12933) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (12943) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (12943) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 181483
D (12953) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (12963) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12963) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12973) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12973) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c28, 1
D (12983) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (12993) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12993) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13003) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13013) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (13013) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13023) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13023) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (12993) SLAVE: OBJ 0x3ffaff5c, WRITE (12333420 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (13133) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13133) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13143) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13143) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13153) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13153) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13163) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (13173) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (13183) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135682
D (13183) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (13193) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13193) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13203) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13213) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2a, 1
D (13223) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (13223) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13233) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13233) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13243) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (13253) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13253) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13263) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (13273) SLAVE: OBJ 0x3ffaff5c, WRITE (12567649 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (13373) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13373) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13373) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13383) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13383) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13393) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13403) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (13403) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (13413) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135674
D (13423) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (13423) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13433) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13443) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13443) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2c, 1
D (13453) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (13463) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13463) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13473) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13473) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (13483) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13493) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13493) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (13503) SLAVE: OBJ 0x3ffaff5c, WRITE (12801870 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (13603) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13603) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13603) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13613) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13623) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13623) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13633) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (13643) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (13643) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135678
D (13653) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (13663) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13663) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13673) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13683) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c2e, 1
D (13683) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (13693) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13703) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13703) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13713) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (13723) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13723) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13733) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (13733) SLAVE: OBJ 0x3ffaff5c, WRITE (13036095 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (13843) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13843) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13843) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13853) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13853) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13863) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13863) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (13873) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 39 44 46 0d 0a 
D (13883) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135678
D (13893) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 09 
D (13893) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13903) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13903) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13913) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (13923) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (13923) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13933) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13943) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13943) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (13953) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13963) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13963) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (13973) SLAVE: OBJ 0x3ffaff5c, WRITE (13270320 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2c30(0x9), SIZE:1
D (14113) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14113) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14113) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14123) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14123) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14133) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14143) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (14143) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14153) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 173292
D (14163) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (14163) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14173) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14173) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14183) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c28, 1
D (14193) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (14193) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14203) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14213) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14213) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (14223) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14233) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (14233) SLAVE: OBJ 0x3ffaff5c, READ (13539728 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2c28(0x1111), SIZE:1
D (14333) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14333) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14343) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14343) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14353) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14353) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14363) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (14373) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14373) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133826
D (14383) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (14393) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14393) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14403) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14403) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2a, 1
D (14413) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (14423) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14423) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14433) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14443) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (14453) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14453) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (14463) SLAVE: OBJ 0x3ffaff5c, READ (13764723 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2c2a(0x2222), SIZE:1
D (14563) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14563) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14563) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14573) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14573) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14583) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14593) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (14593) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14603) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133826
D (14613) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (14613) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14623) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14623) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14633) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2c, 1
D (14643) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (14643) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14653) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14663) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14663) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (14673) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14683) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103038
I (14683) SLAVE: OBJ 0x3ffaff5c, READ (13989717 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2c2c(0x3333), SIZE:1
D (14783) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14783) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14793) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14793) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14803) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14803) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14813) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (14823) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14823) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133827
D (14833) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (14843) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14843) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14853) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14853) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2c2e, 1
D (14863) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (14873) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14873) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14883) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14893) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (14903) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14903) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103037
I (14913) SLAVE: OBJ 0x3ffaff5c, READ (14214712 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2c2e(0x4444), SIZE:1
D (15013) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (15013) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (15013) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (15023) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (15023) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (15033) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (15043) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (15053) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 41 44 45 0d 0a 
D (15053) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135146
D (15063) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 0a 
D (15073) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (15073) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (15083) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (15083) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2c30, 1
D (15093) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (15103) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (15103) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (15113) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (15123) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (15123) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (15133) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (15133) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
D (15143) TEST_COMMON: Stop slave: 0x3ffaff5c.
I (15223) TEST_COMMON: Destroy slave, inst: 0x3ffaff5c.
D (15223) mb_port.serial: mbs_ascii@0x3ffaff5c, suspend port.
D (15223) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (15233) TEST_COMMON: Notify task done, inst: 0x3ffbaee8.
./main/test_modbus_rs485_comm_master_slave.c:191:Modbus RS485 ASCII multi device master - slave case.:PASS
Test ran in 14148ms

&amp;lt;-------------------&amp;gt;

D (1223) TEST_COMMON: Notify task start 0x3ffbaeb0
D (1223) TEST_COMMON: Task: 0x3ffbaeb0, get notify value = 1
D (1243) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1243) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1243) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (1253) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1253) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1263) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1273) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (1273) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (1283) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1293) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1343) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1343) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (1343) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (1353) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1353) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (1363) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (1373) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (1373) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71542
D (1383) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1383) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (1393) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1393) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1403) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1413) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (1413) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (1423) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 160102
D (1443) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1443) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (1443) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (1463) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1463) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1483) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (1483) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1483) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1493) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1493) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (1503) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (1513) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1513) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1573) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1573) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (1573) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (1573) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1583) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (1593) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (1593) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (1603) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 72066
D (1613) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1613) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (1623) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1623) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1633) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1633) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (1643) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (1653) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152925
D (1663) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1663) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (1683) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (1683) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1703) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1703) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (1703) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1713) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1713) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1723) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (1733) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (1733) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1743) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1793) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1793) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (1793) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (1803) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1803) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (1813) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (1823) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (1823) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70187
D (1833) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1843) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (1843) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1853) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1853) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1863) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (1873) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (1873) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158776
D (1893) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1893) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (1913) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (1913) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1913) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1933) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (1933) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1933) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1943) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1953) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (1953) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (1963) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1973) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2023) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2023) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (2023) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2033) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2033) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (2043) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (2053) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2053) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70195
D (2063) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2063) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (2073) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2073) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2083) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2093) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2093) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (2103) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 154963
D (2123) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2123) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (2123) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (2143) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2143) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2163) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (2163) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2163) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2163) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2173) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (2183) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2183) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2193) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2243) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2243) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2243) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2253) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2263) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2263) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (2273) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71085
D (2283) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2283) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (2293) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2293) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2303) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2303) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2313) mbm_error_cb_request_success: 03 00 00 00 01 
D (2323) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 144694
D (2333) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2333) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (2353) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (2353) TEST_COMMON: CHAR #0, value is ok.
D (2373) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2373) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2373) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (2383) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2383) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2393) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2403) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (2403) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2413) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2423) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2463) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2463) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2463) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2473) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2483) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2483) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (2493) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68458
D (2503) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2513) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (2513) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2523) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2523) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2533) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2533) mbm_error_cb_request_success: 03 00 01 00 01 
D (2543) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149877
D (2563) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2563) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (2563) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (2583) TEST_COMMON: CHAR #1, value is ok.
D (2583) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2603) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2603) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (2603) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2613) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2613) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2623) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (2633) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2633) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2643) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2693) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2693) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2693) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2693) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2703) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2713) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (2713) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68384
D (2723) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2733) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (2733) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2743) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2743) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2753) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2763) mbm_error_cb_request_success: 03 00 02 00 01 
D (2763) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 148185
D (2783) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2783) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (2803) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (2803) TEST_COMMON: CHAR #2, value is ok.
D (2803) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2823) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2823) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (2823) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2833) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2833) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2843) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (2853) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2853) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2863) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2913) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2913) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2913) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2923) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2923) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2933) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (2943) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68392
D (2943) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2953) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (2953) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2963) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2973) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2973) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2983) mbm_error_cb_request_success: 03 00 03 00 01 
D (2983) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149811
D (3003) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3003) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (3023) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (3023) TEST_COMMON: CHAR #3, value is ok.
D (3023) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3043) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3043) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 00 
D (3043) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3053) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3063) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3063) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (3073) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 30 45 38 0d 0a 
D (3083) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3083) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3133) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3133) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3133) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3143) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3153) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3153) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (3163) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3173) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70204
D (3173) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3183) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (3193) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3193) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3203) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3203) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3213) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 
D (3213) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158844
D (3233) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3233) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (3253) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (3313) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3313) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3313) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (3313) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3323) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3333) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3333) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (3343) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (3353) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3353) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3403) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3403) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3413) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3413) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3423) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3423) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (3433) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3443) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70212
D (3443) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3453) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (3463) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3463) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3473) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3473) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3483) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (3493) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158844
D (3503) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3503) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (3523) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (3523) TEST_COMMON: CHAR #0, value is ok.
D (3543) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3543) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3543) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (3553) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3553) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3563) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3563) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (3573) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (3583) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3593) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3643) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3643) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3643) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3643) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3653) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3663) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (3663) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3673) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70184
D (3683) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3683) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (3693) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3693) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3703) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3703) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3713) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (3723) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158815
D (3733) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3733) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (3753) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (3753) TEST_COMMON: CHAR #1, value is ok.
D (3773) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3773) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3773) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (3783) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3783) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3793) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3803) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (3803) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (3813) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3823) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3873) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3873) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3873) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3873) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3883) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3893) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (3893) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3903) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70192
D (3913) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3913) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (3923) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3923) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3933) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3933) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3943) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (3953) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158823
D (3963) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3963) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (3983) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (3983) TEST_COMMON: CHAR #2, value is ok.
D (4003) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4003) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4003) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (4013) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4013) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4023) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (4033) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (4033) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (4043) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4053) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4103) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4103) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (4103) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4103) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4113) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (4123) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (4133) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4133) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70184
D (4143) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4143) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (4153) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4153) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4163) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4173) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4173) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (4183) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158815
D (4203) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4203) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (4203) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (4223) TEST_COMMON: CHAR #3, value is ok.
D (4223) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4223) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4243) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 01 
D (4243) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4243) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4253) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (4263) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (4273) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 31 45 37 0d 0a 
D (4273) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4283) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4333) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4333) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (4333) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4343) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4343) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (4353) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (4363) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4363) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70189
D (4373) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4383) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (4383) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4393) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4393) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4403) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4403) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 
D (4413) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155695
D (4433) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4433) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (4433) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (4513) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4513) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4513) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (4513) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4523) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4533) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4533) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (4543) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4553) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4553) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4603) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4603) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (4603) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (4613) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4613) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (4623) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (4633) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68372
D (4643) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4643) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (4653) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4653) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4663) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4663) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4673) mbm_error_cb_request_success: 03 00 00 00 01 
D (4683) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149779
D (4693) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4693) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (4713) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (4713) TEST_COMMON: CHAR #0, value is ok.
D (4733) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4733) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4733) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (4743) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4743) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4753) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4753) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (4763) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4773) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4773) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4823) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4823) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (4823) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (4833) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4843) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (4843) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (4853) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68399
D (4863) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4863) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (4873) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4873) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4883) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4893) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4893) mbm_error_cb_request_success: 03 00 01 00 01 
D (4903) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149811
D (4913) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4913) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (4933) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (4933) TEST_COMMON: CHAR #1, value is ok.
D (4953) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4953) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4953) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (4963) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4963) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4973) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4983) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (4983) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4993) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5003) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5043) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5043) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (5053) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (5053) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5063) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (5063) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (5073) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68384
D (5083) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5093) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (5093) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5103) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5103) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5113) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5113) mbm_error_cb_request_success: 03 00 02 00 01 
D (5123) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149802
D (5143) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5143) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (5143) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (5163) TEST_COMMON: CHAR #2, value is ok.
D (5163) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5183) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5183) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (5183) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5193) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5193) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (5203) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (5213) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (5213) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5223) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5273) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5273) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (5273) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (5273) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5283) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (5293) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (5293) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68393
D (5303) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5313) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (5313) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5323) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5323) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5333) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5343) mbm_error_cb_request_success: 03 00 03 00 01 
D (5343) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 148349
D (5363) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5363) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (5383) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (5383) TEST_COMMON: CHAR #3, value is ok.
D (5383) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5403) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5403) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 02 
D (5403) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5413) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5413) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (5423) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (5433) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 32 45 36 0d 0a 
D (5433) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5443) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5493) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5493) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (5493) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5503) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5503) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (5513) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (5523) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5523) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70205
D (5533) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5543) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (5543) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5553) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5553) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5563) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5573) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 
D (5573) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158845
D (5593) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5593) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (5613) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (5673) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5673) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5673) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (5673) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5683) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5693) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (5693) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (5703) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (5713) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5713) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5763) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5763) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (5773) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5773) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5783) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (5783) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (5793) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5803) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70229
D (5803) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5813) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (5823) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5823) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5833) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5833) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5843) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (5853) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158860
D (5863) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5863) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (5883) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (5883) TEST_COMMON: CHAR #0, value is ok.
D (5903) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5903) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5903) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (5913) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5913) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5923) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (5923) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (5933) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (5943) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5953) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6003) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6003) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6003) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6003) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6013) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6023) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (6023) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6033) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70184
D (6043) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6043) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (6053) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6053) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6063) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6063) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6073) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (6083) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158816
D (6093) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6093) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (6113) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (6113) TEST_COMMON: CHAR #1, value is ok.
D (6133) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6133) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6133) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (6143) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6143) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6153) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (6163) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (6163) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (6173) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6183) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6233) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6233) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6233) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6233) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6243) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6253) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (6253) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6263) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70192
D (6273) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6273) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (6283) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6283) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6293) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6293) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6303) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (6313) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158824
D (6323) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6323) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (6343) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (6343) TEST_COMMON: CHAR #2, value is ok.
D (6363) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6363) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6363) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (6373) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6373) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6383) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (6393) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (6393) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (6403) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6413) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6463) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6463) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6463) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6473) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6473) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6483) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (6493) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6493) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70184
D (6503) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6503) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (6513) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6513) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6523) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6533) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6533) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (6543) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158816
D (6563) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6563) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (6563) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (6583) TEST_COMMON: CHAR #3, value is ok.
D (6583) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6583) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6603) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 03 
D (6603) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6603) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6613) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (6623) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (6633) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 33 45 35 0d 0a 
D (6633) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6643) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6693) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6693) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6693) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6703) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6703) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6713) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (6723) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6723) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70188
D (6733) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6743) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (6743) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6753) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6753) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6763) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6763) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 
D (6773) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155711
D (6793) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6793) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (6793) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (6873) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6873) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6873) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (6873) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6883) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6893) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6893) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (6903) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6913) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6913) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6963) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6963) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (6963) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (6973) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6973) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (6983) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (6993) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68392
D (7003) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7003) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (7013) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7013) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7023) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7023) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7033) mbm_error_cb_request_success: 03 00 00 00 01 
D (7043) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149799
D (7053) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7053) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (7073) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (7073) TEST_COMMON: CHAR #0, value is ok.
D (7093) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7093) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7093) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (7103) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7103) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7113) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7113) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (7123) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7133) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7133) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7183) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7183) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (7183) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (7193) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7203) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (7203) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (7213) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68392
D (7223) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7223) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (7233) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7233) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7243) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7253) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7253) mbm_error_cb_request_success: 03 00 01 00 01 
D (7263) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149811
D (7273) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7273) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (7293) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (7293) TEST_COMMON: CHAR #1, value is ok.
D (7313) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7313) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7313) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (7323) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7323) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7333) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7343) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (7343) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7353) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7363) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7403) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7403) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (7413) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (7413) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7423) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (7423) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (7433) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68385
D (7443) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7453) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (7453) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7463) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7463) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7473) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7473) mbm_error_cb_request_success: 03 00 02 00 01 
D (7483) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149803
D (7503) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7503) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (7503) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (7523) TEST_COMMON: CHAR #2, value is ok.
D (7523) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7543) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7543) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (7543) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7553) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7553) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7563) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (7573) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7573) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7583) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7633) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7633) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (7633) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (7633) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7643) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (7653) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (7653) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68392
D (7663) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7673) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (7673) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7683) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7683) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7693) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7703) mbm_error_cb_request_success: 03 00 03 00 01 
D (7703) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 148360
D (7723) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7723) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (7743) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (7743) TEST_COMMON: CHAR #3, value is ok.
D (7743) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7763) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7763) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 04 
D (7763) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7773) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7773) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (7783) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (7793) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 34 45 34 0d 0a 
D (7793) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7803) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7853) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7853) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (7853) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7863) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7863) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (7873) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (7883) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7883) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70205
D (7893) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7903) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (7903) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7913) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7913) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7923) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7933) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 
D (7933) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158844
D (7953) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7953) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (7973) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (8033) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8033) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8033) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (8033) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8043) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8053) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8053) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (8063) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (8073) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8073) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8123) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8123) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8133) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8133) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8143) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8143) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (8153) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8163) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70245
D (8163) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8173) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (8183) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8183) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8193) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8193) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8203) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (8213) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158877
D (8223) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8223) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (8243) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (8243) TEST_COMMON: CHAR #0, value is ok.
D (8263) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8263) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8263) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (8273) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8273) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8283) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8283) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (8293) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (8303) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8313) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8363) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8363) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8363) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8363) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8373) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8383) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (8383) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8393) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70184
D (8403) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8403) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (8413) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8413) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8423) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8423) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8433) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (8443) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158815
D (8453) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8453) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (8473) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (8473) TEST_COMMON: CHAR #1, value is ok.
D (8493) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8493) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8493) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (8503) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8503) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8513) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8523) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (8523) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (8533) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8543) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8593) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8593) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8593) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8593) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8603) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8613) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (8613) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8623) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70199
D (8633) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8633) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (8643) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8643) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8653) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8653) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8663) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (8673) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158823
D (8683) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8683) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (8703) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (8703) TEST_COMMON: CHAR #2, value is ok.
D (8723) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8723) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8723) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (8733) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8733) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8743) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8753) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (8753) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (8763) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8773) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8823) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8823) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8823) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8833) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8833) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8843) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (8853) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8853) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70183
D (8863) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8863) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (8873) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8873) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8883) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8893) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8893) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (8903) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158815
D (8923) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8923) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (8923) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (8943) TEST_COMMON: CHAR #3, value is ok.
D (8943) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8943) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8963) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 05 
D (8963) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8963) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8973) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8983) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (8993) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 35 45 33 0d 0a 
D (8993) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9003) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9053) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9053) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (9053) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9063) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9063) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (9073) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (9083) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9083) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70193
D (9093) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9103) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (9103) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9113) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9113) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9123) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9123) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 
D (9133) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155732
D (9153) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9153) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (9153) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (9233) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9233) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9233) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (9233) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9243) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9253) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9253) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (9263) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9273) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9273) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9323) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9323) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9323) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9333) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9333) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (9343) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (9353) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68404
D (9363) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9363) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (9373) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9373) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9383) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9383) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9393) mbm_error_cb_request_success: 03 00 00 00 01 
D (9403) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149811
D (9413) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9413) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (9433) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (9433) TEST_COMMON: CHAR #0, value is ok.
D (9453) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9453) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9453) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (9463) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9463) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9473) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9473) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (9483) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9493) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9493) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9543) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9543) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9543) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9553) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9563) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (9563) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (9573) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68393
D (9583) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9583) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (9593) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9593) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9603) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9613) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9613) mbm_error_cb_request_success: 03 00 01 00 01 
D (9623) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149811
D (9633) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9633) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (9653) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (9653) TEST_COMMON: CHAR #1, value is ok.
D (9673) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9673) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9673) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (9683) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9683) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9693) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9703) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (9703) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9713) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9723) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9763) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9763) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9773) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9773) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9783) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (9783) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (9793) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68384
D (9803) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9813) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (9813) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9823) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9823) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9833) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9833) mbm_error_cb_request_success: 03 00 02 00 01 
D (9843) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149803
D (9863) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9863) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (9863) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (9883) TEST_COMMON: CHAR #2, value is ok.
D (9883) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9903) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9903) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (9903) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9913) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9913) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9923) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (9933) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9933) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9943) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9993) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9993) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9993) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9993) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10003) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (10013) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (10013) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69642
D (10023) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10033) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (10033) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10043) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10053) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10053) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10063) mbm_error_cb_request_success: 03 00 03 00 01 
D (10063) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150234
D (10083) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10083) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (10103) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (10103) TEST_COMMON: CHAR #3, value is ok.
D (10103) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10123) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10123) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 06 
D (10133) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10133) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10143) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10143) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (10153) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 36 45 32 0d 0a 
D (10163) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10173) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10223) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10223) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10223) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10223) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10233) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10243) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (10243) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10253) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71472
D (10263) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10263) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (10273) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10273) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10283) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10283) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10293) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 
D (10303) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161326
D (10323) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10323) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (10323) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (10403) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10403) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10403) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (10413) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10413) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10423) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10423) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (10433) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (10443) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10453) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10503) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10503) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10503) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10503) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10513) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10523) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (10523) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10533) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71430
D (10543) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10543) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (10553) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10553) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10563) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10573) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10573) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (10583) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161277
D (10603) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10603) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (10603) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (10623) TEST_COMMON: CHAR #0, value is ok.
D (10623) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10643) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10643) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (10643) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10653) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10653) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10663) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (10673) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (10673) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10683) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10733) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10733) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10733) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10743) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10743) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10753) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (10763) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10763) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71436
D (10773) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10783) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (10783) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10793) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10793) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10803) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10813) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (10813) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158831
D (10833) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10833) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (10853) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (10853) TEST_COMMON: CHAR #1, value is ok.
D (10853) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10873) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10873) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (10873) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10883) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10893) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10893) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (10903) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (10913) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10913) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10963) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10963) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10973) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10973) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10983) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10983) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (10993) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11003) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71440
D (11013) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11013) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (11023) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11023) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11033) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11033) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11043) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (11053) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161287
D (11063) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11063) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (11083) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (11083) TEST_COMMON: CHAR #2, value is ok.
D (11103) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11103) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11103) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (11113) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11113) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11123) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (11133) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (11133) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (11143) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11153) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11203) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11203) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (11203) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11213) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11213) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (11223) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (11233) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11233) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71432
D (11243) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11253) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (11253) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11263) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11263) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11273) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11273) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (11283) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161278
D (11303) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11303) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (11323) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (11323) TEST_COMMON: CHAR #3, value is ok.
D (11323) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11343) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11343) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 07 
D (11343) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11353) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11353) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (11363) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (11373) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 37 45 31 0d 0a 
D (11383) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11383) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11433) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11433) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (11433) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11443) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11453) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (11453) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (11463) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11473) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71436
D (11473) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11483) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (11493) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11493) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11503) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11503) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11513) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 
D (11513) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (11533) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11533) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (11553) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (11613) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11613) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11613) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (11613) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11623) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11633) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11633) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (11643) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11653) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11653) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11703) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11703) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (11703) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (11713) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11723) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (11723) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (11733) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69530
D (11743) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11753) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (11753) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11753) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11763) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11773) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11773) mbm_error_cb_request_success: 03 00 00 00 01 
D (11783) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152065
D (11803) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11803) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (11803) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (11823) TEST_COMMON: CHAR #0, value is ok.
D (11823) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11843) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11843) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (11843) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11853) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11853) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11863) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (11873) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11873) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11883) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11933) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11933) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (11933) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (11933) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11943) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (11953) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (11963) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69588
D (11963) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11973) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (11983) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11983) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11993) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11993) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12003) mbm_error_cb_request_success: 03 00 01 00 01 
D (12003) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150383
D (12023) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12023) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (12043) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (12043) TEST_COMMON: CHAR #1, value is ok.
D (12043) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12063) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12063) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (12063) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12073) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12083) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (12083) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (12093) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (12103) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12103) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12153) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12153) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (12153) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (12163) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12173) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (12173) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (12183) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69580
D (12193) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12203) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (12203) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12203) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12213) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12223) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12223) mbm_error_cb_request_success: 03 00 02 00 01 
D (12233) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152127
D (12253) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12253) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (12253) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (12273) TEST_COMMON: CHAR #2, value is ok.
D (12273) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12293) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12293) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (12293) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12303) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12303) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (12313) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (12323) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (12323) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12333) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12383) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12383) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (12383) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (12383) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12393) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (12403) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (12413) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69595
D (12413) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12423) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (12433) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12433) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12443) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12443) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12453) mbm_error_cb_request_success: 03 00 03 00 01 
D (12453) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150373
D (12473) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12473) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (12493) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (12493) TEST_COMMON: CHAR #3, value is ok.
D (12493) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12513) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12513) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 08 
D (12523) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12523) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12533) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (12533) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (12543) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 38 45 30 0d 0a 
D (12553) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12563) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12613) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12613) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (12613) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12613) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12623) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (12633) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (12633) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12643) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71469
D (12653) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12653) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (12663) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12663) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12673) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12683) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12683) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 
D (12693) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161324
D (12713) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12713) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (12713) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (12793) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12793) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12793) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (12803) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12803) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12813) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (12813) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (12823) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (12833) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12843) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12893) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12893) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (12893) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12893) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12903) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (12913) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (12913) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12923) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71428
D (12933) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12933) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (12943) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12943) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12953) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12963) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12963) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (12973) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161274
D (12993) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12993) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (12993) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (13013) TEST_COMMON: CHAR #0, value is ok.
D (13013) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13033) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13033) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (13033) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13043) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13043) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13053) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (13063) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (13063) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13073) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13123) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13123) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13123) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13133) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13133) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13143) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (13153) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13153) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71436
D (13163) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13173) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (13173) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13183) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13183) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13193) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13203) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (13203) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158828
D (13223) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13223) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (13243) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (13243) TEST_COMMON: CHAR #1, value is ok.
D (13243) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13263) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13263) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (13263) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13273) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13283) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13283) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (13293) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (13303) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13303) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13353) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13353) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13363) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13363) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13373) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13373) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (13383) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13393) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71440
D (13403) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13403) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (13413) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13413) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13423) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13423) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13433) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (13443) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (13453) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13453) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (13473) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (13473) TEST_COMMON: CHAR #2, value is ok.
D (13493) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13493) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13493) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (13503) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13503) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13513) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13523) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (13523) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (13533) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13543) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13593) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13593) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13593) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13603) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13603) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13613) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (13623) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13623) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71431
D (13633) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13643) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (13643) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13653) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13653) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13663) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13663) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (13673) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161278
D (13693) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13693) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (13713) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (13713) TEST_COMMON: CHAR #3, value is ok.
D (13713) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13733) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13733) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 09 
D (13733) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13743) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13743) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13753) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (13763) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 39 44 46 0d 0a 
D (13773) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13773) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13823) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13823) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13823) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13833) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13843) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13843) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (13853) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13863) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71434
D (13863) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13873) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (13883) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13883) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13893) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13893) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13903) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 
D (13903) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (13923) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13923) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (13943) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (14003) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14003) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14003) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (14003) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14013) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14023) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14023) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (14033) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14043) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14043) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14093) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14093) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14093) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14103) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14113) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14113) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (14123) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69596
D (14133) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14143) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (14143) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14143) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14153) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14163) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14163) mbm_error_cb_request_success: 03 00 00 00 01 
D (14173) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152132
D (14193) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14193) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (14193) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (14213) TEST_COMMON: CHAR #0, value is ok.
D (14213) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14233) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14233) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (14233) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14243) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14243) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14253) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (14263) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14263) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14273) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14323) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14323) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14323) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14323) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14333) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14343) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (14353) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69588
D (14353) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14363) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (14373) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14373) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14383) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14383) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14393) mbm_error_cb_request_success: 03 00 01 00 01 
D (14393) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150449
D (14413) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14413) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (14433) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (14433) TEST_COMMON: CHAR #1, value is ok.
D (14433) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14453) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14453) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (14453) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14463) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14473) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14473) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (14483) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14493) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14493) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14543) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14543) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14543) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14553) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14563) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14563) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (14573) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69580
D (14583) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14593) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (14593) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14593) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14603) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14613) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14613) mbm_error_cb_request_success: 03 00 02 00 01 
D (14623) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152128
D (14643) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14643) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (14643) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (14663) TEST_COMMON: CHAR #2, value is ok.
D (14663) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14683) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14683) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (14683) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14693) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14693) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14703) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (14713) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14713) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14723) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14773) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14773) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14773) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14773) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14783) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14793) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (14803) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69589
D (14803) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14813) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (14823) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14823) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14833) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14833) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14843) mbm_error_cb_request_success: 03 00 03 00 01 
D (14843) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150438
D (14863) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14863) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (14883) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (14883) TEST_COMMON: CHAR #3, value is ok.
D (14883) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14903) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14903) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 0a 
D (14913) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14913) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14923) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (14923) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (14933) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 41 44 45 0d 0a 
D (14943) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14953) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (15003) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (15003) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (15003) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (15003) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (15013) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (15023) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (15023) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (15033) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71470
D (15043) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (15043) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (15053) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (15053) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (15063) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (15073) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (15073) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a 
D (15083) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161325
D (15103) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (15103) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (15103) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (15183) TEST_COMMON: Destroy master, inst: 0x3ffaff5c.
D (15183) mb_port.serial: mbm_ascii@0x3ffaff5c, suspend port.
D (15183) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
./main/test_modbus_rs485_comm_master_slave.c:191:Modbus RS485 ASCII multi device master - slave case.:PASS
Test ran in 14195ms</system-out></testcase></testsuite>