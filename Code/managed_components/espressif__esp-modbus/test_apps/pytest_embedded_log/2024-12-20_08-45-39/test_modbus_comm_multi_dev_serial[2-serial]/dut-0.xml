<testsuite errors="0" failures="0" skipped="0" tests="2"><testcase file="./main/test_modbus_rs485_comm_master_slave.c" line="126" time="13.261" name="Modbus RS485 RTU multi device master - slave case."><system-out>Please press "Enter" key once any board send this signal.

D (1146) TEST_COMMON: Notify task start 0x3ffbade8
D (1146) TEST_COMMON: Task: 0x3ffbade8, get notify value = 1
D (1206) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1206) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1206) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1206) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1216) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1216) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1226) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (1236) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 538500
D (1246) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (1246) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1256) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1256) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1266) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (1276) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (1276) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1286) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1286) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1296) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (1306) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1306) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93505
I (1326) SLAVE: OBJ 0x3ffaff5c, WRITE (582711 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (1406) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1406) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1406) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1416) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1416) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1426) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1436) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (1436) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 124936
D (1446) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (1456) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1456) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1466) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1476) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (1476) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (1486) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1486) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1496) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1506) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (1506) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1516) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (1526) SLAVE: OBJ 0x3ffaff5c, WRITE (789599 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (1616) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1616) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1616) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1626) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1626) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1636) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1636) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (1646) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 124775
D (1656) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (1656) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1666) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1676) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1676) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (1686) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (1696) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1696) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1706) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1706) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (1716) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1726) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (1736) SLAVE: OBJ 0x3ffaff5c, WRITE (996337 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (1826) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1826) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (1826) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (1826) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1836) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (1836) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (1846) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (1856) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 124779
D (1866) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (1866) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1876) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1876) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1886) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (1896) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (1896) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (1906) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (1906) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1916) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (1926) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1926) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (1936) SLAVE: OBJ 0x3ffaff5c, WRITE (1203080 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (2026) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2026) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2026) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2036) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2036) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2046) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2056) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (2056) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 124053
D (2066) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (2076) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2076) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2086) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2086) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (2096) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (2106) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2106) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2116) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2116) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (2126) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2136) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91240
I (2146) SLAVE: OBJ 0x3ffaff5c, READ (1407361 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (2236) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2236) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2236) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2246) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2246) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2256) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2256) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (2266) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127934
D (2276) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (2276) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2286) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2286) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2296) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (2306) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (2306) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2316) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2326) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2326) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (2336) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2336) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91240
I (2346) SLAVE: OBJ 0x3ffaff5c, READ (1615002 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (2446) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2446) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2446) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2446) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2456) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2466) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2466) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (2476) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127873
D (2486) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (2486) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2496) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2496) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2506) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (2516) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (2516) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2526) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2526) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2536) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (2546) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2546) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (2556) SLAVE: OBJ 0x3ffaff5c, READ (1822581 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (2646) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2656) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (2656) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2656) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2666) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2666) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (2676) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (2686) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 128018
D (2686) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (2696) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2696) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2706) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2716) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (2716) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (2726) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2736) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2736) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (2746) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (2746) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2756) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91245
I (2776) SLAVE: OBJ 0x3ffaff5c, READ (2030306 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (2856) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2856) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (2856) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (2866) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2876) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (2876) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (2886) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 00 a7 d4 
D (2896) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129212
D (2896) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 00 
D (2906) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2906) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (2916) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2926) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (2936) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (2936) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (2946) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (2946) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2956) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (2956) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2966) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (2976) SLAVE: OBJ 0x3ffaff5c, WRITE (2240961 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x0), SIZE:1
D (3116) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3116) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3116) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3126) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3126) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3136) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3146) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (3146) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 175437
D (3156) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (3166) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3166) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3176) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3176) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (3186) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (3196) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3196) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3206) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3216) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (3216) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3226) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93501
I (3226) SLAVE: OBJ 0x3ffaff5c, WRITE (2498362 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (3326) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3326) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3326) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3336) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3346) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3346) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3356) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (3356) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129637
D (3366) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (3376) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3376) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3386) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3396) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (3396) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (3406) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3416) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3416) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3426) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (3426) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3436) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93498
I (3446) SLAVE: OBJ 0x3ffaff5c, WRITE (2709962 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (3536) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3536) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3546) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3546) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3556) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3556) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3566) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (3576) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129572
D (3576) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (3586) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3586) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3596) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3606) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (3616) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (3616) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3626) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3626) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3636) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (3646) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3646) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93513
I (3666) SLAVE: OBJ 0x3ffaff5c, WRITE (2921497 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (3756) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3756) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3756) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3756) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3766) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3766) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3776) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (3786) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129620
D (3796) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (3796) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3806) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3806) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3816) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (3826) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (3826) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3836) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (3836) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (3846) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (3856) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3856) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (3866) SLAVE: OBJ 0x3ffaff5c, WRITE (3133098 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (3966) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (3966) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (3966) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (3966) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3976) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (3986) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (3986) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 01 66 14 
D (3996) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129564
D (4006) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 01 
D (4006) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4016) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (4016) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4026) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (4036) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (4036) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4046) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4056) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4056) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (4066) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4066) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93494
I (4076) SLAVE: OBJ 0x3ffaff5c, WRITE (3344625 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x1), SIZE:1
D (4216) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4216) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4216) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4226) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4226) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4236) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4246) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (4246) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 170621
D (4256) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (4256) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4266) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4266) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4276) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (4286) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (4286) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4296) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4306) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4306) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (4316) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4316) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91244
I (4326) SLAVE: OBJ 0x3ffaff5c, READ (3595474 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (4426) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4426) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4426) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4426) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4436) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4446) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4446) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (4456) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127934
D (4466) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (4466) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4476) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4476) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4486) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (4496) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (4496) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4506) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4506) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4516) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (4526) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4526) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (4536) SLAVE: OBJ 0x3ffaff5c, READ (3803114 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (4636) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4636) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4636) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4636) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4646) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4646) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4656) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (4666) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127873
D (4666) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (4676) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4676) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4686) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4696) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (4706) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (4706) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4716) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4716) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4726) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (4726) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4736) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91241
I (4746) SLAVE: OBJ 0x3ffaff5c, READ (4010694 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (4836) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4836) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (4836) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (4846) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4856) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (4856) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (4866) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (4866) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 128003
D (4876) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (4886) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4886) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4896) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4896) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (4906) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (4916) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (4916) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (4926) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (4936) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (4936) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4946) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91241
I (4956) SLAVE: OBJ 0x3ffaff5c, READ (4218404 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (5046) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5046) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5046) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5056) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5056) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5066) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5076) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 02 26 15 
D (5076) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129227
D (5086) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 02 
D (5096) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5096) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5106) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5106) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (5116) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (5126) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5126) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5136) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5146) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (5146) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5156) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (5166) SLAVE: OBJ 0x3ffaff5c, WRITE (4429074 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x2), SIZE:1
D (5296) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5296) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5296) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5306) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5306) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5316) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5326) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (5326) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 167318
D (5336) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (5346) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5346) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5356) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5356) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (5366) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (5376) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5376) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5386) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5396) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (5396) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5406) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (5406) SLAVE: OBJ 0x3ffaff5c, WRITE (4678354 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (5506) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5506) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5506) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5516) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5526) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5526) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5536) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (5536) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129637
D (5546) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (5556) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5556) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5566) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5576) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (5576) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (5586) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5596) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5596) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5606) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (5606) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5616) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (5626) SLAVE: OBJ 0x3ffaff5c, WRITE (4889955 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (5716) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5716) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5726) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5726) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5736) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5736) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5746) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (5756) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129571
D (5756) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (5766) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5766) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5776) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5786) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (5796) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (5796) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5806) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (5806) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (5816) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (5826) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5826) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93512
I (5846) SLAVE: OBJ 0x3ffaff5c, WRITE (5101490 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (5936) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (5936) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (5936) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (5936) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5946) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (5946) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (5956) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (5966) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129622
D (5976) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (5976) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5986) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5986) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5996) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (6006) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (6006) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6016) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6016) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6026) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (6036) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6036) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (6046) SLAVE: OBJ 0x3ffaff5c, WRITE (5313091 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (6146) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6146) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (6146) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (6146) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6156) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6166) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (6166) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 03 e7 d5 
D (6176) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129564
D (6186) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 03 
D (6186) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6196) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6196) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6206) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (6216) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (6216) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6226) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6236) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6236) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (6246) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6246) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93494
I (6256) SLAVE: OBJ 0x3ffaff5c, WRITE (5524618 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x3), SIZE:1
D (6396) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6396) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6396) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6406) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6406) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6416) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6426) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (6426) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 170621
D (6436) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (6436) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6446) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (6446) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6456) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (6466) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (6466) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6476) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6486) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (6486) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (6496) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6496) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91244
I (6506) SLAVE: OBJ 0x3ffaff5c, READ (5775466 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (6606) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6606) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6606) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6606) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6616) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6626) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6626) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (6636) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (6646) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (6646) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6656) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (6656) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6666) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (6676) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (6676) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6686) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6686) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (6696) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (6706) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6706) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91237
I (6716) SLAVE: OBJ 0x3ffaff5c, READ (5983107 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (6816) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6816) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (6816) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6816) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6826) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (6826) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (6836) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (6846) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127873
D (6846) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (6856) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6856) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (6866) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (6876) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (6886) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (6886) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (6896) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (6896) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (6906) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (6906) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6916) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91240
I (6926) SLAVE: OBJ 0x3ffaff5c, READ (6190686 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (7016) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7016) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (7016) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7026) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7036) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7036) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (7046) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (7046) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 128004
D (7056) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (7066) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7066) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7076) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7076) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (7086) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (7096) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7096) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7106) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (7116) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (7116) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7126) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91240
I (7136) SLAVE: OBJ 0x3ffaff5c, READ (6398397 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (7226) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7226) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7226) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7236) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7236) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7246) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7256) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 04 a6 17 
D (7256) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129227
D (7266) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 04 
D (7276) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7276) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7286) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7286) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (7296) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (7306) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7306) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7316) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7326) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (7326) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7336) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (7346) SLAVE: OBJ 0x3ffaff5c, WRITE (6609066 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x4), SIZE:1
D (7476) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7476) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7476) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7486) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7486) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7496) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7506) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (7506) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 167318
D (7516) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (7526) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7526) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7536) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7536) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (7546) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (7556) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7556) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7566) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7576) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (7576) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7586) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (7586) SLAVE: OBJ 0x3ffaff5c, WRITE (6858347 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (7686) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7686) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7686) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7696) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7706) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7706) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7716) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (7716) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129637
D (7726) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (7736) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7736) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7746) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7756) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (7756) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (7766) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7776) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7776) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7786) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (7786) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7796) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (7806) SLAVE: OBJ 0x3ffaff5c, WRITE (7069948 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (7896) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7896) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (7906) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (7906) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7916) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (7916) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (7926) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (7936) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129641
D (7936) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (7946) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7946) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7956) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7966) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (7976) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (7976) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (7986) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (7986) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (7996) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (8006) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8006) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (8026) SLAVE: OBJ 0x3ffaff5c, WRITE (7281552 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (8116) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8116) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (8116) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (8116) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8126) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8126) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (8136) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (8146) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129637
D (8156) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (8156) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8166) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8166) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8176) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (8186) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (8186) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8196) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8196) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8206) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (8216) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8216) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (8226) SLAVE: OBJ 0x3ffaff5c, WRITE (7493153 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (8326) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8326) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (8326) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (8326) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8336) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8346) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (8346) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 05 67 d7 
D (8356) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129564
D (8366) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 05 
D (8366) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8376) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8376) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8386) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (8396) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (8396) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8406) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8416) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8416) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (8426) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8426) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93493
I (8436) SLAVE: OBJ 0x3ffaff5c, WRITE (7704680 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x5), SIZE:1
D (8576) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8576) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (8576) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8586) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8586) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8596) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (8606) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (8606) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 170552
D (8616) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (8616) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8626) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (8626) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8636) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (8646) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (8646) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8656) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8666) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (8666) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (8676) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8676) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91244
I (8686) SLAVE: OBJ 0x3ffaff5c, READ (7955459 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (8786) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8786) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (8786) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8786) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8796) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (8806) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (8806) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (8816) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127935
D (8826) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (8826) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8836) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (8836) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (8846) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (8856) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (8856) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8866) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (8866) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (8876) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (8886) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8886) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91236
I (8896) SLAVE: OBJ 0x3ffaff5c, READ (8163100 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (8996) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (8996) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (8996) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8996) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9006) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9006) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (9016) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (9026) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 127873
D (9026) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (9036) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9036) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9046) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9056) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (9066) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (9066) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9076) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9076) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (9086) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (9086) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9096) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91240
I (9106) SLAVE: OBJ 0x3ffaff5c, READ (8370679 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (9196) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9196) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (9196) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9206) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9216) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9216) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (9226) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (9226) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 128004
D (9236) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (9246) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9246) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9256) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9256) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (9266) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (9276) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9276) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9286) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (9296) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (9296) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9306) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 91240
I (9316) SLAVE: OBJ 0x3ffaff5c, READ (8578390 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (9406) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9406) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (9406) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (9416) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9416) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9426) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (9436) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 06 27 d6 
D (9436) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129227
D (9446) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 06 
D (9456) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9456) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9466) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9466) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (9476) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (9486) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9486) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9496) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9506) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (9506) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9516) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (9526) SLAVE: OBJ 0x3ffaff5c, WRITE (8789059 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x6), SIZE:1
D (9656) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9656) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (9656) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (9666) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9666) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9676) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (9686) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (9686) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 167318
D (9696) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (9706) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9706) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9716) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9716) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (9726) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (9736) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9736) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9746) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9756) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (9756) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9766) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93498
I (9766) SLAVE: OBJ 0x3ffaff5c, WRITE (9038340 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (9866) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9866) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (9866) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (9876) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9886) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (9886) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (9896) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (9896) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129637
D (9906) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (9916) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9916) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9926) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9936) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (9936) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (9946) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (9956) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (9956) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9966) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (9966) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9976) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 93497
I (9986) SLAVE: OBJ 0x3ffaff5c, WRITE (9249941 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (10076) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10076) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (10086) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (10086) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10096) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10096) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (10106) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (10116) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 130077
D (10116) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (10126) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10136) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10136) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10146) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (10156) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (10156) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10166) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10166) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10176) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (10186) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10186) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94799
I (10206) SLAVE: OBJ 0x3ffaff5c, WRITE (9462588 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (10296) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10296) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (10296) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (10306) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10306) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10316) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (10326) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (10326) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131632
D (10336) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (10346) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10346) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10356) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10356) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (10366) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (10376) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10376) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10386) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10396) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (10396) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10406) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94799
I (10406) SLAVE: OBJ 0x3ffaff5c, WRITE (9677312 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (10506) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10506) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (10506) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (10516) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10526) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10526) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (10536) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 07 e6 16 
D (10546) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131628
D (10546) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 07 
D (10556) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10556) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10566) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10576) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (10586) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (10586) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10596) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10596) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10606) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (10616) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10616) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94796
I (10626) SLAVE: OBJ 0x3ffaff5c, WRITE (9892031 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x7), SIZE:1
D (10766) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10766) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (10766) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10776) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10776) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10786) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (10796) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (10796) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 173379
D (10806) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (10806) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10816) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (10826) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10826) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (10836) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (10846) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10846) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (10856) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (10856) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (10866) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10876) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92546
I (10876) SLAVE: OBJ 0x3ffaff5c, READ (10146766 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (10976) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (10976) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (10976) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10986) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10986) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (10996) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (11006) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (11006) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129929
D (11016) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (11026) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11026) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11036) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11036) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (11046) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (11056) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11056) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11066) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (11076) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (11076) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11086) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92538
I (11086) SLAVE: OBJ 0x3ffaff5c, READ (10357530 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (11186) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11186) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (11186) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11196) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11196) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11206) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (11216) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (11216) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129937
D (11226) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (11236) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11236) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11246) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11246) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (11256) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (11266) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11266) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11276) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (11286) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (11286) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11296) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92542
I (11296) SLAVE: OBJ 0x3ffaff5c, READ (10568301 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (11396) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11396) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (11396) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11406) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11416) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11416) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (11426) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (11426) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129929
D (11436) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (11446) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11446) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11456) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11456) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (11466) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (11476) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11476) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11486) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (11496) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (11496) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11506) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92542
I (11516) SLAVE: OBJ 0x3ffaff5c, READ (10779065 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (11606) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11606) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (11616) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (11616) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11626) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11626) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (11636) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 08 a6 12 
D (11646) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131152
D (11646) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 08 
D (11656) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11666) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11666) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11676) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (11686) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (11686) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11696) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11696) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11706) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (11716) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11716) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94800
I (11736) SLAVE: OBJ 0x3ffaff5c, WRITE (10992788 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x8), SIZE:1
D (11866) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11866) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (11866) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (11876) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11876) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (11886) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (11896) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 02 11 11 6a 0c 
D (11896) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 173754
D (11906) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (11916) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11916) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11926) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11936) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (11936) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (11946) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (11956) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (11956) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11966) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 01 c9 
D (11966) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11976) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94799
I (11996) SLAVE: OBJ 0x3ffaff5c, WRITE (11249634 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (12086) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12086) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12086) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12086) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12096) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12106) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12106) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 02 22 22 3f 38 
D (12116) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131632
D (12126) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (12126) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12136) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12136) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12146) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (12156) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (12156) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12166) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12176) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12176) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 50 09 
D (12186) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12186) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94799
I (12196) SLAVE: OBJ 0x3ffaff5c, WRITE (11464358 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (12296) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12296) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12296) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12306) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12306) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12316) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12326) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 02 33 33 f3 57 
D (12326) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131636
D (12336) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (12346) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12346) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12356) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12356) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (12366) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (12376) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12376) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12386) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12396) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 a0 09 
D (12396) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12406) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94800
I (12416) SLAVE: OBJ 0x3ffaff5c, WRITE (11679085 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (12516) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12516) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12516) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12516) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12526) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12526) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12536) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 02 44 44 95 50 
D (12546) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131631
D (12556) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (12556) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12566) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12566) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12576) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (12586) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (12586) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12596) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12606) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12606) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 f1 c9 
D (12616) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12616) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94799
I (12626) SLAVE: OBJ 0x3ffaff5c, WRITE (11893809 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (12726) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12726) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (12726) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (12736) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12736) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12746) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (12756) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 09 67 d2 
D (12756) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131628
D (12766) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 09 
D (12776) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12776) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12786) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12786) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (12796) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (12806) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12806) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (12816) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12826) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (12826) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12836) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94796
I (12846) SLAVE: OBJ 0x3ffaff5c, WRITE (12108528 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x9), SIZE:1
D (12976) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (12976) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (12976) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12986) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12986) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (12996) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13006) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 00 00 01 84 0a 
D (13006) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 166856
D (13016) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (13016) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13026) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13036) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13036) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (13046) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (13056) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13056) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13066) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13066) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 11 11 74 18 
D (13076) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13086) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92546
I (13086) SLAVE: OBJ 0x3ffaff5c, READ (12356740 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (13186) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13186) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (13186) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13196) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13196) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13206) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13216) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 01 00 01 d5 ca 
D (13216) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129929
D (13226) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (13236) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13236) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13246) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13246) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (13256) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (13266) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13266) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13276) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13286) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 22 22 20 fd 
D (13286) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13296) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92538
I (13296) SLAVE: OBJ 0x3ffaff5c, READ (12567503 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (13396) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13396) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (13396) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13406) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13406) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13416) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13426) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 02 00 01 25 ca 
D (13426) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129937
D (13436) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (13446) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13446) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13456) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13456) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (13466) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (13476) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13476) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13486) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13496) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 33 33 ec a1 
D (13496) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13506) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92543
I (13506) SLAVE: OBJ 0x3ffaff5c, READ (12778275 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (13606) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13606) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 8.
D (13606) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13616) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13626) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13626) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 8 bytes.
D (13636) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 03 00 03 00 01 74 0a 
D (13636) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 129929
D (13646) mbs_rtu@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (13656) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13656) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (13666) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (13666) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (13676) mbs_rtu@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (13686) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13686) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13696) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (7) bytes.
D (13706) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 03 02 44 44 8b 77 
D (13706) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13716) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 92543
I (13726) SLAVE: OBJ 0x3ffaff5c, READ (12989039 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (13816) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13816) mb_port.serial: mbs_rtu@0x3ffaff5c, data event, len: 11.
D (13826) mb_port.serial: mbs_rtu@0x3ffaff5c, frame 11 bytes is ready.
D (13826) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13836) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (13836) mb_port.serial: mbs_rtu@0x3ffaff5c, received data: 11 bytes.
D (13846) mbs_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 02 00 0a 27 d3 
D (13856) mb_port.serial: mbs_rtu@0x3ffaff5c, serial processing time[us] = 131152
D (13856) mbs_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 0a 
D (13866) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13876) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13876) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13886) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (13896) mbs_rtu@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (13896) mb_port.serial: mbs_rtu@0x3ffaff5c, UART[1] event:
D (13906) mb_port.serial: mbs_rtu@0x3ffaff5c, uart rx break.
D (13906) mb_port.serial: mbs_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13916) mbs_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 40 08 
D (13926) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13926) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 94800
I (13946) SLAVE: OBJ 0x3ffaff5c, WRITE (13202762 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0xa), SIZE:1
D (14006) TEST_COMMON: Stop slave: 0x3ffaff5c.
I (14066) TEST_COMMON: Destroy slave, inst: 0x3ffaff5c.
D (14066) mb_port.serial: mbs_rtu@0x3ffaff5c, suspend port.
D (14066) mb_port.timer: mbs_rtu@0x3ffaff5c, timer stop, returns 259.
D (14076) TEST_COMMON: Notify task done, inst: 0x3ffbade8.
./main/test_modbus_rs485_comm_master_slave.c:126:Modbus RS485 RTU multi device master - slave case.:PASS
Test ran in 13201ms

&amp;lt;-------------------&amp;gt;

I (986) uart: queue free spaces: 20
D (986) intr_alloc: Connected src 35 to int 8 (cpu 0)
I (986) mb_port.serial: mbm_rtu@0x3ffaff5c, suspend port from task.
D (996) mb_port.serial: created object @0x3ffb7730
D (996) mb_port.timer: initialized mb_port.timer object @0x3ffb92c4
D (1006) mb_port.event: initialized object @0x3ffb92fc
D (1006) mb_transp.rtu_master: created mb_transp.rtu_master object @0x3ffb747c
D (1016) mb_object.master: created object mbm_rtu@0x3ffaff5c
I (1026) TEST_COMMON: 0x3ffaff5c, modbus master stack is initialized
D (1026) mb_port.serial: mbm_rtu@0x3ffaff5c, resume port.
D (1036) mb_port.timeD (1036) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1036) mb_port.timer: timer mode: (0) triggered
r: mbm_rtu@0x3ffaff5c, start timer (1750).
D (1056) mb_object.master: 0x3ffaff5c:EV_READY
I (1056) TEST_COMMON: 0x3ffaff5c, modbus master start...
D (1076) TEST_COMMON: Notify task start 0x3ffbabb4
D (1076) TEST_COMMON: Task: 0x3ffbabb4, get notify value = 1
D (1076) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1096) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1096) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (1096) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1096) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1106) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1116) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (1116) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1126) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1176) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1176) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1176) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1176) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1186) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1196) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (1196) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 67083
D (1206) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1216) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (1216) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1226) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1226) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1236) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1236) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (1246) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137372
D (1266) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1266) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (1286) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (1286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1306) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (1306) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1306) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1316) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1316) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (1326) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1336) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1376) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1376) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1386) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1386) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1396) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1396) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (1406) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66959
D (1416) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1416) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (1426) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1426) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1436) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1436) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1446) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (1456) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134389
D (1466) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1466) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (1486) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (1486) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1506) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1506) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (1506) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1516) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1516) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1526) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (1536) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1536) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1586) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1586) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1586) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1596) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1596) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1606) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (1616) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66885
D (1616) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1626) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (1636) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1636) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1646) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1646) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1656) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (1656) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140232
D (1676) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1676) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (1696) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (1696) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1716) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1716) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (1716) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1716) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1726) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (1736) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (1736) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1746) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1796) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1796) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (1796) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (1806) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1806) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (1816) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (1816) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66884
D (1826) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1836) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (1836) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1846) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1846) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1856) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (1856) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (1866) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137726
D (1886) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1886) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (1906) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (1906) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1906) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (1926) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (1926) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1926) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (1936) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (1936) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (1946) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (1956) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1996) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (1996) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (1996) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2006) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2006) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2016) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (2026) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65758
D (2026) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2036) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (2046) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2046) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2056) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2056) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2066) mbm_error_cb_request_success: 03 00 00 00 01 
D (2066) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 131306
D (2086) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2086) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (2106) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (2106) TEST_COMMON: CHAR #0, value is ok.
D (2106) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2126) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2126) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (2126) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2136) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2136) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2146) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (2156) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2156) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2206) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2206) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (2206) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2216) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2216) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2226) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (2226) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65115
D (2236) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2246) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (2246) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2256) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2256) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2266) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2276) mbm_error_cb_request_success: 03 00 01 00 01 
D (2276) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136299
D (2296) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2296) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (2316) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (2316) TEST_COMMON: CHAR #1, value is ok.
D (2316) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2336) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2336) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (2336) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2346) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2346) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2356) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (2356) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2366) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2416) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2416) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (2416) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2416) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2426) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2436) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (2436) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65176
D (2446) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2456) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (2456) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2466) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2466) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2476) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2476) mbm_error_cb_request_success: 03 00 02 00 01 
D (2486) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136367
D (2506) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2506) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (2506) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (2526) TEST_COMMON: CHAR #2, value is ok.
D (2526) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2546) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2546) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (2546) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2546) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2556) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (2566) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (2566) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2576) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2626) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2626) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (2626) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (2626) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2636) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (2636) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (2646) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65245
D (2656) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2656) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (2666) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2666) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2676) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2676) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2686) mbm_error_cb_request_success: 03 00 03 00 01 
D (2696) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134104
D (2706) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2706) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (2726) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (2726) TEST_COMMON: CHAR #3, value is ok.
D (2746) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2746) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (2746) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 00 
D (2756) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2756) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (2766) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (2766) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 00 a7 d4 
D (2776) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (2786) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2836) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (2836) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (2836) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (2836) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2846) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (2846) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (2856) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66878
D (2866) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2876) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (2876) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2886) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2886) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2896) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (2896) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 
D (2906) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140212
D (2926) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2926) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (2926) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (3006) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3006) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3006) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (3006) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3016) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3026) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3026) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (3036) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3046) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3086) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3086) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3086) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3096) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3106) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3106) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (3116) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66840
D (3126) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3126) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (3136) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3136) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3146) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3146) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3156) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (3166) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140186
D (3176) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3176) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (3196) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (3196) TEST_COMMON: CHAR #0, value is ok.
D (3216) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3216) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3216) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (3226) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3226) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3236) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3236) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (3246) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3256) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3306) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3306) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3306) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3306) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3316) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3316) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (3326) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66877
D (3336) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3336) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (3346) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3346) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3356) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3366) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3366) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (3376) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140230
D (3386) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3386) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (3406) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (3406) TEST_COMMON: CHAR #1, value is ok.
D (3426) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3426) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3426) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (3436) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3436) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3446) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3456) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (3456) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3466) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3516) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3516) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3516) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3516) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3526) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3536) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (3536) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66816
D (3546) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3556) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (3556) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3566) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3566) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3576) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3576) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (3586) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140162
D (3606) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3606) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (3606) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (3626) TEST_COMMON: CHAR #2, value is ok.
D (3626) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3646) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3646) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (3646) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3646) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3656) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3666) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (3666) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3676) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3726) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3726) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3726) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3736) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3736) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3746) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (3746) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66885
D (3756) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3766) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (3766) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3776) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3776) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3786) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (3786) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (3796) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137744
D (3816) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3816) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (3836) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (3836) TEST_COMMON: CHAR #3, value is ok.
D (3836) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3856) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (3856) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 01 
D (3856) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3866) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (3866) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (3876) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 01 66 14 
D (3886) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (3886) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3936) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (3936) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (3936) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (3946) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3946) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (3956) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (3956) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66812
D (3966) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3976) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (3976) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3986) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3986) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3996) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4006) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 
D (4006) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139261
D (4026) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4026) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (4046) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (4106) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4106) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4106) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (4106) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4116) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4116) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4126) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (4136) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4136) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4186) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4186) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4186) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4196) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4196) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4206) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (4206) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65246
D (4216) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4226) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (4226) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4236) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4236) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4246) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4256) mbm_error_cb_request_success: 03 00 00 00 01 
D (4256) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136427
D (4276) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4276) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (4296) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (4296) TEST_COMMON: CHAR #0, value is ok.
D (4296) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4316) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4316) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (4316) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4326) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4326) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4336) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (4346) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4346) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4396) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4396) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4396) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4396) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4406) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4416) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (4416) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65115
D (4426) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4436) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (4436) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4446) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4446) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4456) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4456) mbm_error_cb_request_success: 03 00 01 00 01 
D (4466) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136298
D (4486) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4486) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (4486) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (4506) TEST_COMMON: CHAR #1, value is ok.
D (4506) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4526) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4526) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (4526) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4526) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4536) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4546) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (4546) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4556) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4606) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4606) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4606) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4606) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4616) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4616) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (4626) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65176
D (4636) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4636) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (4646) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4646) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4656) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4656) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4666) mbm_error_cb_request_success: 03 00 02 00 01 
D (4676) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134502
D (4686) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4686) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (4706) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (4706) TEST_COMMON: CHAR #2, value is ok.
D (4726) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4726) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4726) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (4736) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4736) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4746) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (4746) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (4756) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4766) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4806) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4806) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (4806) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (4816) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4826) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (4826) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (4836) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65246
D (4846) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4846) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (4856) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4856) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4866) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4866) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (4876) mbm_error_cb_request_success: 03 00 03 00 01 
D (4876) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136437
D (4896) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4896) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (4916) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (4916) TEST_COMMON: CHAR #3, value is ok.
D (4916) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4936) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (4936) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 02 
D (4946) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (4946) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (4956) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (4956) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 02 26 15 
D (4966) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (4976) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5016) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5016) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5016) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5026) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5036) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5036) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (5046) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66877
D (5056) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5056) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (5066) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5066) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5076) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5076) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5086) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 
D (5096) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140211
D (5106) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5106) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (5126) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (5186) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5186) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5186) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (5186) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5196) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5206) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5206) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (5216) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5226) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5266) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5266) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5266) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5276) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5286) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5286) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (5296) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66833
D (5306) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5306) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (5316) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5316) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5326) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5326) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5336) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (5346) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140179
D (5356) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5356) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (5376) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (5376) TEST_COMMON: CHAR #0, value is ok.
D (5396) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5396) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5396) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (5406) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5406) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5416) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5416) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (5426) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5436) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5486) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5486) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5486) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5486) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5496) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5496) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (5506) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66882
D (5516) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5516) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (5526) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5526) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5536) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5546) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5546) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (5556) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140236
D (5566) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5566) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (5586) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (5586) TEST_COMMON: CHAR #1, value is ok.
D (5606) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5606) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5606) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (5616) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5616) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5626) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5636) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (5636) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5646) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5696) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5696) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5696) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5696) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5706) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5716) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (5716) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66810
D (5726) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5736) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (5736) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5746) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5746) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5756) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5756) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (5766) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140156
D (5786) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5786) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (5786) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (5806) TEST_COMMON: CHAR #2, value is ok.
D (5806) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5826) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (5826) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (5826) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5826) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (5836) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (5846) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (5846) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (5856) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5906) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (5906) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (5906) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (5916) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5916) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (5926) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (5926) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66885
D (5936) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5946) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (5946) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5956) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5956) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5966) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (5966) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (5976) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137736
D (5996) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5996) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (6016) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (6016) TEST_COMMON: CHAR #3, value is ok.
D (6016) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6036) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6036) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 03 
D (6036) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6046) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6046) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (6056) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 03 e7 d5 
D (6066) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6066) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6116) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6116) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (6116) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (6126) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6126) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (6136) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (6136) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66812
D (6146) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6156) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (6156) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6166) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6166) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6176) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6186) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 
D (6186) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139253
D (6206) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6206) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (6226) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (6286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6286) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (6286) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6296) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6296) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6306) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (6316) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6316) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6366) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6366) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6366) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6376) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6376) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6386) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (6386) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65239
D (6396) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6406) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (6406) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6416) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6416) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6426) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6436) mbm_error_cb_request_success: 03 00 00 00 01 
D (6436) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136420
D (6456) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6456) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (6476) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (6476) TEST_COMMON: CHAR #0, value is ok.
D (6476) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6496) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6496) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (6496) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6506) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6506) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6516) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (6526) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6526) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6576) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6576) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6576) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6576) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6586) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6596) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (6596) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65114
D (6606) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6616) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (6616) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6626) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6626) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6636) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6636) mbm_error_cb_request_success: 03 00 01 00 01 
D (6646) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136298
D (6666) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6666) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (6666) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (6686) TEST_COMMON: CHAR #1, value is ok.
D (6686) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6706) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6706) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (6706) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6706) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6716) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6726) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (6726) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6736) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6786) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6786) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6786) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6786) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6796) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (6796) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (6806) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65176
D (6816) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6816) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (6826) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6826) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6836) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6836) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (6846) mbm_error_cb_request_success: 03 00 02 00 01 
D (6856) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134495
D (6866) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6866) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (6886) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (6886) TEST_COMMON: CHAR #2, value is ok.
D (6906) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6906) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (6906) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (6916) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6916) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (6926) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (6926) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (6936) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (6946) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6986) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (6986) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (6986) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (6996) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7006) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (7006) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (7016) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65246
D (7026) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7026) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (7036) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7036) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7046) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7046) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7056) mbm_error_cb_request_success: 03 00 03 00 01 
D (7056) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136437
D (7076) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7076) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (7096) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (7096) TEST_COMMON: CHAR #3, value is ok.
D (7096) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7116) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7116) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 04 
D (7126) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7126) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7136) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7136) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 04 a6 17 
D (7146) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7156) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7196) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7196) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7196) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7206) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7216) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7216) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (7226) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66877
D (7236) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7236) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (7246) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7246) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7256) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7256) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7266) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 
D (7276) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140212
D (7286) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7286) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (7306) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (7366) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7366) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7366) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (7366) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7376) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7386) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7386) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (7396) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7406) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7446) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7446) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7446) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7456) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7466) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7466) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (7476) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66825
D (7486) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7486) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (7496) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7496) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7506) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7506) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7516) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (7526) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140172
D (7536) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7536) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (7556) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (7556) TEST_COMMON: CHAR #0, value is ok.
D (7576) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7576) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7576) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (7586) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7586) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7596) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7596) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (7606) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7616) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7666) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7666) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7666) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7666) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7676) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7676) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (7686) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66883
D (7696) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7696) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (7706) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7706) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7716) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7726) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7726) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (7736) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140237
D (7746) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7746) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (7766) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (7766) TEST_COMMON: CHAR #1, value is ok.
D (7786) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7786) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (7786) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (7796) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7796) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (7806) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (7816) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (7816) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (7826) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7876) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (7876) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (7876) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (7876) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7886) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (7896) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (7896) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66878
D (7906) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7916) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (7916) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7926) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7926) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7936) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (7936) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (7946) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140224
D (7966) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7966) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (7966) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (7986) TEST_COMMON: CHAR #2, value is ok.
D (7986) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8006) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8006) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (8006) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8006) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8016) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (8026) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (8026) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8036) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8086) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8086) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (8086) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8096) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8096) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (8106) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (8106) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66886
D (8116) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8126) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (8126) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8136) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8136) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8146) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8146) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (8156) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 137798
D (8176) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8176) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (8196) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (8196) TEST_COMMON: CHAR #3, value is ok.
D (8196) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8216) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8216) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 05 
D (8216) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8226) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8226) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (8236) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 05 67 d7 
D (8246) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8246) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8296) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8296) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (8296) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (8306) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8306) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (8316) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (8316) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66819
D (8326) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8336) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (8336) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8346) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8346) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8356) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8366) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 
D (8366) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139315
D (8386) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8386) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (8406) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (8466) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8466) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8466) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (8466) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8476) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8476) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8486) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (8496) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8496) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8546) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8546) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (8546) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (8556) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8556) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (8566) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (8566) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65231
D (8576) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8586) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (8586) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8596) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8596) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8606) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8616) mbm_error_cb_request_success: 03 00 00 00 01 
D (8616) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136413
D (8636) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8636) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (8656) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (8656) TEST_COMMON: CHAR #0, value is ok.
D (8656) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8676) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8676) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (8676) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8686) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8686) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8696) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (8706) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8706) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8756) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8756) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (8756) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (8756) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8766) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (8776) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (8776) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65114
D (8786) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8796) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (8796) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8806) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8806) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8816) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (8816) mbm_error_cb_request_success: 03 00 01 00 01 
D (8826) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136298
D (8846) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8846) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (8846) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (8866) TEST_COMMON: CHAR #1, value is ok.
D (8866) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8886) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (8886) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (8886) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8886) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (8896) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (8906) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (8906) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (8916) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8966) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (8966) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (8966) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (8966) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8976) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (8976) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (8986) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65176
D (8996) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8996) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (9006) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9006) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9016) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9016) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9026) mbm_error_cb_request_success: 03 00 02 00 01 
D (9036) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 134488
D (9046) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9046) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (9066) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (9066) TEST_COMMON: CHAR #2, value is ok.
D (9086) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9086) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9086) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (9096) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9096) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9106) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (9106) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (9116) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9126) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9166) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9166) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (9166) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (9176) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9186) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (9186) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (9196) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 65245
D (9206) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9206) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (9216) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9216) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9226) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9226) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9236) mbm_error_cb_request_success: 03 00 03 00 01 
D (9236) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 136437
D (9256) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9256) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (9276) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (9276) TEST_COMMON: CHAR #3, value is ok.
D (9276) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9296) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9296) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 06 
D (9306) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9306) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9316) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9316) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 06 27 d6 
D (9326) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9336) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9376) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9376) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9376) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9386) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9396) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (9396) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (9406) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66877
D (9416) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9416) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (9426) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9426) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9436) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9436) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9446) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 
D (9456) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140212
D (9466) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9466) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (9486) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (9546) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9546) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9546) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (9546) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9556) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9566) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9566) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (9576) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9586) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9626) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9626) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9626) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9636) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9646) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (9646) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (9656) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66818
D (9666) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9666) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (9676) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9676) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9686) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9686) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9696) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (9706) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140165
D (9716) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9716) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (9736) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (9736) TEST_COMMON: CHAR #0, value is ok.
D (9756) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9756) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9756) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (9766) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9766) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9776) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9776) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (9786) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (9796) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9846) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9846) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (9846) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (9846) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9856) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (9856) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (9866) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66887
D (9876) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9876) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (9886) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9886) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9896) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9906) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (9906) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (9916) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140241
D (9926) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9926) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (9946) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (9946) TEST_COMMON: CHAR #1, value is ok.
D (9966) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9966) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (9966) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (9976) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (9976) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (9986) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (9996) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (9996) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10006) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10056) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10056) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (10056) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10066) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10066) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (10076) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (10076) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68472
D (10086) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10096) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (10096) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10106) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10106) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10116) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10126) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (10126) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142425
D (10146) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10146) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (10166) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (10166) TEST_COMMON: CHAR #2, value is ok.
D (10166) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10186) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10186) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (10186) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10196) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10196) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (10206) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (10216) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10216) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10266) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10266) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (10266) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10276) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10286) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (10286) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (10296) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68099
D (10306) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10306) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (10316) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10316) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10326) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10326) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10336) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (10346) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142492
D (10356) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10356) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (10376) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (10376) TEST_COMMON: CHAR #3, value is ok.
D (10396) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10396) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10396) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 07 
D (10406) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10406) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10416) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (10426) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 07 e6 16 
D (10426) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10436) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10486) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10486) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (10486) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (10486) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10496) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (10506) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (10506) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68095
D (10516) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10526) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (10526) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10536) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10536) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10546) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10546) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 
D (10556) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142483
D (10576) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10576) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (10596) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (10656) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10656) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10656) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (10656) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10666) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10676) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10676) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (10686) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10696) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10736) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10736) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (10736) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (10746) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10746) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (10756) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (10766) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66415
D (10766) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10776) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (10786) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10786) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10796) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10796) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (10806) mbm_error_cb_request_success: 03 00 00 00 01 
D (10806) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138638
D (10826) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10826) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (10846) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (10846) TEST_COMMON: CHAR #0, value is ok.
D (10866) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10866) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (10866) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (10866) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10876) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (10886) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (10886) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (10896) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (10906) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10946) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (10946) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (10946) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (10956) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10966) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (10966) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (10976) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66397
D (10976) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10986) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (10996) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10996) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11006) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11006) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11016) mbm_error_cb_request_success: 03 00 01 00 01 
D (11016) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138622
D (11036) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11036) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (11056) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (11056) TEST_COMMON: CHAR #1, value is ok.
D (11076) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11076) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11076) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (11086) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11086) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11096) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11096) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (11106) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11116) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11156) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11156) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (11156) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (11166) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11176) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (11176) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (11186) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66389
D (11196) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11196) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (11206) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11206) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11216) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11216) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11226) mbm_error_cb_request_success: 03 00 02 00 01 
D (11236) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138623
D (11246) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11246) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (11266) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (11266) TEST_COMMON: CHAR #2, value is ok.
D (11286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11286) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (11296) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11296) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11306) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (11306) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (11316) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11326) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11366) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11366) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (11366) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (11376) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11386) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (11386) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (11396) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66390
D (11406) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11406) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (11416) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11416) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11426) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11426) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11436) mbm_error_cb_request_success: 03 00 03 00 01 
D (11446) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138623
D (11456) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11456) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (11476) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (11476) TEST_COMMON: CHAR #3, value is ok.
D (11496) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11496) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11496) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 08 
D (11506) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11506) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11516) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (11526) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 08 a6 12 
D (11526) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11536) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11586) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11586) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (11586) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11596) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11596) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (11606) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (11606) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68091
D (11616) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11626) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (11626) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11636) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11636) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11646) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11656) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 
D (11656) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142467
D (11676) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11676) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (11696) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (11756) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11756) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11756) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (11756) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11766) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11776) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (11776) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 00 00 01 02 11 11 6a 0c 
D (11786) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (11796) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11836) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11846) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (11846) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (11846) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11856) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (11856) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 00 00 01 01 c9 
D (11866) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68059
D (11876) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11886) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (11886) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11886) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11896) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11906) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (11906) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (11916) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142446
D (11936) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11936) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (11936) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (11956) TEST_COMMON: CHAR #0, value is ok.
D (11956) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11976) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (11976) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (11976) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (11976) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (11986) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (11996) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 01 00 01 02 22 22 3f 38 
D (11996) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12006) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12056) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12056) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12056) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12066) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12066) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12076) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 01 00 01 50 09 
D (12076) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68088
D (12086) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12096) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (12096) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12106) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12116) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12116) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12126) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (12126) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 140163
D (12146) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12146) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (12166) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (12166) TEST_COMMON: CHAR #1, value is ok.
D (12166) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12186) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12186) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (12186) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12196) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12206) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (12206) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 02 00 01 02 33 33 f3 57 
D (12216) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12226) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12266) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12266) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12276) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12276) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12286) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12286) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 02 00 01 a0 09 
D (12296) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68100
D (12306) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12306) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (12316) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12316) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12326) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12336) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12336) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (12346) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142487
D (12366) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12366) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (12366) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (12386) TEST_COMMON: CHAR #2, value is ok.
D (12386) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12406) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12406) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (12406) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12406) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12416) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (12426) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 03 00 01 02 44 44 95 50 
D (12426) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12436) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12486) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12486) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12486) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12496) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12496) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12506) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 03 00 01 f1 c9 
D (12506) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68098
D (12516) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12526) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (12526) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12536) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12536) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12546) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12556) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (12556) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 139618
D (12576) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12576) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (12596) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (12596) TEST_COMMON: CHAR #3, value is ok.
D (12596) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12616) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12616) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 09 
D (12616) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12626) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12626) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (12636) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 09 67 d2 
D (12646) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12656) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12696) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12696) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (12696) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (12706) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12716) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (12716) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (12726) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68095
D (12736) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12736) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (12746) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12746) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12756) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12756) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (12766) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 
D (12776) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142484
D (12786) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12786) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (12806) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (12866) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12866) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (12866) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (12866) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12876) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (12886) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (12886) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 00 00 01 84 0a 
D (12896) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (12906) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12946) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (12946) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (12946) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (12956) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12956) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (12966) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 11 11 74 18 
D (12976) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66388
D (12976) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12986) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (12996) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12996) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13006) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13006) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13016) mbm_error_cb_request_success: 03 00 00 00 01 
D (13016) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138612
D (13036) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13036) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (13056) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (13056) TEST_COMMON: CHAR #0, value is ok.
D (13076) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13076) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13076) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (13076) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13086) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13096) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13096) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 01 00 01 d5 ca 
D (13106) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13116) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13156) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13156) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (13156) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (13166) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13176) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (13176) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 22 22 20 fd 
D (13186) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66398
D (13186) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13196) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (13206) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13206) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13216) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13216) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13226) mbm_error_cb_request_success: 03 00 01 00 01 
D (13226) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138623
D (13246) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13246) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (13266) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (13266) TEST_COMMON: CHAR #1, value is ok.
D (13286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13286) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13286) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (13296) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13296) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13306) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13306) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 02 00 01 25 ca 
D (13316) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13326) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13366) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13366) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (13366) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (13376) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13386) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (13386) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 33 33 ec a1 
D (13396) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66389
D (13406) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13406) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (13416) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13416) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13426) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13426) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13436) mbm_error_cb_request_success: 03 00 02 00 01 
D (13446) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138623
D (13456) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13456) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (13476) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (13476) TEST_COMMON: CHAR #2, value is ok.
D (13496) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13496) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13496) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (13506) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13506) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13516) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (8) bytes.
D (13516) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 03 00 03 00 01 74 0a 
D (13526) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13536) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13576) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13576) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 7.
D (13576) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 7 bytes is ready.
D (13586) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13596) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 7 bytes.
D (13596) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 03 02 44 44 8b 77 
D (13606) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 66389
D (13616) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13616) mbm_rtu@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (13626) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13626) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13636) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13636) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13646) mbm_error_cb_request_success: 03 00 03 00 01 
D (13656) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 138622
D (13666) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13666) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (13686) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (13686) TEST_COMMON: CHAR #3, value is ok.
D (13706) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13706) mb_port.event: mbm_rtu@0x3ffaff5c, mb take resource, (300 ticks).
D (13706) mbm_rtu@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 0a 
D (13716) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13716) mb_port.serial: mbm_rtu@0x3ffaff5c, uart rx break.
D (13726) mb_port.serial: mbm_rtu@0x3ffaff5c, tx buffer sent: (11) bytes.
D (13736) mbm_rtu@0x3ffaff5c:PORT_SEND: 01 10 00 04 00 01 02 00 0a 27 d3 
D (13736) mb_port.timer: mbm_rtu@0x3ffaff5c, respond enable timeout (2000).
D (13746) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13796) mb_port.serial: mbm_rtu@0x3ffaff5c, UART[1] event:
D (13796) mb_port.serial: mbm_rtu@0x3ffaff5c, data event, len: 8.
D (13796) mb_port.serial: mbm_rtu@0x3ffaff5c, frame 8 bytes is ready.
D (13806) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13806) mb_port.serial: mbm_rtu@0x3ffaff5c, received data: 8 bytes.
D (13816) mbm_rtu@0x3ffaff5c:PORT_RECV: 01 10 00 04 00 01 40 08 
D (13816) mb_port.serial: mbm_rtu@0x3ffaff5c, serial processing time[us] = 68091
D (13826) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13836) mbm_rtu@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (13836) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13846) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13846) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13856) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
D (13866) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a 
D (13866) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 142466
D (13886) mb_port.event: mbm_rtu@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13886) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (13906) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (13966) TEST_COMMON: Destroy master, inst: 0x3ffaff5c.
D (13966) mb_port.serial: mbm_rtu@0x3ffaff5c, suspend port.
D (13966) mb_port.timer: mbm_rtu@0x3ffaff5c, timer stop, returns 259.
./main/test_modbus_rs485_comm_master_slave.c:126:Modbus RS485 RTU multi device master - slave case.:PASS
Test ran in 13103ms</system-out></testcase><testcase file="./main/test_modbus_rs485_comm_master_slave.c" line="191" time="14.317" name="Modbus RS485 ASCII multi device master - slave case."><system-out>Please press "Enter" key once any board send this signal.

D (1356) TEST_COMMON: Notify task start 0x3ffbaff0
D (1356) TEST_COMMON: Task: 0x3ffbaff0, get notify value = 1
D (1356) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1356) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (1366) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (1376) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1376) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (1386) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (1396) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (1396) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 696358
D (1406) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (1416) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1416) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1426) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1426) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (1436) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (1446) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1446) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (1456) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (1466) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (1466) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (1476) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1476) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 102359
I (1496) SLAVE: OBJ 0x3ffaff5c, WRITE (748254 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (1586) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1586) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (1586) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (1596) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1596) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (1606) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (1606) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (1616) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (1626) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 128864
D (1636) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (1636) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1646) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1646) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1656) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (1666) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (1666) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1676) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (1686) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (1686) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (1696) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (1706) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1706) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (1716) SLAVE: OBJ 0x3ffaff5c, WRITE (974343 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (1806) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1806) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (1816) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (1816) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1826) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (1826) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (1836) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (1846) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (1846) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 128798
D (1856) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (1866) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (1866) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (1876) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (1886) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (1886) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (1896) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (1906) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (1906) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (1916) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (1926) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (1926) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (1936) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (1946) SLAVE: OBJ 0x3ffaff5c, WRITE (1200379 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (2036) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2036) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (2036) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (2046) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2046) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2056) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (2066) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (2076) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (2076) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 129563
D (2086) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (2096) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2096) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (2106) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (2106) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (2116) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (2126) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2126) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2136) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2146) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (2146) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2156) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2156) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (2166) SLAVE: OBJ 0x3ffaff5c, WRITE (1427178 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (2266) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2266) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2266) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2266) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2276) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2286) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2286) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (2296) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2296) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 127552
D (2306) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (2316) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2316) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2326) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2336) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (2336) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (2346) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2346) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2356) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (2366) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (2376) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2376) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (2386) SLAVE: OBJ 0x3ffaff5c, READ (1649537 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (2486) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2486) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2486) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2496) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2496) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2506) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2506) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (2516) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2526) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131915
D (2526) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (2536) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2536) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2546) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2556) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (2566) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (2566) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2576) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2576) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (2586) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (2596) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2596) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (2606) SLAVE: OBJ 0x3ffaff5c, READ (1871405 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (2706) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2706) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2706) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2716) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2716) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2726) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2736) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (2736) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2746) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131919
D (2756) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (2756) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2766) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2766) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2776) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (2786) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (2786) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2796) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (2796) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (2806) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (2816) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (2816) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (2826) SLAVE: OBJ 0x3ffaff5c, READ (2093277 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (2926) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (2926) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (2926) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2936) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2936) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (2946) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (2956) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (2966) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2966) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131918
D (2976) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (2976) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (2986) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (2986) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (2996) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (3006) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (3006) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3016) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3026) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (3026) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (3036) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3046) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (3046) SLAVE: OBJ 0x3ffaff5c, READ (2315148 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (3146) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3156) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3156) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3156) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3166) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3166) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3176) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (3186) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 30 45 38 0d 0a 
D (3196) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133168
D (3196) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 00 
D (3206) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3206) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3216) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3226) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (3236) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (3236) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3246) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3246) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3256) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (3266) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (3266) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3276) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (3276) SLAVE: OBJ 0x3ffaff5c, WRITE (2540701 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x0), SIZE:1
D (3426) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3426) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3426) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3436) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3436) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3446) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3456) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (3466) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (3466) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 178558
D (3476) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (3476) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3486) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3496) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3496) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (3506) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (3516) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3516) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3526) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3526) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (3536) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (3546) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3546) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (3566) SLAVE: OBJ 0x3ffaff5c, WRITE (2816497 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (3656) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3656) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3656) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3666) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3666) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3676) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3686) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (3696) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (3696) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (3706) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (3716) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3716) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3726) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3726) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (3736) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (3746) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3746) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3756) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3766) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (3766) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (3776) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (3776) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (3786) SLAVE: OBJ 0x3ffaff5c, WRITE (3047391 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (3886) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3886) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (3886) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (3896) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3906) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (3906) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (3916) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (3926) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (3926) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (3936) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (3946) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (3946) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (3956) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (3956) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (3966) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (3976) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (3976) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (3986) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (3996) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (3996) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4006) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4006) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (4016) SLAVE: OBJ 0x3ffaff5c, WRITE (3278284 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (4116) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4116) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (4116) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (4126) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4136) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4136) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (4146) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (4156) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (4156) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133726
D (4166) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (4176) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4176) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (4186) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4196) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (4196) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (4206) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4206) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4216) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4226) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (4236) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4236) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4246) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (4246) SLAVE: OBJ 0x3ffaff5c, WRITE (3509248 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (4346) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4346) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (4356) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (4356) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4366) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4366) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (4376) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (4386) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 31 45 37 0d 0a 
D (4386) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (4396) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 01 
D (4406) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4406) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (4416) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (4426) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (4426) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (4436) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4446) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4446) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4456) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (4466) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4466) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4476) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (4476) SLAVE: OBJ 0x3ffaff5c, WRITE (3740142 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x1), SIZE:1
D (4626) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4626) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (4626) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4636) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4636) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4646) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (4656) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (4656) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4666) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 177863
D (4676) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (4676) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4686) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4686) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4696) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (4706) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (4706) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4716) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4716) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (4726) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (4736) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4736) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (4756) SLAVE: OBJ 0x3ffaff5c, READ (4012811 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (4846) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4846) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (4846) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4856) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4856) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (4866) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (4876) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (4886) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4886) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131919
D (4896) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (4896) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (4906) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (4906) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (4916) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (4926) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (4926) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (4936) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (4946) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (4946) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (4956) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (4966) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (4966) SLAVE: OBJ 0x3ffaff5c, READ (4234683 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (5066) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5066) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (5066) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5076) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5086) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5086) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (5096) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (5106) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5106) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131918
D (5116) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (5116) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5126) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (5136) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (5136) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (5146) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (5156) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5156) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5166) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (5166) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (5176) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5186) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (5196) SLAVE: OBJ 0x3ffaff5c, READ (4456555 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (5296) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5296) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (5296) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5296) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5306) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5306) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (5316) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (5326) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5326) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131921
D (5336) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (5346) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5346) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (5356) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (5356) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (5366) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (5376) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5376) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5386) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (5396) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (5396) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5406) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (5416) SLAVE: OBJ 0x3ffaff5c, READ (4678429 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (5516) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5516) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (5516) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (5526) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5526) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5536) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (5536) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (5546) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 32 45 36 0d 0a 
D (5556) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133167
D (5566) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 02 
D (5566) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5576) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5576) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5586) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (5596) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (5596) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5606) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5616) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (5616) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (5626) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (5626) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5636) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (5646) SLAVE: OBJ 0x3ffaff5c, WRITE (4903980 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x2), SIZE:1
D (5786) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5786) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (5786) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (5796) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5796) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (5806) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (5816) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (5826) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (5826) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 175297
D (5836) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (5836) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (5846) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (5856) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (5856) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (5866) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (5876) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (5876) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (5886) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (5886) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (5896) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (5906) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (5906) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (5916) SLAVE: OBJ 0x3ffaff5c, WRITE (5176513 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (6016) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6016) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6016) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6026) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6026) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6036) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6046) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (6056) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (6056) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133656
D (6066) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (6076) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6076) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6086) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6086) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (6096) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (6106) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6106) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6116) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6126) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (6126) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6136) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6136) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6146) SLAVE: OBJ 0x3ffaff5c, WRITE (5407407 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (6246) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6246) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6246) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6256) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6266) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6266) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6276) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (6286) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (6286) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (6296) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (6306) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6306) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6316) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6316) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (6326) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (6336) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6336) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6346) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6356) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (6356) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6366) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6366) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6376) SLAVE: OBJ 0x3ffaff5c, WRITE (5638301 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (6476) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6476) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6476) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6486) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6496) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6496) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6506) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (6516) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (6516) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133726
D (6526) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (6536) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6536) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6546) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6556) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (6556) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (6566) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6566) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6576) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6586) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (6596) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6596) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6606) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6606) SLAVE: OBJ 0x3ffaff5c, WRITE (5869279 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (6706) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6706) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (6716) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (6716) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6726) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (6726) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (6736) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (6746) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 33 45 35 0d 0a 
D (6746) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (6756) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 03 
D (6766) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (6766) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (6776) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (6786) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (6786) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (6796) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6806) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (6806) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6816) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (6826) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6826) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (6836) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (6836) SLAVE: OBJ 0x3ffaff5c, WRITE (6100158 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x3), SIZE:1
D (6986) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (6986) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (6986) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6996) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6996) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7006) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7016) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (7016) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7026) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 177794
D (7036) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (7036) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7046) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7046) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7056) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (7066) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (7066) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7076) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7076) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7086) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (7096) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7096) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (7116) SLAVE: OBJ 0x3ffaff5c, READ (6372758 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (7206) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7206) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (7206) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7216) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7216) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7226) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7236) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (7246) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7246) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131918
D (7256) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (7256) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7266) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7266) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7276) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (7286) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (7286) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7296) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7306) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7306) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (7316) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7326) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (7326) SLAVE: OBJ 0x3ffaff5c, READ (6594630 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (7426) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7426) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (7426) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7436) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7446) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7446) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7456) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (7466) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7466) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131919
D (7476) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (7476) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7486) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7496) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7496) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (7506) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (7516) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7516) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7526) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7526) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (7536) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7546) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (7556) SLAVE: OBJ 0x3ffaff5c, READ (6816502 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (7646) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7656) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (7656) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7656) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7666) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7666) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (7676) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (7686) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7686) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131933
D (7696) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (7706) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7706) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (7716) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (7716) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (7726) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (7736) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7736) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7746) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (7756) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (7756) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7766) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (7786) SLAVE: OBJ 0x3ffaff5c, READ (7038388 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (7876) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7876) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (7876) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (7886) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7886) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (7896) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (7896) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (7906) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 34 45 34 0d 0a 
D (7916) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133155
D (7926) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 04 
D (7926) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (7936) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (7936) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (7946) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (7956) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (7956) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (7966) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (7976) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7976) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (7986) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7986) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (7996) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (8006) SLAVE: OBJ 0x3ffaff5c, WRITE (7263927 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x4), SIZE:1
D (8146) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8146) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8146) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8156) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8156) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8166) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8176) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (8186) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (8186) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 175366
D (8196) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (8196) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8206) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8216) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8216) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (8226) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (8236) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8236) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8246) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8246) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (8256) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8266) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8266) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (8276) SLAVE: OBJ 0x3ffaff5c, WRITE (7536530 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (8376) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8376) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8376) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8386) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8386) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8396) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8406) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (8416) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (8416) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (8426) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (8436) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8436) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8446) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8446) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (8456) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (8466) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8466) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8476) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8486) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (8486) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8496) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8496) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (8506) SLAVE: OBJ 0x3ffaff5c, WRITE (7767424 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (8606) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8606) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8606) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8616) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8626) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8626) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8636) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (8646) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (8646) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133657
D (8656) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (8666) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8666) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8676) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8676) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (8686) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (8696) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8696) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8706) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8716) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (8716) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8726) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8726) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (8736) SLAVE: OBJ 0x3ffaff5c, WRITE (7998317 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (8836) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8836) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (8836) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (8846) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8856) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (8856) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (8866) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (8876) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (8876) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133726
D (8886) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (8896) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (8896) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (8906) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (8916) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (8916) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (8926) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (8926) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (8936) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (8946) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (8956) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (8956) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (8966) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108941
I (8966) SLAVE: OBJ 0x3ffaff5c, WRITE (8229284 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (9066) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9066) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (9076) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (9076) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9086) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9086) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (9096) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (9106) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 35 45 33 0d 0a 
D (9106) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133656
D (9116) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 05 
D (9126) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9126) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (9136) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (9146) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (9146) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (9156) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9166) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9166) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9176) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (9186) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9186) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9196) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 108940
I (9196) SLAVE: OBJ 0x3ffaff5c, WRITE (8460174 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x5), SIZE:1
D (9346) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9346) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (9346) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9356) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9356) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9366) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (9376) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (9376) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9386) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 177794
D (9396) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (9396) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9406) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9406) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9416) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (9426) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (9426) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9436) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9436) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (9446) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (9456) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9456) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (9476) SLAVE: OBJ 0x3ffaff5c, READ (8732775 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (9566) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9566) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (9566) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9576) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9576) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9586) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (9596) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (9606) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9606) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131919
D (9616) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (9616) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9626) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9626) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9636) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (9646) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (9646) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9656) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9666) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (9666) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (9676) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9686) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (9686) SLAVE: OBJ 0x3ffaff5c, READ (8954647 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (9786) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9786) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (9786) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9796) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9806) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (9806) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (9816) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (9826) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9826) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 131918
D (9836) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (9836) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (9846) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (9856) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (9856) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (9866) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (9876) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (9876) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (9886) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (9886) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (9896) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (9906) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 101657
I (9916) SLAVE: OBJ 0x3ffaff5c, READ (9176518 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (10016) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10016) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (10016) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10016) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10026) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10026) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (10036) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (10046) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10046) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 132367
D (10056) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (10066) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10066) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (10076) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (10086) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (10086) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (10096) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10106) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10106) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (10116) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (10126) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10126) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (10146) SLAVE: OBJ 0x3ffaff5c, READ (9399533 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (10236) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10236) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10236) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10246) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10246) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10256) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (10266) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (10276) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 36 45 32 0d 0a 
D (10276) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 134925
D (10286) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 06 
D (10296) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10296) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10306) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10306) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (10316) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (10326) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10326) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10336) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (10346) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (10356) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (10356) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10366) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (10366) SLAVE: OBJ 0x3ffaff5c, WRITE (9628057 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x6), SIZE:1
D (10516) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10516) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10516) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10526) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10526) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10536) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (10546) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (10556) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (10556) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 181282
D (10566) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (10576) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10576) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10586) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10586) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (10596) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (10606) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10606) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10616) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (10626) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (10626) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (10636) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10636) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (10656) SLAVE: OBJ 0x3ffaff5c, WRITE (9907878 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (10756) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10756) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10756) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10756) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10766) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (10776) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (10776) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (10786) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (10796) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135687
D (10796) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (10806) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (10806) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (10816) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (10826) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (10836) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (10836) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10846) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (10846) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (10856) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (10866) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (10866) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (10876) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (10886) SLAVE: OBJ 0x3ffaff5c, WRITE (10142103 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (10986) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (10986) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (10986) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (10996) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10996) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11006) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (11016) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (11016) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (11026) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135687
D (11036) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (11036) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11046) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11056) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11056) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (11066) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (11076) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11076) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11086) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11096) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (11096) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11106) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11106) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (11116) SLAVE: OBJ 0x3ffaff5c, WRITE (10376328 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (11216) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11216) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (11216) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (11226) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11236) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11236) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (11246) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (11256) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (11256) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135685
D (11266) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (11276) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11276) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11286) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11296) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (11306) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (11306) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11316) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11316) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11326) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (11336) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11336) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11346) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (11366) SLAVE: OBJ 0x3ffaff5c, WRITE (10610553 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (11456) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11456) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (11456) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (11466) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11466) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11476) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (11476) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (11486) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 37 45 31 0d 0a 
D (11496) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135686
D (11506) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 07 
D (11506) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11516) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (11516) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (11526) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (11536) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (11536) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11546) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11556) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11556) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (11566) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11576) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11576) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (11586) SLAVE: OBJ 0x3ffaff5c, WRITE (10844778 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x7), SIZE:1
D (11726) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11726) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (11726) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11736) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11736) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11746) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (11756) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (11756) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11766) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 173299
D (11776) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (11776) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (11786) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (11786) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (11796) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (11806) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (11806) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11816) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (11826) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (11826) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (11836) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (11846) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (11846) SLAVE: OBJ 0x3ffaff5c, READ (11114185 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (11946) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (11946) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (11956) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11956) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11966) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (11966) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (11976) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (11986) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11986) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133896
D (11996) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (12006) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12006) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12016) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12026) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (12026) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (12036) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12036) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12046) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (12056) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (12066) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12066) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (12076) SLAVE: OBJ 0x3ffaff5c, READ (11339250 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (12176) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12176) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (12176) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12186) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12186) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12196) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (12206) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (12206) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12216) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133895
D (12226) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (12226) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12236) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12236) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12246) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (12256) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (12256) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12266) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12276) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (12276) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (12286) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12296) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (12296) SLAVE: OBJ 0x3ffaff5c, READ (11564314 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (12396) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12396) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (12406) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12406) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12416) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12416) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (12426) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (12436) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12436) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133895
D (12446) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (12456) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12456) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (12466) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (12476) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (12476) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (12486) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12486) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12496) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (12506) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (12516) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12516) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (12526) SLAVE: OBJ 0x3ffaff5c, READ (11789378 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (12626) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12626) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (12626) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (12636) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12636) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12646) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (12656) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (12666) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 38 45 30 0d 0a 
D (12666) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135216
D (12676) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 08 
D (12686) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12686) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12696) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12696) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (12706) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (12716) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12716) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (12726) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (12736) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (12746) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (12746) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (12756) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (12756) SLAVE: OBJ 0x3ffaff5c, WRITE (12018193 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x8), SIZE:1
D (12906) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12906) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (12906) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (12916) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12916) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (12926) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (12936) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (12946) mbs_ascii@0x3ffaff5c:PORT_RECV: 31 31 31 43 41 0d 0a 
D (12946) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 181143
D (12956) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 02 11 11 
D (12966) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (12966) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (12976) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (12976) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d80, 1
D (12986) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 00 00 01 
D (12996) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (12996) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13006) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13016) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (13016) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13026) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13026) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (13046) SLAVE: OBJ 0x3ffaff5c, WRITE (12297875 us), SL: 0, REG:0, TYPE:1, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (13146) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13146) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13146) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13146) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13156) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13166) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13166) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (13176) mbs_ascii@0x3ffaff5c:PORT_RECV: 32 32 32 41 37 0d 0a 
D (13186) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135686
D (13186) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 02 22 22 
D (13196) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13196) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13206) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13216) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d82, 1
D (13226) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 01 00 01 
D (13226) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13236) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13236) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13246) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (13256) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13256) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13266) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110417
I (13276) SLAVE: OBJ 0x3ffaff5c, WRITE (12532100 us), SL: 0, REG:1, TYPE:1, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (13376) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13376) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13376) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13386) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13386) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13396) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13406) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (13406) mbs_ascii@0x3ffaff5c:PORT_RECV: 33 33 33 38 34 0d 0a 
D (13416) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135686
D (13426) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 02 33 33 
D (13426) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13436) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13446) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13446) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d84, 1
D (13456) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 02 00 01 
D (13466) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13466) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13476) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13486) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (13486) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13496) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13496) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (13506) SLAVE: OBJ 0x3ffaff5c, WRITE (12766325 us), SL: 0, REG:2, TYPE:1, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (13606) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13606) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13606) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13616) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13626) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13626) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13636) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (13646) mbs_ascii@0x3ffaff5c:PORT_RECV: 34 34 34 36 31 0d 0a 
D (13646) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135685
D (13656) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 02 44 44 
D (13666) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13666) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13676) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13686) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d86, 1
D (13696) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 03 00 01 
D (13696) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13706) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13706) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13716) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (13726) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13726) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13736) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (13756) SLAVE: OBJ 0x3ffaff5c, WRITE (13000550 us), SL: 0, REG:3, TYPE:1, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (13846) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13846) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (13846) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (13856) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13856) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (13866) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (13866) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (13876) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 39 44 46 0d 0a 
D (13886) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135686
D (13896) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 09 
D (13896) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (13906) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (13906) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (13916) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (13926) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (13926) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (13936) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (13946) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (13946) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (13956) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (13966) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (13966) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
I (13976) SLAVE: OBJ 0x3ffaff5c, WRITE (13234775 us), SL: 0, REG:4, TYPE:1, INST_ADDR:0x3ffb2d88(0x9), SIZE:1
D (14116) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14116) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14116) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14126) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14126) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14136) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14146) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (14146) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14156) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 173299
D (14166) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 00 00 01 
D (14166) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14176) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14176) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14186) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d80, 1
D (14196) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 11 11 
D (14196) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14206) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14216) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14216) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (14226) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14236) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (14236) SLAVE: OBJ 0x3ffaff5c, READ (13504183 us), SL: 0, REG:0, TYPE:2, INST_ADDR:0x3ffb2d80(0x1111), SIZE:1
D (14336) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14336) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14346) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14346) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14356) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14356) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14366) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (14376) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14376) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133895
D (14386) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 01 00 01 
D (14396) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14396) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14406) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14416) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d82, 1
D (14416) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 22 22 
D (14426) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14426) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14436) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14446) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (14456) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14456) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (14466) SLAVE: OBJ 0x3ffaff5c, READ (13729247 us), SL: 0, REG:1, TYPE:2, INST_ADDR:0x3ffb2d82(0x2222), SIZE:1
D (14566) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14566) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14566) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14576) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14576) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14586) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14596) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (14596) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14606) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133895
D (14616) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 02 00 01 
D (14616) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14626) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14626) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14636) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d84, 1
D (14646) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 33 33 
D (14646) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14656) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14666) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14666) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (14676) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14686) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (14686) SLAVE: OBJ 0x3ffaff5c, READ (13954311 us), SL: 0, REG:2, TYPE:2, INST_ADDR:0x3ffb2d84(0x3333), SIZE:1
D (14786) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14786) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 17.
D (14796) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (14796) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14806) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (14806) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 17 bytes.
D (14816) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (14826) mbs_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (14826) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 133896
D (14836) mbs_ascii@0x3ffaff5c:MB_RECV: 03 00 03 00 01 
D (14846) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (14846) mb_object.slave: 0x3ffaff5c: function (0x3), start handler.
D (14856) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x02 is set.
D (14866) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 2, 0x3ffb2d86, 1
D (14866) mbs_ascii@0x3ffaff5c:MB_SEND: 03 02 44 44 
D (14876) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (14876) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (14886) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (15) bytes.
D (14896) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (14906) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (14906) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 103046
I (14916) SLAVE: OBJ 0x3ffaff5c, READ (14179375 us), SL: 0, REG:3, TYPE:2, INST_ADDR:0x3ffb2d86(0x4444), SIZE:1
D (15016) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (15016) mb_port.serial: mbs_ascii@0x3ffaff5c, data event, len: 23.
D (15016) mb_port.serial: mbs_ascii@0x3ffaff5c, frame 23 bytes is ready.
D (15026) mb_object.slave: 0x3ffaff5c:EV_FRAME_RECEIVED
D (15026) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (15036) mb_port.serial: mbs_ascii@0x3ffaff5c, received data: 23 bytes.
D (15046) mbs_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (15056) mbs_ascii@0x3ffaff5c:PORT_RECV: 30 30 41 44 45 0d 0a 
D (15056) mb_port.serial: mbs_ascii@0x3ffaff5c, serial processing time[us] = 135216
D (15066) mbs_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 02 00 0a 
D (15076) mb_object.slave: 0x3ffaff5c:EV_EXECUTE
D (15076) mb_object.slave: 0x3ffaff5c: function (0x10), start handler.
D (15086) MB_CONTROLLER_SLAVE: The MB_REG_CHANGE_EVENT = 0x01 is set.
D (15086) MB_CONTROLLER_SLAVE: Queue send parameter info (type, address, size): 1, 0x3ffb2d88, 1
D (15096) mbs_ascii@0x3ffaff5c:MB_SEND: 10 00 04 00 01 
D (15106) mb_port.serial: mbs_ascii@0x3ffaff5c, UART[1] event:
D (15106) mb_port.serial: mbs_ascii@0x3ffaff5c, uart rx break.
D (15116) mb_port.serial: mbs_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (15126) mbs_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (15136) mbs_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (15136) mb_object.slave: 0x3ffaff5c:EV_MASTER_FRAME_SENT
D (15146) mb_object.slave: 0x3ffaff5c, transaction processing time(us) = 110416
D (15146) TEST_COMMON: Stop slave: 0x3ffaff5c.
I (15226) TEST_COMMON: Destroy slave, inst: 0x3ffaff5c.
D (15226) mb_port.serial: mbs_ascii@0x3ffaff5c, suspend port.
D (15226) mb_port.timer: mbs_ascii@0x3ffaff5c, timer stop, returns 259.
D (15236) TEST_COMMON: Notify task done, inst: 0x3ffbaff0.
./main/test_modbus_rs485_comm_master_slave.c:191:Modbus RS485 ASCII multi device master - slave case.:PASS
Test ran in 14153ms

&amp;lt;-------------------&amp;gt;

D (1226) TEST_COMMON: Notify task start 0x3ffbafb8
D (1226) TEST_COMMON: Task: 0x3ffbafb8, get notify value = 1
D (1226) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1246) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1246) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (1256) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1256) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1266) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1266) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (1276) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (1286) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1296) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1346) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1346) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (1346) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (1346) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1356) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (1366) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (1366) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (1376) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71568
D (1386) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1386) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (1396) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1396) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1406) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1406) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (1416) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (1426) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 160136
D (1436) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1436) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (1456) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
D (1456) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1476) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1476) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (1476) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1486) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1486) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1496) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (1506) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (1516) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1516) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1566) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1566) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (1566) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (1576) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1586) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (1586) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (1596) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (1596) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70198
D (1606) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1616) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (1616) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1626) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1636) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1636) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (1646) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (1646) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158822
D (1666) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1666) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (1686) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
D (1686) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1706) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1706) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (1706) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1706) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1716) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1726) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (1736) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (1736) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1746) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (1796) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1796) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (1796) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (1806) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (1806) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (1816) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (1826) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (1826) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70193
D (1836) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (1846) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (1846) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (1856) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (1856) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (1866) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (1866) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (1876) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155895
D (1896) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (1896) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (1896) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
D (1916) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1916) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (1936) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (1936) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (1936) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (1946) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (1946) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (1956) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (1966) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (1966) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2026) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2026) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (2026) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (2026) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2036) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (2046) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (2046) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (2056) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70961
D (2066) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2066) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (2076) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2076) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2086) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2086) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2096) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (2106) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152847
D (2116) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2116) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (2136) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
D (2136) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2156) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2156) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (2156) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2166) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2166) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2176) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (2186) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2186) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2196) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2246) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2246) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2246) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2246) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2256) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2266) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (2266) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68454
D (2276) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2286) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (2286) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2296) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2306) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2306) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2316) mbm_error_cb_request_success: 03 00 00 00 01 
D (2316) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149759
D (2336) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2336) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (2356) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (2356) TEST_COMMON: CHAR #0, value is ok.
D (2356) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2376) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2376) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (2376) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2386) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2386) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2396) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (2406) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2406) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2416) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2466) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2466) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2466) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2476) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2476) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2486) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (2496) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68461
D (2496) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2506) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (2516) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2516) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2526) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2526) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2536) mbm_error_cb_request_success: 03 00 01 00 01 
D (2536) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149885
D (2556) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2556) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (2576) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (2576) TEST_COMMON: CHAR #1, value is ok.
D (2576) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2596) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2596) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (2596) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2606) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2616) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2616) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (2626) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2636) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2636) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2686) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2686) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2686) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2696) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2696) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2706) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (2716) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68469
D (2726) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2726) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (2736) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2736) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2746) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2746) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2756) mbm_error_cb_request_success: 03 00 02 00 01 
D (2766) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149892
D (2776) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (2776) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (2796) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (2796) TEST_COMMON: CHAR #2, value is ok.
D (2816) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2816) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (2816) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (2826) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2826) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (2836) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (2836) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (2846) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (2856) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (2856) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (2906) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (2906) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (2906) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (2916) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (2926) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (2926) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (2936) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68462
D (2946) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (2956) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (2956) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (2956) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (2966) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (2976) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (2976) mbm_error_cb_request_success: 03 00 03 00 01 
D (2986) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149884
D (3006) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3006) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (3006) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (3026) TEST_COMMON: CHAR #3, value is ok.
D (3026) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3046) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3046) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 00 
D (3046) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3046) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3056) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3066) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (3076) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 30 45 38 0d 0a 
D (3076) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3086) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3136) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3136) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3136) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3146) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3146) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3156) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (3166) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3166) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70216
D (3176) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3186) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (3186) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3196) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3196) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3206) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3206) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 
D (3216) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 156198
D (3236) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3236) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (3236) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.
D (3316) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3316) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3316) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (3326) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3326) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3336) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3336) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (3346) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (3356) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3356) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3406) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3406) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3416) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3416) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3426) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3426) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (3436) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3446) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70212
D (3446) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3456) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (3466) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3466) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3476) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3476) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3486) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (3496) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158837
D (3506) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3506) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (3526) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (3526) TEST_COMMON: CHAR #0, value is ok.
D (3546) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3546) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3546) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (3556) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3556) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3566) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3566) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (3576) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (3586) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3596) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3646) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3646) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3646) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3646) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3656) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3666) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (3666) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3676) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70191
D (3686) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3686) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (3696) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3696) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3706) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3706) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3716) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (3726) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158824
D (3736) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3736) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (3756) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (3756) TEST_COMMON: CHAR #1, value is ok.
D (3776) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3776) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (3776) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (3786) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3786) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (3796) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (3806) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (3806) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (3816) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (3826) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (3876) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (3876) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (3876) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (3876) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (3886) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (3896) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (3896) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (3906) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70195
D (3916) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (3916) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (3926) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (3926) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (3936) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (3936) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (3946) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (3956) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158823
D (3966) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (3966) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (3986) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (3986) TEST_COMMON: CHAR #2, value is ok.
D (4006) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4006) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4006) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (4016) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4016) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4026) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (4036) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (4036) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (4046) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4056) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4106) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4106) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (4106) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4116) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4116) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (4126) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (4136) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4136) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70260
D (4146) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4146) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (4156) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4156) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4166) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4176) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4176) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (4186) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158892
D (4206) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4206) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (4206) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (4226) TEST_COMMON: CHAR #3, value is ok.
D (4226) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4226) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4246) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 01 
D (4246) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4246) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4256) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (4266) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (4276) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 31 45 37 0d 0a 
D (4276) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4286) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4336) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4336) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (4336) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (4346) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4346) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (4356) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (4366) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (4366) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70195
D (4376) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4386) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (4386) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4396) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4396) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4406) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4406) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 
D (4416) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155748
D (4436) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4436) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (4436) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.
D (4516) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4516) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4516) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (4516) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4526) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4536) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4536) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (4546) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4556) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4556) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4606) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4606) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (4606) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (4616) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4616) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (4626) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (4636) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68453
D (4646) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4646) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (4656) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4656) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4666) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4666) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4676) mbm_error_cb_request_success: 03 00 00 00 01 
D (4686) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149877
D (4696) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4696) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (4716) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (4716) TEST_COMMON: CHAR #0, value is ok.
D (4736) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4736) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4736) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (4746) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4746) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4756) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4756) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (4766) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4776) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (4776) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (4826) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4826) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (4826) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (4836) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (4846) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (4846) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (4856) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68469
D (4866) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (4866) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (4876) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (4876) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (4886) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (4896) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (4896) mbm_error_cb_request_success: 03 00 01 00 01 
D (4906) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149884
D (4916) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (4916) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (4936) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (4936) TEST_COMMON: CHAR #1, value is ok.
D (4956) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4956) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (4956) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (4966) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (4966) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (4976) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (4986) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (4986) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (4996) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5006) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5046) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5046) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (5056) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (5056) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5066) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (5066) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (5076) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68469
D (5086) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5096) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (5096) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5106) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5106) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5116) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5116) mbm_error_cb_request_success: 03 00 02 00 01 
D (5126) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149892
D (5146) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5146) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (5146) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (5166) TEST_COMMON: CHAR #2, value is ok.
D (5166) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5186) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5186) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (5186) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5196) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5196) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (5206) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (5216) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (5216) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5226) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5276) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5276) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (5276) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (5276) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5286) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (5296) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (5296) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68461
D (5306) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5316) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (5316) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5326) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5326) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5336) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5346) mbm_error_cb_request_success: 03 00 03 00 01 
D (5346) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 148652
D (5366) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5366) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (5386) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (5386) TEST_COMMON: CHAR #3, value is ok.
D (5386) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5406) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5406) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 02 
D (5406) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5416) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5416) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (5426) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (5436) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 32 45 36 0d 0a 
D (5436) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5446) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5496) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5496) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (5496) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5506) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5516) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (5516) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (5526) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5526) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70217
D (5536) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5546) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (5546) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5556) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5556) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5566) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5576) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 
D (5576) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158833
D (5596) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5596) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (5616) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.
D (5676) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5676) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5676) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (5676) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5686) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5696) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (5696) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (5706) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (5716) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5716) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (5766) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5766) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (5776) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (5776) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (5786) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (5786) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (5796) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (5806) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70237
D (5806) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (5816) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (5826) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (5826) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (5836) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (5836) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (5846) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (5856) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158861
D (5866) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (5866) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (5886) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (5886) TEST_COMMON: CHAR #0, value is ok.
D (5906) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5906) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (5906) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (5916) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (5916) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (5926) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (5926) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (5936) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (5946) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (5956) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6006) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6006) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6006) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6006) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6016) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6026) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (6026) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6036) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70190
D (6046) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6046) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (6056) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6056) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6066) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6066) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6076) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (6086) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158823
D (6096) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6096) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (6116) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (6116) TEST_COMMON: CHAR #1, value is ok.
D (6136) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6136) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6136) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (6146) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6146) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6156) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (6166) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (6166) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (6176) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6186) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6236) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6236) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6236) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6236) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6246) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6256) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (6256) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6266) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70195
D (6276) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6276) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (6286) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6286) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6296) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6296) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6306) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (6316) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158824
D (6326) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6326) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (6346) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (6346) TEST_COMMON: CHAR #2, value is ok.
D (6366) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6366) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6366) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (6376) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6376) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6386) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (6396) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (6396) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (6406) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6416) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6466) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6466) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6466) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6476) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6476) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6486) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (6496) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6496) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70261
D (6506) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6506) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (6516) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6516) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6526) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6536) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6536) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (6546) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158893
D (6566) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6566) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (6566) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (6586) TEST_COMMON: CHAR #3, value is ok.
D (6586) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6586) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6606) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 03 
D (6606) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6606) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6616) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (6626) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (6636) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 33 45 35 0d 0a 
D (6636) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6646) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6696) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6696) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (6696) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (6706) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6706) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (6716) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (6726) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (6726) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70194
D (6736) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (6746) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (6746) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (6756) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (6756) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (6766) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (6766) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 
D (6776) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155751
D (6796) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (6796) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (6796) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.
D (6876) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6876) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (6876) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (6876) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6886) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (6896) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (6896) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (6906) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (6916) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (6916) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (6966) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (6966) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (6966) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (6976) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (6976) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (6986) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (6996) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68395
D (7006) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7006) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (7016) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7016) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7026) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7026) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7036) mbm_error_cb_request_success: 03 00 00 00 01 
D (7046) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149819
D (7056) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7056) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (7076) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (7076) TEST_COMMON: CHAR #0, value is ok.
D (7096) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7096) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7096) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (7106) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7106) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7116) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7116) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (7126) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7136) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7136) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7186) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7186) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (7186) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (7196) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7206) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (7206) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (7216) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68462
D (7226) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7226) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (7236) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7236) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7246) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7256) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7256) mbm_error_cb_request_success: 03 00 01 00 01 
D (7266) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149885
D (7276) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7276) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (7296) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (7296) TEST_COMMON: CHAR #1, value is ok.
D (7316) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7316) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7316) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (7326) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7326) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7336) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7346) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (7346) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7356) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7366) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7406) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7406) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (7416) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (7416) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7426) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (7426) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (7436) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68469
D (7446) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7456) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (7456) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7466) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7466) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7476) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7476) mbm_error_cb_request_success: 03 00 02 00 01 
D (7486) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149893
D (7506) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7506) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (7506) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (7526) TEST_COMMON: CHAR #2, value is ok.
D (7526) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7546) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7546) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (7546) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7556) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7556) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (7566) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (7576) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (7576) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7586) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7636) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7636) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (7636) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (7636) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7646) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (7656) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (7656) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68461
D (7666) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7676) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (7676) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7686) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7686) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7696) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7706) mbm_error_cb_request_success: 03 00 03 00 01 
D (7706) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 148601
D (7726) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7726) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (7746) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (7746) TEST_COMMON: CHAR #3, value is ok.
D (7746) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7766) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (7766) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 04 
D (7766) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7776) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (7776) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (7786) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (7796) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 34 45 34 0d 0a 
D (7796) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (7806) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (7856) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (7856) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (7856) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (7866) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (7876) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (7876) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (7886) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (7886) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70218
D (7896) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (7906) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (7906) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (7916) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (7916) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (7926) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (7936) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 
D (7936) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158832
D (7956) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (7956) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (7976) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.
D (8036) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8036) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8036) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (8046) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8046) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8056) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8056) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (8066) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (8076) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8076) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8126) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8126) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8136) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8136) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8146) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8146) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (8156) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8166) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70249
D (8166) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8176) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (8186) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8186) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8196) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8196) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8206) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (8216) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158874
D (8226) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8226) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (8246) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (8246) TEST_COMMON: CHAR #0, value is ok.
D (8266) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8266) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8266) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (8276) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8276) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8286) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8286) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (8296) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (8306) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8316) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8366) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8366) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8366) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8366) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8376) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8386) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (8386) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8396) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70191
D (8406) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8406) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (8416) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8416) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8426) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8426) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8436) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (8446) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158823
D (8456) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8456) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (8476) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (8476) TEST_COMMON: CHAR #1, value is ok.
D (8496) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8496) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8496) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (8506) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8506) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8516) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8526) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (8526) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (8536) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8546) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8596) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8596) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8596) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8596) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8606) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8616) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (8616) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8626) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70202
D (8636) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8636) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (8646) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8646) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8656) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8656) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8666) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (8676) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158823
D (8686) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8686) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (8706) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (8706) TEST_COMMON: CHAR #2, value is ok.
D (8726) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8726) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8726) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (8736) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8736) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8746) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8756) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (8756) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (8766) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (8776) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (8826) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8826) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (8826) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (8836) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (8836) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (8846) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (8856) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (8856) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70260
D (8866) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (8866) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (8876) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (8876) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (8886) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (8896) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (8896) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (8906) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158892
D (8926) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (8926) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (8926) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (8946) TEST_COMMON: CHAR #3, value is ok.
D (8946) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8946) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (8966) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 05 
D (8966) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (8966) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (8976) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (8986) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (8996) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 35 45 33 0d 0a 
D (8996) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9006) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9056) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9056) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (9056) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (9066) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9066) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (9076) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (9086) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (9086) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 70195
D (9096) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9106) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (9106) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9116) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9116) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9126) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9126) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 
D (9136) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 155748
D (9156) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9156) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (9156) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.
D (9236) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9236) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9236) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (9236) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9246) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9256) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9256) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (9266) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9276) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9276) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9326) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9326) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9326) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9336) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9336) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (9346) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (9356) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68416
D (9366) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9366) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (9376) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9376) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9386) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9386) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9396) mbm_error_cb_request_success: 03 00 00 00 01 
D (9406) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149840
D (9416) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9416) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (9436) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (9436) TEST_COMMON: CHAR #0, value is ok.
D (9456) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9456) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9456) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (9466) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9466) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9476) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9476) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (9486) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9496) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9496) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9546) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9546) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9546) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9556) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9566) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (9566) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (9576) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68461
D (9586) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9586) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (9596) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9596) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9606) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9616) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9616) mbm_error_cb_request_success: 03 00 01 00 01 
D (9626) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149884
D (9636) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9636) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (9656) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (9656) TEST_COMMON: CHAR #1, value is ok.
D (9676) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9676) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9676) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (9686) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9686) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9696) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9706) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (9706) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9716) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9726) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9766) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9766) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9776) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (9776) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (9786) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (9786) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (9796) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 68470
D (9806) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (9816) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (9816) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (9826) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (9826) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (9836) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (9836) mbm_error_cb_request_success: 03 00 02 00 01 
D (9846) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 149892
D (9866) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (9866) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (9866) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (9886) TEST_COMMON: CHAR #2, value is ok.
D (9886) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9906) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (9906) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (9906) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9916) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (9916) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (9926) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (9936) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (9936) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (9946) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (9996) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (9996) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (9996) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (10006) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10006) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (10016) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (10026) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69867
D (10026) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10036) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (10046) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10046) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10056) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10056) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10066) mbm_error_cb_request_success: 03 00 03 00 01 
D (10066) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150629
D (10086) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10086) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (10106) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (10106) TEST_COMMON: CHAR #3, value is ok.
D (10106) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10126) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10126) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 06 
D (10136) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10136) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10146) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10146) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (10156) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 36 45 32 0d 0a 
D (10166) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10176) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10226) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10226) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10226) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10226) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10236) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10246) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (10246) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10256) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71466
D (10266) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10266) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (10276) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10276) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10286) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10296) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10296) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 
D (10306) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161297
D (10326) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10326) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (10326) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.
D (10406) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10406) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10406) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (10416) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10416) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10426) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10426) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (10436) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (10446) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10456) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10506) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10506) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10506) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10506) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10516) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10526) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (10526) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10536) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71446
D (10546) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10546) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (10556) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10556) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10566) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10576) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10576) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (10586) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (10606) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10606) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (10606) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (10626) TEST_COMMON: CHAR #0, value is ok.
D (10626) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10646) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10646) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (10646) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10656) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10656) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10666) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (10676) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (10676) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10686) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10736) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10736) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10736) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10746) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10746) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10756) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (10766) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (10766) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71438
D (10776) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (10786) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (10786) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (10796) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (10796) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (10806) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (10816) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (10816) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158848
D (10836) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (10836) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (10856) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (10856) TEST_COMMON: CHAR #1, value is ok.
D (10856) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10876) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (10876) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (10876) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10886) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (10896) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (10896) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (10906) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (10916) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (10916) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (10966) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (10966) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (10976) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (10976) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (10986) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (10986) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (10996) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11006) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71443
D (11016) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11016) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (11026) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11026) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11036) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11036) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11046) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (11056) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (11066) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11066) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (11086) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (11086) TEST_COMMON: CHAR #2, value is ok.
D (11106) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11106) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11106) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (11116) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11116) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11126) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (11136) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (11136) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (11146) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11156) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11206) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11206) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (11206) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11216) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11216) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (11226) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (11236) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11236) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71438
D (11246) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11256) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (11256) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11266) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11266) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11276) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11276) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (11286) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (11306) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11306) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (11326) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (11326) TEST_COMMON: CHAR #3, value is ok.
D (11326) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11346) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11346) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 07 
D (11346) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11356) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11356) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (11366) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (11376) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 37 45 31 0d 0a 
D (11386) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11386) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11436) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11436) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (11436) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (11446) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11456) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (11456) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (11466) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (11476) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71442
D (11476) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11486) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (11496) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11496) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11506) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11506) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11516) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 
D (11516) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (11536) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11536) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (11556) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.
D (11616) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11616) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11616) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (11616) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11626) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11636) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11636) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (11646) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11656) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11656) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11706) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11706) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (11706) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (11716) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11726) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (11726) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (11736) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69664
D (11746) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11756) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (11756) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11766) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11766) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11776) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (11776) mbm_error_cb_request_success: 03 00 00 00 01 
D (11786) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152217
D (11806) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (11806) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (11806) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (11826) TEST_COMMON: CHAR #0, value is ok.
D (11826) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11846) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (11846) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (11846) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11856) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (11856) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (11866) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (11876) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (11876) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (11886) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (11936) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (11936) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (11936) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (11946) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (11946) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (11956) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (11966) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69658
D (11966) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (11976) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (11986) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (11986) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (11996) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (11996) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12006) mbm_error_cb_request_success: 03 00 01 00 01 
D (12006) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150622
D (12026) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12026) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (12046) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (12046) TEST_COMMON: CHAR #1, value is ok.
D (12046) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12066) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12066) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (12066) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12076) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12086) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (12086) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (12096) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (12106) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12106) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12156) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12156) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (12156) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (12166) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12176) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (12176) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (12186) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69666
D (12196) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12206) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (12206) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12216) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12216) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12226) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12226) mbm_error_cb_request_success: 03 00 02 00 01 
D (12236) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152217
D (12256) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12256) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (12256) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (12276) TEST_COMMON: CHAR #2, value is ok.
D (12276) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12296) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12296) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (12296) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12306) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12306) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (12316) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (12326) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (12326) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12336) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12386) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12386) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (12386) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (12396) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12396) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (12406) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (12416) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69664
D (12416) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12426) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (12436) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12436) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12446) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12446) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12456) mbm_error_cb_request_success: 03 00 03 00 01 
D (12456) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150750
D (12476) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12476) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (12496) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (12496) TEST_COMMON: CHAR #3, value is ok.
D (12496) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12516) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12516) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 08 
D (12526) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12526) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12536) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (12536) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (12546) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 38 45 30 0d 0a 
D (12556) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12566) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12616) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12616) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (12616) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12616) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12626) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (12636) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (12636) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12646) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71481
D (12656) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12656) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (12666) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12666) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12676) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12686) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12686) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 
D (12696) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161312
D (12716) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12716) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (12716) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.
D (12796) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12796) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (12796) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 00 00 01 02 11 11 
D (12806) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12806) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (12816) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (12816) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 30 30 30 30 31 30 32 31 
D (12826) mbm_ascii@0x3ffaff5c:PORT_SEND: 31 31 31 43 41 0d 0a 
D (12836) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (12846) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (12896) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (12896) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (12896) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (12896) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (12906) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (12916) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 30 30 30 30 31 45 45 0d 
D (12916) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (12926) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71440
D (12936) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (12936) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 00 00 01 
D (12946) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (12946) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (12956) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (12966) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (12966) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 
D (12976) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161280
D (12996) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (12996) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(0) = ESP_OK
I (12996) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.
I (13016) TEST_COMMON: CHAR #0, value is ok.
D (13016) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13036) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13036) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 01 00 01 02 22 22 
D (13036) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13046) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13046) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13056) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 31 30 30 30 31 30 32 32 
D (13066) mbm_ascii@0x3ffaff5c:PORT_SEND: 32 32 32 41 37 0d 0a 
D (13066) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13076) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13126) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13126) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13126) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13136) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13136) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13146) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 31 30 30 30 31 45 44 0d 
D (13156) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13156) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71439
D (13166) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13176) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 01 00 01 
D (13176) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13186) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13186) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13196) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13206) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 
D (13206) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 158846
D (13226) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13226) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(1) = ESP_OK
I (13246) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.
I (13246) TEST_COMMON: CHAR #1, value is ok.
D (13246) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13266) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13266) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 02 00 01 02 33 33 
D (13266) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13276) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13286) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13286) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 32 30 30 30 31 30 32 33 
D (13296) mbm_ascii@0x3ffaff5c:PORT_SEND: 33 33 33 38 34 0d 0a 
D (13306) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13306) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13356) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13356) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13366) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13366) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13376) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13376) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 32 30 30 30 31 45 43 0d 
D (13386) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13396) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71443
D (13406) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13406) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 02 00 01 
D (13416) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13416) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13426) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13426) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13436) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 
D (13446) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161287
D (13456) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13456) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(2) = ESP_OK
I (13476) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.
I (13476) TEST_COMMON: CHAR #2, value is ok.
D (13496) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13496) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13496) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 03 00 01 02 44 44 
D (13506) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13506) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13516) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13526) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 33 30 30 30 31 30 32 34 
D (13526) mbm_ascii@0x3ffaff5c:PORT_SEND: 34 34 34 36 31 0d 0a 
D (13536) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13546) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13596) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13596) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13596) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13606) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13606) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13616) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 33 30 30 30 31 45 42 0d 
D (13626) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13626) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71438
D (13636) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13646) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 03 00 01 
D (13646) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13656) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13656) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13666) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13666) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 
D (13676) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (13696) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13696) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(3) = ESP_OK
I (13716) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.
I (13716) TEST_COMMON: CHAR #3, value is ok.
D (13716) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13736) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (13736) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 09 
D (13736) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13746) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (13746) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (13756) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (13766) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 39 44 46 0d 0a 
D (13776) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (13776) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (13826) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (13826) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (13826) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (13836) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (13846) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (13846) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (13856) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (13866) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71443
D (13866) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (13876) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (13886) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (13886) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (13896) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (13896) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (13906) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 
D (13906) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161286
D (13926) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (13926) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (13946) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.
D (14006) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14006) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14006) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 00 00 01 
D (14006) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14016) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14026) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14026) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 30 30 30 30 31 46 42 0d 
D (14036) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14046) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14046) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14096) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14096) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14096) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14106) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14116) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14116) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 31 31 31 31 44 38 0d 0a 
D (14126) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69665
D (14136) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14146) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 11 11 
D (14146) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14156) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14156) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14166) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14166) mbm_error_cb_request_success: 03 00 00 00 01 
D (14176) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152219
D (14196) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14196) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(0) = ESP_OK
I (14196) TEST_COMMON: 0x3ffaff5c, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.
I (14216) TEST_COMMON: CHAR #0, value is ok.
D (14216) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14236) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14236) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 01 00 01 
D (14236) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14246) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14246) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14256) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 31 30 30 30 31 46 41 0d 
D (14266) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14266) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14276) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14326) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14326) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14326) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14336) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14336) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14346) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 32 32 32 32 42 36 0d 0a 
D (14356) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69658
D (14356) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14366) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 22 22 
D (14376) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14376) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14386) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14386) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14396) mbm_error_cb_request_success: 03 00 01 00 01 
D (14396) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150620
D (14416) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14416) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(1) = ESP_OK
I (14436) TEST_COMMON: 0x3ffaff5c, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.
I (14436) TEST_COMMON: CHAR #1, value is ok.
D (14436) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14456) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14456) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 02 00 01 
D (14456) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14466) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14476) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14476) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 32 30 30 30 31 46 39 0d 
D (14486) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14496) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14496) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14546) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14546) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14546) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14556) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14566) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14566) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 33 33 33 33 39 34 0d 0a 
D (14576) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69665
D (14586) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14596) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 33 33 
D (14596) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14606) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14606) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14616) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14616) mbm_error_cb_request_success: 03 00 02 00 01 
D (14626) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 152217
D (14646) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14646) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(2) = ESP_OK
I (14646) TEST_COMMON: 0x3ffaff5c, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.
I (14666) TEST_COMMON: CHAR #2, value is ok.
D (14666) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14686) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14686) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 03 00 03 00 01 
D (14686) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14696) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14696) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (17) bytes.
D (14706) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 30 33 30 30 30 33 30 30 30 31 46 38 0d 
D (14716) mbm_ascii@0x3ffaff5c:PORT_SEND: 0a 
D (14716) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14726) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (14776) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14776) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 15.
D (14776) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 15 bytes is ready.
D (14786) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (14786) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 15 bytes.
D (14796) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 30 33 30 32 34 34 34 34 37 32 0d 0a 
D (14806) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 69657
D (14806) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (14816) mbm_ascii@0x3ffaff5c:MB_RECV: 03 02 44 44 
D (14826) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (14826) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (14836) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (14836) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (14846) mbm_error_cb_request_success: 03 00 03 00 01 
D (14846) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 150747
D (14866) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (14866) mbc_serial.master: mbc_serial_master_get_parameter: Good response for get cid(3) = ESP_OK
I (14886) TEST_COMMON: 0x3ffaff5c, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.
I (14886) TEST_COMMON: CHAR #3, value is ok.
D (14886) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14906) mb_port.event: mbm_ascii@0x3ffaff5c, mb take resource, (300 ticks).
D (14906) mbm_ascii@0x3ffaff5c:MB_TRANSMIT: 10 00 04 00 01 02 00 0a 
D (14916) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (14916) mb_port.serial: mbm_ascii@0x3ffaff5c, uart rx break.
D (14926) mb_port.serial: mbm_ascii@0x3ffaff5c, tx buffer sent: (23) bytes.
D (14926) mbm_ascii@0x3ffaff5c:PORT_SEND: 3a 30 31 31 30 30 30 30 34 30 30 30 31 30 32 30 
D (14936) mbm_ascii@0x3ffaff5c:PORT_SEND: 30 30 41 44 45 0d 0a 
D (14946) mb_port.timer: mbm_ascii@0x3ffaff5c, respond enable timeout (2000).
D (14956) mb_object.master: 0x3ffaff5c:EV_FRAME_SENT
D (15006) mb_port.serial: mbm_ascii@0x3ffaff5c, UART[1] event:
D (15006) mb_port.serial: mbm_ascii@0x3ffaff5c, data event, len: 17.
D (15006) mb_port.serial: mbm_ascii@0x3ffaff5c, frame 17 bytes is ready.
D (15006) mb_object.master: 0x3ffaff5c:EV_FRAME_RECEIVED
D (15016) mb_port.serial: mbm_ascii@0x3ffaff5c, received data: 17 bytes.
D (15026) mbm_ascii@0x3ffaff5c:PORT_RECV: 3a 30 31 31 30 30 30 30 34 30 30 30 31 45 41 0d 
D (15026) mbm_ascii@0x3ffaff5c:PORT_RECV: 0a 
D (15036) mb_port.serial: mbm_ascii@0x3ffaff5c, serial processing time[us] = 71482
D (15046) mb_object.master: 0x3ffaff5c, frame data received successfully, (0).
D (15046) mbm_ascii@0x3ffaff5c:MB_RECV: 10 00 04 00 01 
D (15056) mb_object.master: 0x3ffaff5c:EV_EXECUTE
D (15056) mb_object.master: 0x3ffaff5c, set event EV_ERROR_OK
D (15066) mb_object.master: 0x3ffaff5c:EV_ERROR_PROCESS
D (15076) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
D (15076) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a 
D (15086) mb_object.master: 0x3ffaff5c, transaction processing time(us) = 161313
D (15106) mb_port.event: mbm_ascii@0x3ffaff5c, mb_port_event_wait_req_finish: returned event = 0x400
D (15106) mbc_serial.master: mbc_serial_master_set_parameter: Good response for set cid(4) = ESP_OK
I (15106) TEST_COMMON: 0x3ffaff5c, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.
I (15186) TEST_COMMON: Destroy master, inst: 0x3ffaff5c.
D (15186) mb_port.serial: mbm_ascii@0x3ffaff5c, suspend port.
D (15186) mb_port.timer: mbm_ascii@0x3ffaff5c, timer stop, returns 259.
./main/test_modbus_rs485_comm_master_slave.c:191:Modbus RS485 ASCII multi device master - slave case.:PASS
Test ran in 14199ms</system-out></testcase></testsuite>