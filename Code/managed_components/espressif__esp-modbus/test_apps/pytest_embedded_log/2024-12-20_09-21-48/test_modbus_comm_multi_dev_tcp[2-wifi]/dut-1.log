Serial port /dev/ttyUSB2
Connecting..................
/dev/ttyUSB2 failed to connect: Failed to connect to ESP32: No serial data received.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html
Serial port /dev/ttyUSB1
Connecting.....
Connecting.........
esptool.py v4.8.1
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x000f9fff...
SHA digest in image updated
Compressed 26752 bytes to 16369...
Writing at 0x00001000... (100 %)Wrote 26752 bytes (16369 compressed) at 0x00001000 in 0.8 seconds (effective 284.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 256.3 kbit/s)...
Hash of data verified.
Compressed 955344 bytes to 584664...
Writing at 0x00010000... (2 %)Writing at 0x0001e7ff... (5 %)Writing at 0x0002ac80... (8 %)Writing at 0x00034d1c... (11 %)Writing at 0x0003d8da... (13 %)Writing at 0x000438c4... (16 %)Writing at 0x000491da... (19 %)Writing at 0x0004f661... (22 %)Writing at 0x000551cf... (25 %)Writing at 0x0005aa57... (27 %)Writing at 0x000606df... (30 %)Writing at 0x0006619e... (33 %)Writing at 0x0006c04c... (36 %)Writing at 0x00071cb0... (38 %)Writing at 0x0007792b... (41 %)Writing at 0x0007d988... (44 %)Writing at 0x00083670... (47 %)Writing at 0x00089ad4... (50 %)Writing at 0x0008ed9a... (52 %)Writing at 0x00094176... (55 %)Writing at 0x000996f9... (58 %)Writing at 0x0009eb00... (61 %)Writing at 0x000a419c... (63 %)Writing at 0x000a98cd... (66 %)Writing at 0x000af5e5... (69 %)Writing at 0x000b4d87... (72 %)Writing at 0x000baae4... (75 %)Writing at 0x000c045e... (77 %)Writing at 0x000c5e0d... (80 %)Writing at 0x000cce4d... (83 %)Writing at 0x000d6193... (86 %)Writing at 0x000ddc3a... (88 %)Writing at 0x000e3f81... (91 %)Writing at 0x000e9e58... (94 %)Writing at 0x000f03e1... (97 %)Writing at 0x000f56d6... (100 %)Wrote 955344 bytes (584664 compressed) at 0x00010000 in 9.9 seconds (effective 771.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2-210-g12938e511e 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:23:28[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (41) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (86) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=25db8h (155064) map[0m
[0;32mI (159) esp_image: segment 1: paddr=00035de0 vaddr=3ffb0000 size=041d8h ( 16856) load[0m
[0;32mI (165) esp_image: segment 2: paddr=00039fc0 vaddr=40080000 size=06058h ( 24664) load[0m
[0;32mI (175) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=a70a0h (684192) map[0m
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2-210-g12938e511e 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:23:28[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (41) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (86) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=25db8h (155064) map[0m
[0;32mI (159) esp_image: segment 1: paddr=00035de0 vaddr=3ffb0000 size=041d8h ( 16856) load[0m
[0;32mI (165) esp_image: segment 2: paddr=00039fc0 vaddr=40080000 size=06058h ( 24664) load[0m
[0;32mI (175) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=a70a0h (684192) map[0m
[0;32mI (410) esp_image: segment 4: paddr=000e70c8 vaddr=40086058 size=122e4h ( 74468) load[0m
[0;32mI (451) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (451) boot: Disabling RNG early entropy source...[0m
[0;32mI (464) cpu_start: Multicore app[0m
D (464) cpu_start: Pro cpu up[0m
D (464) cpu_start: Starting app cpu, entry point is 0x400812fc[0m
D (0) cpu_start: App cpu up[0m
D (474) clk: RTC_SLOW_CLK calibration value: 3133184[0m
D (486) cpu_start: calling init function: 0x400d2df4 on core: 0[0m
D (487) cpu_start: calling init function: 0x400d3310 on core: 0[0m
[0;32mI (489) cpu_start: Pro cpu start user code[0m
[0;32mI (494) cpu_start: cpu freq: 160000000 Hz[0m
D (498) cpu_start: calling init function: 0x400d2d34 on core: 0[0m
[0;32mI (504) app_init: Application information:[0m
[0;32mI (509) app_init: Project name:     test_modbus_comm_multi_dev[0m
[0;32mI (516) app_init: App version:      v2.0.0-beta-11-g3117942[0m
[0;32mI (522) app_init: Compile time:     Dec 20 2024 08:23:19[0m
[0;32mI (528) app_init: ELF file SHA256:  65d9d3f94...[0m
[0;32mI (533) app_init: ESP-IDF:          v5.3.2-210-g12938e511e[0m
D (539) cpu_start: calling init function: 0x400d2e08 on core: 0[0m
[0;32mI (545) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (550) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (555) efuse_init: Chip rev:         v3.0[0m
D (560) cpu_start: calling init function: 0x400d4a68 on core: 0[0m
D (566) memory_layout: Checking 9 reserved memory ranges:[0m
D (571) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000[0m
D (578) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0[0m
D (584) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb9270[0m
D (591) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440[0m
D (597) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350[0m
D (603) memory_layout: Reserved memory range 0x40070000 - 0x40078000[0m
D (610) memory_layout: Reserved memory range 0x40078000 - 0x40080000[0m
D (616) memory_layout: Reserved memory range 0x40080000 - 0x4009833c[0m
D (623) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000[0m
D (629) memory_layout: Building list of available memory regions:[0m
D (635) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000[0m
D (642) memory_layout: Available memory region 0x3ffb9270 - 0x3ffc0000[0m
D (648) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000[0m
D (655) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000[0m
D (662) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000[0m
D (668) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000[0m
D (675) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000[0m
D (681) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000[0m
D (688) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000[0m
D (695) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000[0m
D (701) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000[0m
D (708) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000[0m
D (714) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000[0m
D (721) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000[0m
D (728) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000[0m
D (734) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000[0m
D (741) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000[0m
D (747) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000[0m
D (754) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20[0m
D (761) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000[0m
D (767) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000[0m
D (774) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000[0m
D (780) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000[0m
D (787) memory_layout: Available memory region 0x3fffc000 - 0x40000000[0m
D (794) memory_layout: Available memory region 0x4009833c - 0x4009a000[0m
D (800) memory_layout: Available memory region 0x4009a000 - 0x4009c000[0m
D (807) memory_layout: Available memory region 0x4009c000 - 0x4009e000[0m
D (813) memory_layout: Available memory region 0x4009e000 - 0x400a0000[0m
[0;32mI (820) heap_init: Initializing. RAM available for dynamic allocation:[0m
D (827) heap_init: New heap initialised at 0x3ffae6e0[0m
[0;32mI (832) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
D (838) heap_init: New heap initialised at 0x3ffb9270[0m
[0;32mI (844) heap_init: At 3FFB9270 len 00026D90 (155 KiB): DRAM[0m
[0;32mI (850) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (856) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
D (863) heap_init: New heap initialised at 0x4009833c[0m
[0;32mI (868) heap_init: At 4009833C len 00007CC4 (31 KiB): IRAM[0m
D (874) cpu_start: calling init function: 0x400d5e54 on core: 0[0m
D (880) cpu_start: calling init function: 0x400d5840 on core: 0[0m
D (886) cpu_start: calling init function: 0x400d3354 on core: 0[0m
D (892) intr_alloc: Connected src 46 to int 1 (cpu 0)[0m
D (897) cpu_start: calling init function: 0x400d3360 on core: 0[0m
D (903) cpu_start: calling init function: 0x40171b3c on core: 0[0m
D (909) cpu_start: calling init function: 0x400d6a60 on core: 0[0m
D (915) cpu_start: calling init function: 0x400d58bc on core: 0[0m
D (921) cpu_start: calling init function: 0x400d5c70 on core: 0[0m
D (927) cpu_start: calling init function: 0x400d336c on core: 0[0m
D (933) spi_flash: trying chip: issi[0m
D (937) spi_flash: trying chip: gd[0m
D (940) spi_flash: trying chip: mxic[0m
D (944) spi_flash: trying chip: winbond[0m
D (948) spi_flash: trying chip: generic[0m
[0;32mI (951) spi_flash: detected chip: generic[0m
[0;32mI (956) spi_flash: flash io: dio[0m
D (960) cpu_start: calling init function: 0x400d2e94 on core: 0[0m
D (966) cpu_start: calling init function: 0x4014e6cc[0m
D (971) cpu_start: calling init function: 0x40109840[0m
D (976) cpu_start: calling init function: 0x400d6e7c[0m
D (981) cpu_start: calling init function: 0x400898cc[0m
D (986) cpu_start: calling init function: 0x400d4350[0m
D (991) cpu_start: calling init function: 0x400d3938[0m
D (996) cpu_start: calling init function: 0x400eb788 on core: 0[0m
D (1002) intr_alloc: Connected src 17 to int 2 (cpu 0)[0m
D (1007) cpu_start: calling init function: 0x400d3390 on core: 0[0m
D (1014) intr_alloc: Connected src 24 to int 3 (cpu 0)[0m
D (1019) app_start: Starting scheduler on CPU0[0m
[0;32mD (1023) intr_alloc: Connected src 25 to int 1 (cpu 1)[0m
D (1023) app_start: Starting scheduler on CPU1[0m
I (1023) main_task: Started on CPU0[0m
D (1043) heap_init: New heap initialised at 0x3ffe0440[0m
D (1043) heap_init: New heap initialised at 0x3ffe4350[0m
D (1043) intr_alloc: Connected src 16 to int 5 (cpu 0)[0m
[0;32mI (1043) main_task: Calling app_main()[0m


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Modbus RS485 multi-device test cases/nD (1173) esp_netif_lwip: LwIP stack has been initialized[0m
D (1173) esp_netif_lwip: esp-netif has been successfully initialized[0m
D (1173) event: running task for loop 0x3ffbdcd0[0m
D (1183) event: created task for loop 0x3ffbdcd0[0m
D (1183) event: created event loop 0x3ffbdcd0[0m
D (1193) esp_netif_lwip: check: remote, if=0x3ffbb130 fn=0x401067a0[0m
D (1193) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1203) esp_netif_lwip: check: remote, if=0x3ffbb130 fn=0x401067a0[0m
D (1213) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1213) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1223) esp_netif_lwip: check: remote, if=0x3ffbb130 fn=0x401067a0[0m
D (1223) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1233) esp_netif_lwip: check: remote, if=0x3ffbb130 fn=0x401067a0[0m
D (1243) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1243) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1253) esp_netif_lwip: check: remote, if=0x3ffbb130 fn=0x401067a0[0m
D (1253) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1263) esp_netif_lwip: check: remote, if=0x3ffbb130 fn=0x401067a0[0m
D (1273) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1273) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
[0;32mI (1283) example_connect: Start example_connect.[0m
D (1283) nvs: nvs_open_from_partition misc 1[0m
I (1303) wifi:wifi driver task: 3ffc2338, prio:23, stack:6656, core=0
D (1303) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1303) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1313) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1313) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1323) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1333) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1343) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1343) nvs: nvs_open_from_partition nvs.net80211 1[0m
D (1353) nvs: nvs_get opmode 1[0m
D (1353) nvs: nvs_get_str_or_blob sta.ssid[0m
D (1363) nvs: nvs_get sta.authmode 1[0m
D (1363) nvs: nvs_get_str_or_blob sta.pswd[0m
D (1363) nvs: nvs_get_str_or_blob sta.pmk[0m
D (1373) nvs: nvs_get sta.chan 1[0m
D (1373) nvs: nvs_get auto.conn 1[0m
D (1373) nvs: nvs_get bssid.set 1[0m
D (1383) nvs: nvs_get_str_or_blob sta.bssid[0m
D (1383) nvs: nvs_get sta.lis_intval 2[0m
D (1393) nvs: nvs_get sta.phym 1[0m
D (1393) nvs: nvs_get sta.phybw 1[0m
D (1393) nvs: nvs_get_str_or_blob sta.apsw[0m
D (1403) nvs: nvs_get_str_or_blob sta.apinfo[0m
D (1403) nvs: nvs_get sta.scan_method 1[0m
D (1403) nvs: nvs_get sta.sort_method 1[0m
D (1413) nvs: nvs_get sta.minrssi 1[0m
D (1413) nvs: nvs_get sta.minauth 1[0m
D (1423) nvs: nvs_get sta.pmf_e 1[0m
D (1423) nvs: nvs_get sta.pmf_r 1[0m
D (1423) nvs: nvs_get sta.btm_e 1[0m
D (1433) nvs: nvs_get sta.rrm_e 1[0m
D (1433) nvs: nvs_get sta.mbo_e 1[0m
D (1433) nvs: nvs_get_str_or_blob ap.ssid[0m
D (1443) nvs: nvs_get_str_or_blob ap.passwd[0m
D (1443) nvs: nvs_get_str_or_blob ap.pmk[0m
D (1453) nvs: nvs_get ap.chan 1[0m
D (1453) nvs: nvs_get ap.authmode 1[0m
D (1453) nvs: nvs_get ap.hidden 1[0m
D (1463) nvs: nvs_get ap.max.conn 1[0m
D (1463) nvs: nvs_get bcn.interval 2[0m
D (1463) nvs: nvs_get ap.phym 1[0m
D (1473) nvs: nvs_get ap.phybw 1[0m
D (1473) nvs: nvs_get ap.sndchan 1[0m
D (1473) nvs: nvs_get ap.pmf_e 1[0m
D (1483) nvs: nvs_get ap.pmf_r 1[0m
D (1483) nvs: nvs_get ap.p_cipher 1[0m
D (1483) nvs: nvs_get lorate 1[0m
D (1493) nvs: nvs_get_str_or_blob country[0m
D (1493) nvs: nvs_get ap.ftm_r 1[0m
D (1493) nvs: nvs_get sta.ft 1[0m
D (1503) nvs: nvs_get sta.owe 1[0m
D (1503) nvs: nvs_get sta.trans_d 1[0m
D (1503) nvs: nvs_get sta.sae_h2e 1[0m
D (1513) nvs: nvs_get sta.sae_pk_mode 1[0m
D (1513) nvs: nvs_get sta.bss_retry 1[0m
D (1513) nvs: nvs_get_str_or_blob sta.owe_data[0m
D (1523) nvs: nvs_get sta.he_dcm 1[0m
D (1523) nvs: nvs_get sta.he_dcm_c_tx 1[0m
D (1533) nvs: nvs_get sta.he_dcm_c_rx 1[0m
D (1533) nvs: nvs_get sta.he_mcs9_d 1[0m
D (1533) nvs: nvs_get sta.he_su_b_d 1[0m
D (1543) nvs: nvs_get sta.he_su_b_f_d 1[0m
D (1543) nvs: nvs_get sta.he_mu_b_f_d 1[0m
D (1543) nvs: nvs_get sta.he_cqi_f_d 1[0m
D (1553) nvs: nvs_get_str_or_blob sta.sae_h2e_id[0m
D (1553) nvs: nvs_get ap.sae_h2e 1[0m
D (1563) nvs: nvs_get_str_or_blob ap.pmk_info[0m
D (1563) nvs: nvs_get nan.phym 1[0m
D (1563) nvs: nvs_get sta.pwr_reset 1[0m
D (1573) nvs: nvs_get band 1[0m
D (1573) nvs: nvs_set ap.sndchan 1 1[0m
I (1583) wifi:wifi firmware version: 55a1cdf
I (1583) wifi:wifi certification version: v7.0
I (1583) wifi:config NVS flash: enabled
I (1593) wifi:config nano formating: disabled
I (1593) wifi:Init data frame dynamic rx buffer num: 32
I (1603) wifi:Init static rx mgmt buffer num: 5
I (1603) wifi:Init management short buffer num: 32
I (1603) wifi:Init dynamic tx buffer num: 32
I (1613) wifi:Init static rx buffer size: 1600
I (1613) wifi:Init static rx buffer num: 10
I (1623) wifi:Init dynamic rx buffer num: 32
D (1623) wifi:Reset scan defaults in ms : min,max,passive,chan_dwell :(0,120,360,30)
[0;32mI (1633) wifi_init: rx ba win: 6[0m
[0;32mI (1633) wifi_init: accept mbox: 6[0m
[0;32mI (1643) wifi_init: tcpip mbox: 32[0m
[0;32mI (1643) wifi_init: udp mbox: 6[0m
[0;32mI (1643) wifi_init: tcp mbox: 6[0m
[0;32mI (1653) wifi_init: tcp tx win: 5760[0m
[0;32mI (1653) wifi_init: tcp rx win: 5760[0m
[0;32mI (1663) wifi_init: tcp mss: 1440[0m
[0;32mI (1663) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (1663) wifi_init: WiFi RX IRAM OP enabled[0m
D (1673) esp_netif_lwip: check: remote, if=0x3ffbaea0 fn=0x40107000[0m
D (1683) esp_netif_objects: esp_netif_add_to_list_unsafe netif added successfully (total netifs: 1)[0m
D (1693) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (1693) phy_init: phy_version 4840,02e0d70,Sep  2 2024,19:39:07[0m
D (1703) phy_init: loading PHY init data from application binary[0m
D (1703) nvs: nvs_open_from_partition phy 0[0m
D (1713) nvs: nvs_get cal_version 4[0m
D (1713) nvs: nvs_get_str_or_blob cal_mac[0m
D (1723) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1723) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1733) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1743) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1743) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1753) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1763) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1763) nvs: nvs_get_str_or_blob cal_data[0m
D (1773) nvs: nvs_close 3[0m
D (1783) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1783) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1793) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1793) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1803) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1813) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1813) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1893) wifi:filter: set rx policy=0
I (1893) wifi:mode : sta (10:97:bd:d5:51:f0)
I (1893) wifi:enable tsf
D (1893) wifi:filter: set rx policy=1
D (1893) wifi:connect status 0 -> 0
D (1893) event: running post WIFI_EVENT:43 with handler 0x400e6a54 and context 0x3ffbed94 on loop 0x3ffbdcd0[0m
D (1903) event: running post WIFI_EVENT:2 with handler 0x400e6a54 and context 0x3ffbed94 on loop 0x3ffbdcd0[0m
D (1913) event: running post WIFI_EVENT:2 with handler 0x40109ae0 and context 0x3ffc8294 on loop 0x3ffbdcd0[0m
D (1923) wifi_init_default: wifi_start esp-netif:0x3ffc80c0 event-id2[0m
D (1933) wifi_init_default: WIFI mac address: 10 97 bd d5 51 f0[0m
D (1943) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x401067b4[0m
D (1943) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1953) esp_netif_handlers: esp_netif action has started with netif0x3ffc80c0 from event_id=2[0m
D (1963) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x4010721c[0m
D (1963) esp_netif_lwip: esp_netif_start_api 0x3ffc80c0[0m
D (1973) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffc80c0[0m
D (1973) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (1983) example_connect: Connecting to EspressifTest...[0m
D (1993) wifi:clear blacklist
W (1993) wifi:Password length matches WPA2 standards, authmode threshold changes from OPEN to WPA2
D (2003) wifi:Start wifi connect
D (2003) wifi:connect status 0 -> 0
D (2003) wifi:connect chan=0
D (2013) wifi:first chan=1
D (2013) wifi:connect status 0 -> 1
D (2013) wifi:filter: set rx policy=3
D (2013) wifi:clear scan ap list
D (2023) wifi:start scan: type=0x50f, priority=2, cb=0x40132ac8, arg=0x0, ss_state=0x1, time=131876, index=0
D (2033) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
[0;32mI (2033) example_connect: Waiting for IP(s)[0m
D (2153) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2153) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (2283) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2283) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (2403) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2403) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (2523) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2523) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (2643) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2643) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (2763) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2763) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (2883) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (2883) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (3013) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (3013) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (3133) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (3133) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (3253) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x3
D (3253) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (3253) wifi:rsn valid: gcipher=3 ucipher=3 akm=5 mac=fe:9f:c2:31:10:0a
D (3263) wifi:profile match: ss_state=0x7
D (3333) wifi:rsn valid: gcipher=3 ucipher=3 akm=5 mac=fe:9f:c2:31:10:0a
D (3333) wifi:profile match: ss_state=0x7
D (3373) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x7
D (3373) wifi:perform scan: ss_state=0xd, chan<12,0>, dur<360,360>
D (3733) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x7
D (3733) wifi:perform scan: ss_state=0xd, chan<13,0>, dur<360,360>
D (4093) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x7
D (4093) wifi:perform scan: ss_state=0xd, chan<14,0>, dur<360,360>
D (4453) wifi:scan end: arg=0x3ffb6376, status=0, ss_state=0x7
D (4453) wifi:filter: set rx policy=4
D (4453) wifi:first chan=1
D (4453) wifi:handoff_cb: status=0
D (4463) wifi:ap found, mac=fe:9f:c2:31:10:0a
D (4713) wifi:going for connection with bssid=fe:9f:c2:31:10:0a
D (4713) wifi:new_bss=0x3ffb7e08, cur_bss=0x0, new_chan=<11,0>, cur_chan=1
D (4713) wifi:filter: set rx policy=5
I (4723) wifi:new:<11,0>, old:<1,0>, ap:<255,255>, sta:<11,0>, prof:1, snd_ch_cfg:0x0
D (4733) wifi:connect_op: status=0, auth=5, cipher=3 
D (4733) wifi:auth mode is not none
D (4733) wifi:connect_bss: auth=1, reconnect=0
I (4743) wifi:state: init -> auth (0xb0)
D (4743) wifi:start 1s AUTH timer
D (4743) wifi:clear scan ap list
D (4753) event: running post WIFI_EVENT:43 with handler 0x400e6a54 and context 0x3ffbed94 on loop 0x3ffbdcd0[0m
D (4753) wifi:recv auth: seq=2, status=0, algo=0
I (4763) wifi:state: auth -> assoc (0x0)
D (4773) wifi:restart connect 1s timer for assoc
D (4773) wifi:recv assoc: type=0x10
D (4773) wifi:filter: set rx policy=6
I (4783) wifi:state: assoc -> run (0x10)
D (4783) wifi:start 10s connect timer for 4 way handshake
I (4813) wifi:connected with EspressifTest, aid = 2, channel 11, BW20, bssid = fe:9f:c2:31:10:0a
I (4813) wifi:security: WPA2-PSK, phy: bgn, rssi: -36
D (4813) wifi:remove all except fe:9f:c2:31:10:0a from rc list
D (4823) wifi:clear blacklist
D (4823) wifi:filter: set rx policy=7
I (4833) wifi:pm start, type: 1

I (4833) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us
D (4843) wifi:Send sta connected event
D (4843) wifi:connect status 1 -> 5
D (4843) wifi:obss scan is disabled
D (4853) wifi:start obss scan: obss scan is stopped
D (4853) event: running post WIFI_EVENT:4 with handler 0x400e6a54 and context 0x3ffbed94 on loop 0x3ffbdcd0[0m
D (4863) esp_netif_lwip: check: remote, if=0x3ffbe900 fn=0x401067a0[0m
I (4863) wifi:D (4873) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
AP's beacon interval = 102400 us, DTIM period = 1
D (4883) event: running post WIFI_EVENT:4 with handler 0x40109b10 and context 0x3ffc82f4 on loop 0x3ffbdcd0[0m
D (4893) esp_netif_handlers: esp_netif action connected with netif0x3ffc80c0 from event_id=4[0m
D (4903) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x4010746c[0m
D (4903) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffc80c0[0m
D (4913) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (4923) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x40106c48[0m
D (4923) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffc80c0[0m
D (4933) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc80c0[0m
D (4943) esp_netif_lwip: if0x3ffc80c0 start ip lost tmr: interval=120[0m
D (4943) esp_netif_lwip: starting dhcp client[0m
D (4953) wifi:D (4953) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
eb is dhcp or dns sport = 68, dport = 67
D (4963) event: running post WIFI_EVENT:4 with handler 0x40169938 and context 0x3ffc8c54 on loop 0x3ffbdcd0[0m
I (4963) wifi:<ba-add>idx:0 (ifx:0, fe:9f:c2:31:10:0a), tid:0, ssn:0, winSize:64
D (5453) wifi:eb is dhcp or dns sport = 68, dport = 67
D (5993) wifi:eb is dhcp or dns sport = 68, dport = 67
D (6953) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffc8138[0m
D (6953) esp_netif_lwip: check: local, if=0x3ffc80c0 fn=0x4010788c[0m
D (6953) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc80c0[0m
D (6963) esp_netif_lwip: if0x3ffc80c0 ip changed=1[0m
D (6963) event: running post IP_EVENT:0 with handler 0x400e6a54 and context 0x3ffbedc8 on loop 0x3ffbdcd0[0m
D (6973) event: running post IP_EVENT:0 with handler 0x4010993c and context 0x3ffc83b4 on loop 0x3ffbdcd0[0m
D (6983) wifi_init_default: Got IP wifi default handler entered[0m
D (6993) esp_netif_handlers: esp_netif action got_ip with netif0x3ffc80c0 from event_id=0[0m
[0;32mI (6993) esp_netif_handlers: example_netif_sta ip: 192.168.32.52, mask: 255.255.254.0, gw: 192.168.32.3[0m
D (7013) event: running post IP_EVENT:0 with handler 0x400e9284 and context 0x3ffc8c34 on loop 0x3ffbdcd0[0m
[0;32mI (7013) example_connect: Got IPv4 event: Interface "example_netif_sta" address: 192.168.32.52[0m
D (7023) esp_netif_lwip: check: remote, if=0x400e918c fn=0x4016a594[0m
D (7033) esp_netif_lwip: check: local, if=0x3ffbd950 fn=0x401067a0[0m
[0;32mI (7043) example_common: Connected to example_netif_sta[0m
D (7043) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
[0;32mI (7053) example_common: - IPv4 address: 192.168.32.52,[0m
D (7053) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (7063) esp_netif_lwip: check: remote, if=0x3ffbb1a0 fn=0x40106620[0m
D (7073) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (7073) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).[0m
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.
D (7843) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m

D (7913) event: created event loop 0x3ffc94f4[0m
D (7913) mb_driver: Start of driver task.[0m
D (7943) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (8123) mb_driver: 0x3ffca938, driver check shutdown (8)...[0m
D (8123) mb_driver: 0x3ffca938, driver task is suspended...[0m
D (8123) mb_driver: 0x3ffca938, stop tcp driver task.[0m
D (8123) mb_driver: 0x3ffca938, event 0x1, register.[0m
D (8133) mb_driver: 0x3ffca938, event 0x2, register.[0m
D (8133) mb_driver: 0x3ffca938, event 0x4, register.[0m
D (8143) mb_driver: 0x3ffca938, event 0x8, register.[0m
D (8143) mb_driver: 0x3ffca938, event 0x40, register.[0m
D (8153) mb_driver: 0x3ffca938, event 0x10, register.[0m
D (8153) mb_driver: 0x3ffca938, event 0x20, register.[0m
D (8163) mb_driver: 0x3ffca938, event 0x80, register.[0m
D (8163) mb_driver: 0x3ffca938, event 0x100, register.[0m
D (8173) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4[0m
D (8183) mb_driver: 0x3ffca938, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502[0m
D (8193) mb_port.tcp.master: 0x3ffca938, open slave: 0, mb_slave_tcp_01:1502[0m
D (8193) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4[0m
D (8203) mb_driver: 0x3ffca938, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502[0m
D (8213) mb_port.tcp.master: 0x3ffca938, open slave: 1, mb_slave_tcp_c8:502[0m
[0;32mI (8223) port.utils: hostname set to: [mb_master_tcp_d551f0][0m
D (8233) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
[0;32mI (8233) port.utils: mdns delegate hostname set to: [mb_master_tcp_00][0m
[0;32mI (8243) port.utils: IP: 192.168.32.52[0m
[0;32mI (8243) port.utils: GW: 192.168.32.3[0m
[0;32mI (8253) port.utils: NETMASK: 255.255.254.0[0m
D (8253) mb_port.tcp.master: created object @0x3ffca7cc[0m
D (8263) mb_port.timer: initialized mb_port.timer object @0x3ffcd770[0m
D (8263) mb_port.event: initialized object @0x3ffcd7ec[0m
D (8273) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffca570[0m
D (8283) mb_object.master: created object mbm_tcp#0x3ffc90b8[0m
D (8263) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
[0;32mI (8293) mbc_tcp.master: mb found config for cid #0, uid=1.[0m
[0;32mI (8303) mbc_tcp.master: mb found config for cid #1, uid=1.[0m
[0;32mI (8303) mbc_tcp.master: mb found config for cid #2, uid=200.[0m
[0;32mI (8313) mbc_tcp.master: mb found config for cid #3, uid=1.[0m
[0;32mI (8313) mbc_tcp.master: mb found config for cid #4, uid=1.[0m
[0;32mI (8323) TEST_COMMON: 0x3ffc90b8, modbus master stack is initialized[0m
D (8333) mb_driver: 0x3ffca938, resume tcp driver task.[0m
D (8333) mb_driver: 0x3ffca938, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT[0m
D (8343) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (8353) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (8363) event: running post loop:0x3ffca938:2 with handler 0x4016ed40 and context 0x3ffcc648 on loop 0x3ffc94f4[0m
D (8373) mb_port.tcp.master: loop:0x3ffca938  mbm_on_open: fd: 0[0m
D (8373) event: running post loop:0x3ffca938:2 with handler 0x4016ed40 and context 0x3ffcc648 on loop 0x3ffc94f4[0m
D (8383) mb_port.tcp.master: loop:0x3ffca938  mbm_on_open: fd: 1[0m
D (8393) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (8403) mb_driver: 0x3ffca938, fd event get: 0x04:-1, |MB_EVENT_RESOLVE[0m
D (8403) event: running post loop:0x3ffca938:4 with handler 0x4016f254 and context 0x3ffcc678 on loop 0x3ffc94f4[0m
D (8413) mb_port.tcp.master: loop:0x3ffca938  mbm_on_resolve: fd: -1[0m
D (8423) event: running post loop:0x3ffca938:4 with handler 0x4016f254 and context 0x3ffcc678 on loop 0x3ffc94f4[0m
D (8433) mb_port.tcp.master: loop:0x3ffca938  mbm_on_resolve: fd: 0[0m
D (8403) mb_port.timer: mbm_tcp#0x3ffc90b8, start timer (1000000).[0m
D (8443) wifi:eb is dhcp or dns sport = 31497, dport = 53
D (8463) port.utils: Incorrect host IP: mb_slave_tcp_01[0m
D (8463) port.utils: Query A: mb_slave_tcp_01.local[0m
D (8683) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (8763) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (8763) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.32.50[0m
[0;32mI (8763) mb_port.tcp.master: 0x3ffca938, slave: 0, resolved with IP:192.168.32.50.[0m
D (8773) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (8783) event: running post loop:0x3ffca938:4 with handler 0x4016f254 and context 0x3ffcc678 on loop 0x3ffc94f4[0m
D (8793) mb_port.tcp.master: loop:0x3ffca938  mbm_on_resolve: fd: 1[0m
D (8803) wifi:eb is dhcp or dns sport = 50049, dport = 53
D (8813) port.utils: Incorrect host IP: mb_slave_tcp_c8[0m
D (8813) port.utils: Query A: mb_slave_tcp_c8.local[0m
D (8973) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (8983) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (9173) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (9173) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.32.50[0m
[0;32mI (9173) mb_port.tcp.master: 0x3ffca938, slave: 1, resolved with IP:192.168.32.50.[0m
D (9183) mb_driver: 0x3ffca938, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (9193) event: running post loop:0x3ffca938:8 with handler 0x4016f458 and context 0x3ffcc6a8 on loop 0x3ffc94f4[0m
D (9203) mb_port.tcp.master: loop:0x3ffca938  mbm_on_connect: fd: 0[0m
D (9203) mb_port.tcp.master: 0x3ffca938, connection phase, slave: #0(-1) [192.168.32.50].[0m
D (9263) mb_port.tcp.master: Opened/connected: 2, 0.[0m
D (9263) mb_driver: 0x3ffca938, fd event get: 0x08:0, |MB_EVENT_CONNECT[0m
D (9263) event: running post loop:0x3ffca938:8 with handler 0x4016f458 and context 0x3ffcc6a8 on loop 0x3ffc94f4[0m
D (9273) mb_port.tcp.master: loop:0x3ffca938  mbm_on_connect: fd: 1[0m
D (9273) mb_port.tcp.master: 0x3ffca938, connection phase, slave: #1(-1) [192.168.32.50].[0m
D (9293) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (9323) mb_port.tcp.master: Opened/connected: 2, 0.[0m
D (9323) mb_driver: 0x3ffca938, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (9323) event: running post loop:0x3ffca938:8 with handler 0x4016f458 and context 0x3ffcc6a8 on loop 0x3ffc94f4[0m
D (9333) mb_port.tcp.master: loop:0x3ffca938  mbm_on_connect: fd: 0[0m
D (9333) mb_port.tcp.master: 0x3ffca938, connection phase, slave: #0(54) [192.168.32.50].[0m
[0;32mI (9373) mb_port.tcp.master: 0x3ffca938, slave: #0, sock:54, IP: 192.168.32.50, is connected.[0m
D (9373) mb_port.tcp.master: Opened/connected: 2, 1.[0m
D (9403) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (9403) mb_port.timer: timer mode: (0) triggered[0m
D (9593) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (9593) event: running post loop:0x3ffca938:8 with handler 0x4016f458 and context 0x3ffcc6a8 on loop 0x3ffc94f4[0m
D (9593) mb_port.tcp.master: loop:0x3ffca938  mbm_on_connect: fd: 1[0m
D (9603) mb_port.tcp.master: 0x3ffca938, connection phase, slave: #1(55) [192.168.32.50].[0m
D (9663) mb_port.tcp.master: Opened/connected: 2, 1.[0m
D (9663) mb_driver: 0x3ffca938, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (9663) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (9673) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (9673) event: running post loop:0x3ffca938:8 with handler 0x4016f458 and context 0x3ffcc6a8 on loop 0x3ffc94f4[0m
D (9683) mb_port.tcp.master: loop:0x3ffca938  mbm_on_connect: fd: 1[0m
D (9693) mb_port.tcp.master: 0x3ffca938, connection phase, slave: #1(55) [192.168.32.50].[0m
[0;32mI (9723) mb_port.tcp.master: 0x3ffca938, slave: #1, sock:55, IP: 192.168.32.50, is connected.[0m
D (9723) mb_port.tcp.master: Opened/connected: 2, 2.[0m
[0;32mI (9723) mbc_tcp.master: mb controller connection done.[0m
[0;32mI (9733) mb_port.tcp.master: 0x3ffca938, Connected: 2, 2, start polling.[0m
D (9743) mb_object.master: 0x3ffc90b8:EV_READY[0m
[0;32mI (9743) TEST_COMMON: 0x3ffc90b8, modbus master start...[0m
Send signal: [Master_started]!
D (9763) TEST_COMMON: Notify task start 0x3ffcdd14[0m
D (9763) TEST_COMMON: Task: 0x3ffcdd14, get notify value = 1[0m
D (9763) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (9773) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (9783) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (9783) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (9803) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (9803) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (9803) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (9813) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (9823) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (9833) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (9843) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (9853) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (9853) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (9863) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (9863) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (9873) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (10093) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (10093) port.utils: Enqueue data, length=12, TID=0x0[0m
D (10093) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (10103) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (10103) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (10113) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (10123) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (10133) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0000 received.[0m
D (10133) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (10143) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0000:0x0001, 0x3ffca82c.[0m
D (10153) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 304444.[0m
D (10163) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (10173) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 00 00 01 [0m
D (10173) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (10183) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (10183) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (10193) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (10203) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (10203) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 388388[0m
D (10213) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (10223) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (10233) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (10233) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (10253) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
D (10253) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (10263) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (10263) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (10273) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (10283) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (10293) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (10303) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (10303) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (10323) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0001, 15 (bytes), errno 119[0m
D (10323) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (10333) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (10343) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (10383) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (10593) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (10593) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (10593) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (10653) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (10653) port.utils: Enqueue data, length=12, TID=0x1[0m
D (10653) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (10663) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (10663) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (10673) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (10683) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (10693) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0001 received.[0m
D (10693) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (10703) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0001:0x0002, 0x3ffca82c.[0m
D (10713) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 386805.[0m
D (10723) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (10733) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 01 00 01 [0m
D (10733) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (10743) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (10743) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (10753) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (10763) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (10763) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 479241[0m
D (10783) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (10793) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (10793) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
D (10803) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (10813) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (10813) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (10823) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 15[0m
D (10833) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (10833) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (10843) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (10853) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (10863) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (10873) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (10883) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (10883) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (10893) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (11003) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (11093) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (11093) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (11093) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (11153) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (11153) port.utils: Enqueue data, length=12, TID=0x0[0m
D (11153) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (11163) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (11163) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (11173) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (11183) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (11193) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0000 received.[0m
D (11193) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (11203) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0000:0x0001, 0x3ffca82c.[0m
D (11213) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 339893.[0m
D (11223) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (11233) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 02 00 01 [0m
D (11233) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (11243) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (11243) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (11253) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (11263) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (11263) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 433281[0m
D (11283) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (11293) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (11293) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
D (11303) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (11303) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (11313) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (11323) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (11333) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (11333) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (11343) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (11353) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (11363) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (11373) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (11383) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (11383) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (11483) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (11533) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (11543) port.utils: Enqueue data, length=12, TID=0x2[0m
D (11543) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (11543) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (11553) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (11563) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (11573) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (11583) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0002 received.[0m
D (11583) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (11593) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0002:0x0003, 0x3ffca82c.[0m
D (11603) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 227402.[0m
D (11613) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (11623) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 03 00 01 [0m
D (11623) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (11633) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (11633) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (11643) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (11643) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (11653) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 320837[0m
D (11673) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (11673) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (11673) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
D (11683) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (11703) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (11703) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (11703) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (11713) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (11723) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (11733) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (11743) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (11753) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (11763) SENT: 00 03 00 00 00 06 01 03 00 00 00 01 [0m
D (11763) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (11773) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (12023) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (12023) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (12023) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (12083) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (12083) port.utils: Enqueue data, length=11, TID=0x3[0m
D (12083) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (12093) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (12093) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (12103) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (12113) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (12123) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0003 received.[0m
D (12123) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (12133) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0003:0x0004, 0x3ffca82c.[0m
D (12143) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 382852.[0m
D (12153) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (12163) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 11 11 [0m
D (12163) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (12173) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (12173) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (12183) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (12183) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (12193) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 475290[0m
D (12213) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (12213) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (12223) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (12233) TEST_COMMON: CHAR #0, value is ok.[0m
D (12233) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (12253) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (12253) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (12253) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (12263) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (12273) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (12283) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (12293) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (12303) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0004, 12 (bytes), errno 119[0m
D (12313) SENT: 00 04 00 00 00 06 01 03 00 01 00 01 [0m
D (12313) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (12323) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (12543) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (12543) port.utils: Enqueue data, length=11, TID=0x4[0m
D (12543) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (12553) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (12563) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (12573) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (12583) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (12583) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0004 received.[0m
D (12593) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (12603) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0004:0x0005, 0x3ffca82c.[0m
D (12613) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 299796.[0m
D (12623) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (12623) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 22 22 [0m
D (12633) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (12633) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (12643) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (12643) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (12653) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (12663) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 393307[0m
D (12673) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (12673) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (12683) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (12703) TEST_COMMON: CHAR #1, value is ok.[0m
D (12703) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (12703) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (12723) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (12723) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 12[0m
D (12733) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (12733) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (12743) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (12753) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (12763) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0001, 12 (bytes), errno 119[0m
D (12773) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01 [0m
D (12783) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (12783) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (12993) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (12993) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (12993) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (13083) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (13093) port.utils: Enqueue data, length=11, TID=0x1[0m
D (13093) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (13103) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (13103) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (13113) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (13123) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (13133) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0001 received.[0m
D (13133) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (13143) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0001:0x0002, 0x3ffca82c.[0m
D (13153) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 378420.[0m
D (13163) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (13173) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 33 33 [0m
D (13173) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (13183) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (13183) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (13193) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (13193) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (13203) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 466328[0m
D (13223) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (13223) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (13223) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (13243) TEST_COMMON: CHAR #2, value is ok.[0m
D (13243) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (13253) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (13263) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (13263) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (13273) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (13283) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (13293) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (13293) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (13303) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (13313) SENT: 00 05 00 00 00 06 01 03 00 03 00 01 [0m
D (13323) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (13333) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (13333) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (13573) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (13573) port.utils: Enqueue data, length=11, TID=0x5[0m
D (13573) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (13583) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (13593) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (13603) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (13603) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (13613) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0005 received.[0m
D (13623) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (13623) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0005:0x0006, 0x3ffca82c.[0m
D (13633) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 321153.[0m
D (13643) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (13653) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 44 44 [0m
D (13663) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (13663) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (13673) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (13673) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (13683) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (13683) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 412693[0m
D (13693) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (13713) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (13713) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (13723) TEST_COMMON: CHAR #3, value is ok.[0m
D (13743) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (13743) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (13743) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 00 [0m
D (13753) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (13763) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (13763) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (13773) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (13783) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (13793) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (13803) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00 [0m
D (13813) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (13813) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (13863) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (13983) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (14023) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (14023) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (14023) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (14083) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (14083) port.utils: Enqueue data, length=12, TID=0x6[0m
D (14083) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (14093) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (14093) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (14103) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (14113) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (14123) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0006 received.[0m
D (14133) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (14133) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0006:0x0007, 0x3ffca82c.[0m
D (14143) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 340708.[0m
D (14153) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (14163) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (14163) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (14173) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (14183) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (14183) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (14193) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 [0m
D (14193) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 435827[0m
D (14213) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (14213) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (14233) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.[0m
D (14283) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (14283) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (14283) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (14293) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (14303) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (14313) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (14323) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (14323) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (14343) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0007, 15 (bytes), errno 119[0m
D (14343) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (14353) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (14363) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (14613) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (14613) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (14613) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (14693) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (14693) port.utils: Enqueue data, length=12, TID=0x7[0m
D (14693) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (14703) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (14713) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (14723) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (14723) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (14733) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0007 received.[0m
D (14743) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (14743) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0007:0x0008, 0x3ffca82c.[0m
D (14763) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 411878.[0m
D (14763) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (14773) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 00 00 01 [0m
D (14783) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (14783) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (14793) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (14793) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (14803) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (14813) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 506570[0m
D (14823) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (14823) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (14843) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (14843) TEST_COMMON: CHAR #0, value is ok.[0m
D (14863) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (14863) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (14863) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (14873) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (14883) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (14883) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (14893) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (14903) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (14913) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (14923) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (14933) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (14933) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (15103) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (15103) port.utils: Enqueue data, length=12, TID=0x8[0m
D (15103) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (15113) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (15123) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (15133) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (15133) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (15143) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0008 received.[0m
D (15153) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (15153) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0008:0x0009, 0x3ffca82c.[0m
D (15163) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 244210.[0m
D (15173) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (15183) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 01 00 01 [0m
D (15193) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (15193) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (15203) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (15203) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (15213) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (15223) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 338863[0m
D (15233) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (15233) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (15253) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (15253) TEST_COMMON: CHAR #1, value is ok.[0m
D (15263) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (15283) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (15293) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (15293) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 15[0m
D (15303) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (15303) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (15313) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (15323) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (15333) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (15343) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (15343) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (15353) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (15363) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (15603) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (15603) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (15603) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (15663) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (15663) port.utils: Enqueue data, length=12, TID=0x2[0m
D (15663) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (15673) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (15673) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (15683) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (15693) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (15703) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0002 received.[0m
D (15703) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (15713) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0002:0x0003, 0x3ffca82c.[0m
D (15723) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 381663.[0m
D (15733) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (15743) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 02 00 01 [0m
D (15743) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (15753) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (15753) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (15763) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (15773) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (15773) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 468183[0m
D (15793) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (15793) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (15813) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (15813) TEST_COMMON: CHAR #2, value is ok.[0m
D (15823) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (15823) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (15833) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (15833) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (15843) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (15853) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (15863) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (15873) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (15883) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0009, 15 (bytes), errno 119[0m
D (15893) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (15893) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (15903) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (15963) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (16123) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (16133) port.utils: Enqueue data, length=12, TID=0x9[0m
D (16133) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (16133) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (16143) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (16153) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (16163) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (16173) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0009 received.[0m
D (16173) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (16183) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0009:0x000a, 0x3ffca82c.[0m
D (16193) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 300422.[0m
D (16203) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (16213) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 03 00 01 [0m
D (16213) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (16223) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (16223) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (16233) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (16233) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (16243) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 394420[0m
D (16253) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (16253) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (16273) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (16273) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
D (16273) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
[0;32mI (16293) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (16293) TEST_COMMON: CHAR #3, value is ok.[0m
D (16313) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (16313) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (16313) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 01 [0m
D (16323) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (16333) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (16333) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (16353) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (16353) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (16373) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (16373) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01 [0m
D (16383) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (16393) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (16533) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (16593) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (16593) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (16593) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (16653) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (16663) port.utils: Enqueue data, length=12, TID=0xa[0m
D (16663) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (16673) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (16673) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (16683) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (16693) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (16703) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000a received.[0m
D (16703) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (16713) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000a:0x000b, 0x3ffca82c.[0m
D (16723) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 346513.[0m
D (16733) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (16743) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (16743) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (16753) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (16753) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (16763) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (16763) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 [0m
D (16773) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 439961[0m
D (16783) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (16783) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (16803) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (16803) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (16823) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.[0m
D (16883) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (16883) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (16893) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (16893) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (16893) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (16903) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (16913) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (16923) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (16933) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (16943) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01 [0m
D (16943) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (16953) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (17203) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (17203) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (17203) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (17353) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (17363) port.utils: Enqueue data, length=11, TID=0xb[0m
D (17363) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (17363) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (17373) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (17383) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (17393) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (17393) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000b received.[0m
D (17403) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (17413) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000b:0x000c, 0x3ffca82c.[0m
D (17423) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 479281.[0m
D (17433) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (17443) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 11 11 [0m
D (17443) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (17443) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (17453) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (17463) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (17463) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (17473) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 565726[0m
D (17483) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (17483) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (17503) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (17503) TEST_COMMON: CHAR #0, value is ok.[0m
D (17523) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (17523) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (17533) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (17533) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (17543) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (17543) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (17553) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (17563) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (17573) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000c, 12 (bytes), errno 119[0m
D (17583) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01 [0m
D (17593) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (17593) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (17803) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (17803) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (17803) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (17873) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (17873) port.utils: Enqueue data, length=11, TID=0xc[0m
D (17873) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (17883) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (17883) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (17893) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (17903) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (17913) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000c received.[0m
D (17913) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (17923) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000c:0x000d, 0x3ffca82c.[0m
D (17933) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 347765.[0m
D (17943) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (17953) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 22 22 [0m
D (17953) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (17963) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (17963) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (17973) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (17973) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (17983) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 437150[0m
D (18003) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (18003) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (18013) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (18013) TEST_COMMON: CHAR #1, value is ok.[0m
D (18023) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (18043) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (18043) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (18043) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 12[0m
D (18053) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (18063) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (18073) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (18073) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (18093) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (18093) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01 [0m
D (18103) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (18113) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (18273) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (18273) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (18283) port.utils: Enqueue data, length=11, TID=0x3[0m
D (18283) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (18293) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (18293) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (18303) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (18313) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (18323) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0003 received.[0m
D (18333) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (18333) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0003:0x0004, 0x3ffca82c.[0m
D (18343) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 249173.[0m
D (18353) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (18363) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 33 33 [0m
D (18363) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (18373) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (18383) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (18383) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (18393) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (18393) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 340955[0m
D (18413) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (18413) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (18433) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (18433) TEST_COMMON: CHAR #2, value is ok.[0m
D (18433) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (18453) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (18453) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (18453) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (18463) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (18473) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (18483) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (18493) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (18503) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000d, 12 (bytes), errno 119[0m
D (18513) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01 [0m
D (18513) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (18523) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (18773) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (18773) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (18773) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (18833) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (18833) port.utils: Enqueue data, length=11, TID=0xd[0m
D (18833) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (18843) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (18843) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (18853) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (18863) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (18873) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000d received.[0m
D (18873) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (18883) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000d:0x000e, 0x3ffca82c.[0m
D (18893) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 383543.[0m
D (18903) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (18913) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 44 44 [0m
D (18913) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (18923) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (18923) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (18933) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (18933) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (18943) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 475958[0m
D (18963) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (18963) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (18973) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (18983) TEST_COMMON: CHAR #3, value is ok.[0m
D (18983) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (18993) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (19003) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (19003) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 02 [0m
D (19013) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (19023) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (19023) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (19033) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (19043) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (19053) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000e, 15 (bytes), errno 119[0m
D (19063) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02 [0m
D (19073) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (19073) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (19283) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (19283) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (19283) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (19343) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (19343) port.utils: Enqueue data, length=12, TID=0xe[0m
D (19343) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (19353) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (19353) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (19363) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (19373) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (19383) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000e received.[0m
D (19383) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (19393) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000e:0x000f, 0x3ffca82c.[0m
D (19403) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 338783.[0m
D (19413) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (19423) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (19423) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (19433) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (19433) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (19443) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (19453) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 [0m
D (19453) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 432200[0m
D (19473) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (19473) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (19483) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.[0m
D (19553) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (19553) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (19553) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (19553) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (19573) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (19573) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (19583) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (19593) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (19603) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x000f, 15 (bytes), errno 119[0m
D (19613) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (19623) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (19623) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (19833) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (19833) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (19833) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (19913) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (19913) port.utils: Enqueue data, length=12, TID=0xf[0m
D (19913) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (19923) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (19933) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (19943) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (19943) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (19953) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000f received.[0m
D (19963) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (19973) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x000f:0x0010, 0x3ffca82c.[0m
D (19983) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 366846.[0m
D (19993) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (19993) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 00 00 01 [0m
D (20003) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (20003) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (20013) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (20013) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (20023) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (20033) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 460322[0m
D (20043) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (20043) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (20063) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (20063) TEST_COMMON: CHAR #0, value is ok.[0m
D (20083) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (20083) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (20093) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (20093) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (20103) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (20103) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (20113) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (20123) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (20133) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0010, 15 (bytes), errno 119[0m
D (20143) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (20153) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (20153) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (20363) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (20363) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (20363) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (20423) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (20433) port.utils: Enqueue data, length=12, TID=0x10[0m
D (20433) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (20433) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (20443) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (20453) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (20463) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (20463) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0010 received.[0m
D (20473) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (20483) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0010:0x0011, 0x3ffca82c.[0m
D (20493) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 346502.[0m
D (20503) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (20513) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 01 00 01 [0m
D (20513) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (20523) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (20523) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (20533) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (20533) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (20543) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 435702[0m
D (20553) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (20553) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (20573) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (20573) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (20583) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (20603) TEST_COMMON: CHAR #1, value is ok.[0m
D (20603) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (20603) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (20623) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (20623) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 15[0m
D (20623) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (20633) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (20643) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (20653) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (20663) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0004, 15 (bytes), errno 119[0m
D (20673) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (20673) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (20683) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (20933) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (20933) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (20933) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (20993) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (20993) port.utils: Enqueue data, length=12, TID=0x4[0m
D (20993) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (21003) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (21003) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (21013) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (21023) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (21033) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0004 received.[0m
D (21033) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (21043) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0004:0x0005, 0x3ffca82c.[0m
D (21053) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 382482.[0m
D (21063) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (21073) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 02 00 01 [0m
D (21073) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (21083) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (21083) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (21093) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (21103) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (21103) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 467163[0m
D (21123) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (21123) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (21133) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
D (21143) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
[0;32mI (21153) TEST_COMMON: CHAR #2, value is ok.[0m
D (21153) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (21163) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (21173) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (21173) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (21183) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (21183) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (21193) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (21203) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (21213) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0011, 15 (bytes), errno 119[0m
D (21223) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (21233) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (21243) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (21243) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (21383) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (21433) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (21433) port.utils: Enqueue data, length=12, TID=0x11[0m
D (21433) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (21443) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (21443) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (21453) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (21463) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (21473) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0011 received.[0m
D (21483) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (21483) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0011:0x0012, 0x3ffca82c.[0m
D (21493) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 270427.[0m
D (21503) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (21513) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 03 00 01 [0m
D (21513) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (21523) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (21533) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (21533) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (21543) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (21543) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 361556[0m
D (21563) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (21563) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (21583) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (21593) TEST_COMMON: CHAR #3, value is ok.[0m
D (21593) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (21593) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (21613) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 03 [0m
D (21613) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (21613) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (21623) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (21633) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (21643) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (21653) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0012, 15 (bytes), errno 119[0m
D (21663) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03 [0m
D (21663) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (21673) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (21683) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (21873) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (21923) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (21923) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (21923) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (21983) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (21983) port.utils: Enqueue data, length=12, TID=0x12[0m
D (21983) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (21993) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (21993) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (22003) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (22013) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (22023) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0012 received.[0m
D (22023) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (22033) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0012:0x0013, 0x3ffca82c.[0m
D (22043) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 383080.[0m
D (22053) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (22063) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (22063) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (22073) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (22073) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (22083) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (22093) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 [0m
D (22093) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 468586[0m
D (22113) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (22113) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (22133) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.[0m
D (22163) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (22163) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (22183) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (22183) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (22183) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (22193) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (22203) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (22203) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (22213) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (22223) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (22233) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0013, 12 (bytes), errno 119[0m
D (22243) SENT: 00 13 00 00 00 06 01 03 00 00 00 01 [0m
D (22253) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (22253) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (22283) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (22463) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (22463) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (22473) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (22473) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (22523) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (22523) port.utils: Enqueue data, length=11, TID=0x13[0m
D (22523) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (22533) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (22533) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (22543) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (22553) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (22563) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0013 received.[0m
D (22563) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (22573) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0013:0x0014, 0x3ffca82c.[0m
D (22583) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 339194.[0m
D (22593) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (22603) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 11 11 [0m
D (22603) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (22613) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (22613) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (22623) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (22623) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (22633) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 431600[0m
D (22653) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (22653) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (22663) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (22673) TEST_COMMON: CHAR #0, value is ok.[0m
D (22673) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (22683) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (22683) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (22693) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (22703) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (22713) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (22723) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (22723) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (22743) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0014, 12 (bytes), errno 119[0m
D (22743) SENT: 00 14 00 00 00 06 01 03 00 01 00 01 [0m
D (22753) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (22763) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (23013) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (23013) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (23013) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (23093) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (23093) port.utils: Enqueue data, length=11, TID=0x14[0m
D (23093) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (23103) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (23103) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (23113) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (23123) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (23133) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0014 received.[0m
D (23133) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (23143) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0014:0x0015, 0x3ffca82c.[0m
D (23153) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 406625.[0m
D (23163) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (23173) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 22 22 [0m
D (23173) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (23183) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (23183) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (23193) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (23203) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (23203) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 499063[0m
D (23223) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (23223) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (23233) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (23253) TEST_COMMON: CHAR #1, value is ok.[0m
D (23253) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (23253) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (23273) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (23273) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 12[0m
D (23273) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (23283) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (23293) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (23293) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (23313) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (23323) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01 [0m
D (23323) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (23333) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (23393) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (23503) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (23503) port.utils: Enqueue data, length=11, TID=0x5[0m
D (23503) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (23513) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (23523) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (23533) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (23533) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (23543) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0005 received.[0m
D (23553) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (23553) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0005:0x0006, 0x3ffca82c.[0m
D (23563) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 248746.[0m
D (23573) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (23583) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 33 33 [0m
D (23593) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (23593) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (23603) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (23603) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (23613) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (23613) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 331375[0m
D (23633) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (23633) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (23653) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (23653) TEST_COMMON: CHAR #2, value is ok.[0m
D (23653) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (23673) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (23673) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (23673) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (23683) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (23693) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (23703) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (23713) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (23723) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0015, 12 (bytes), errno 119[0m
D (23733) SENT: 00 15 00 00 00 06 01 03 00 03 00 01 [0m
D (23733) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (23743) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (23993) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (23993) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (23993) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (24053) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (24053) port.utils: Enqueue data, length=11, TID=0x15[0m
D (24053) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (24063) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (24063) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (24073) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (24083) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (24093) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0015 received.[0m
D (24103) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (24103) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0015:0x0016, 0x3ffca82c.[0m
D (24113) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 382650.[0m
D (24123) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (24133) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 44 44 [0m
D (24133) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (24143) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (24143) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (24153) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (24153) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (24163) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 475040[0m
D (24183) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (24183) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (24193) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (24203) TEST_COMMON: CHAR #3, value is ok.[0m
D (24203) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (24213) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (24223) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (24223) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 04 [0m
D (24233) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (24243) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (24243) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (24253) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (24263) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (24273) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0016, 15 (bytes), errno 119[0m
D (24283) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04 [0m
D (24293) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (24293) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (24503) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (24503) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (24503) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (24563) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (24563) port.utils: Enqueue data, length=12, TID=0x16[0m
D (24563) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (24573) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (24573) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (24583) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (24593) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (24603) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0016 received.[0m
D (24603) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (24613) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0016:0x0017, 0x3ffca82c.[0m
D (24623) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 338761.[0m
D (24633) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (24643) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (24643) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (24653) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (24653) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (24663) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (24673) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 [0m
D (24673) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 432184[0m
D (24693) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (24693) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (24713) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.[0m
D (24783) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (24783) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (24793) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (24793) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (24803) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (24803) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (24813) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (24823) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (24833) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0017, 15 (bytes), errno 119[0m
D (24843) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (24843) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (24853) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (24863) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (24863) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (24913) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (24933) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (24983) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (24983) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (25033) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (25033) port.utils: Enqueue data, length=12, TID=0x17[0m
D (25033) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (25043) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (25043) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (25053) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (25063) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (25073) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0017 received.[0m
D (25083) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (25083) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0017:0x0018, 0x3ffca82c.[0m
D (25093) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 252778.[0m
D (25103) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (25113) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 00 00 01 [0m
D (25113) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (25123) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (25123) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (25133) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (25143) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (25143) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 339727[0m
D (25163) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (25163) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (25183) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (25183) TEST_COMMON: CHAR #0, value is ok.[0m
D (25193) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (25193) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (25213) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (25213) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (25223) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (25223) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (25233) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (25243) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (25253) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0018, 15 (bytes), errno 119[0m
D (25263) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (25273) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (25273) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (25283) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (25393) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (25453) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (25463) port.utils: Enqueue data, length=12, TID=0x18[0m
D (25463) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (25473) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (25473) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (25483) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (25493) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (25503) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0018 received.[0m
D (25513) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (25513) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0018:0x0019, 0x3ffca82c.[0m
D (25523) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 261996.[0m
D (25533) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (25543) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 01 00 01 [0m
D (25543) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (25553) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (25553) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (25563) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (25573) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (25573) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 345490[0m
D (25593) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (25593) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (25613) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (25613) TEST_COMMON: CHAR #1, value is ok.[0m
D (25613) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (25633) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (25633) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (25633) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 15[0m
D (25643) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (25653) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (25663) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (25673) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (25683) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (25693) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (25683) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (25703) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (25953) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (25953) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (25953) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (26013) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (26013) port.utils: Enqueue data, length=12, TID=0x6[0m
D (26013) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (26023) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (26023) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (26033) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (26043) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (26053) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0006 received.[0m
D (26053) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (26063) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0006:0x0007, 0x3ffca82c.[0m
D (26073) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 383853.[0m
D (26083) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (26093) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 02 00 01 [0m
D (26093) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (26103) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (26103) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (26113) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (26123) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (26123) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 477288[0m
D (26143) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (26143) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (26153) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (26163) TEST_COMMON: CHAR #2, value is ok.[0m
D (26163) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (26183) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (26183) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (26183) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (26193) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (26203) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (26213) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (26213) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (26233) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0019, 15 (bytes), errno 119[0m
D (26243) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (26243) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (26253) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (26283) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (26503) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (26503) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (26503) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (26573) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (26573) port.utils: Enqueue data, length=12, TID=0x19[0m
D (26573) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (26583) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (26583) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (26593) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (26603) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (26613) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0019 received.[0m
D (26623) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (26623) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0019:0x001a, 0x3ffca82c.[0m
D (26633) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 397468.[0m
D (26643) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (26653) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 03 00 01 [0m
D (26663) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (26663) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (26673) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (26673) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (26683) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (26683) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 490830[0m
D (26703) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (26703) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (26713) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (26733) TEST_COMMON: CHAR #3, value is ok.[0m
D (26733) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (26733) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (26753) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 05 [0m
D (26753) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (26753) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (26763) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (26773) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (26783) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (26793) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001a, 15 (bytes), errno 119[0m
D (26803) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05 [0m
D (26803) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (26813) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (27063) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (27063) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (27063) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (27123) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (27123) port.utils: Enqueue data, length=12, TID=0x1a[0m
D (27123) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (27133) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (27133) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (27143) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (27153) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (27163) mb_port.tcp.master: 0x3ffca938, packet TID: 0x001a received.[0m
D (27173) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (27173) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001a:0x001b, 0x3ffca82c.[0m
D (27183) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 382348.[0m
D (27193) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (27203) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (27203) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (27213) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (27213) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (27223) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (27233) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 [0m
D (27233) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 468278[0m
D (27253) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (27253) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (27263) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.[0m
D (27333) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (27333) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (27333) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (27333) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (27343) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (27353) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (27363) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (27373) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (27383) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001b, 12 (bytes), errno 119[0m
D (27393) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01 [0m
D (27393) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (27403) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (27413) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (27593) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (27593) port.utils: Enqueue data, length=11, TID=0x1b[0m
D (27593) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (27603) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (27603) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (27613) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (27623) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (27633) mb_port.tcp.master: 0x3ffca938, packet TID: 0x001b received.[0m
D (27643) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (27643) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001b:0x001c, 0x3ffca82c.[0m
D (27653) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 263171.[0m
D (27663) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (27673) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 11 11 [0m
D (27673) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (27683) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (27683) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (27693) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (27703) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (27703) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 355608[0m
D (27723) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (27723) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (27743) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (27743) TEST_COMMON: CHAR #0, value is ok.[0m
D (27743) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (27763) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (27763) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (27763) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (27773) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (27783) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (27793) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (27793) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (27813) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001c, 12 (bytes), errno 119[0m
D (27823) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01 [0m
D (27823) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (27833) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (28083) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (28083) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (28083) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (28143) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (28143) port.utils: Enqueue data, length=11, TID=0x1c[0m
D (28143) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (28153) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (28153) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (28163) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (28173) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (28183) mb_port.tcp.master: 0x3ffca938, packet TID: 0x001c received.[0m
D (28183) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (28193) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001c:0x001d, 0x3ffca82c.[0m
D (28203) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 385005.[0m
D (28213) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (28223) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 22 22 [0m
D (28223) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (28233) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (28233) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (28243) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (28243) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (28253) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 477399[0m
D (28263) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (28283) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (28283) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (28293) TEST_COMMON: CHAR #1, value is ok.[0m
D (28303) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (28303) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (28313) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (28313) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (28323) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 12[0m
D (28333) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (28333) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (28343) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (28353) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (28363) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0007, 12 (bytes), errno 119[0m
D (28373) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01 [0m
D (28383) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (28383) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (28593) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (28593) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (28593) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (28653) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (28653) port.utils: Enqueue data, length=11, TID=0x7[0m
D (28653) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (28663) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (28663) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (28673) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (28683) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (28693) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0007 received.[0m
D (28693) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (28703) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0007:0x0008, 0x3ffca82c.[0m
D (28713) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 339472.[0m
D (28723) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (28733) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 33 33 [0m
D (28733) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (28743) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (28743) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (28753) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (28753) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (28763) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 431838[0m
D (28773) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (28783) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (28803) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (28803) TEST_COMMON: CHAR #2, value is ok.[0m
D (28803) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (28823) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (28823) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (28823) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (28833) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (28843) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (28853) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (28853) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (28873) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001d, 12 (bytes), errno 119[0m
D (28873) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01 [0m
D (28883) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (28893) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (28903) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (29143) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (29143) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (29143) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (29203) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (29203) port.utils: Enqueue data, length=11, TID=0x1d[0m
D (29203) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (29213) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (29213) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (29223) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (29233) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (29243) mb_port.tcp.master: 0x3ffca938, packet TID: 0x001d received.[0m
D (29243) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (29253) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001d:0x001e, 0x3ffca82c.[0m
D (29263) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 385730.[0m
D (29273) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (29283) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 44 44 [0m
D (29283) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (29293) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (29293) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (29303) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (29303) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (29313) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 477212[0m
D (29323) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (29343) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (29343) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (29363) TEST_COMMON: CHAR #3, value is ok.[0m
D (29363) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (29363) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (29363) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 06 [0m
D (29373) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (29383) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (29393) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (29403) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (29403) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (29423) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001e, 15 (bytes), errno 119[0m
D (29433) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06 [0m
D (29433) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (29443) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (29693) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (29693) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (29703) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (29783) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (29783) port.utils: Enqueue data, length=12, TID=0x1e[0m
D (29783) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (29793) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (29803) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (29813) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (29813) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (29823) mb_port.tcp.master: 0x3ffca938, packet TID: 0x001e received.[0m
D (29833) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (29833) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001e:0x001f, 0x3ffca82c.[0m
D (29843) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 418470.[0m
D (29853) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (29863) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (29873) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (29873) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (29883) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (29883) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (29893) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 [0m
D (29893) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 511945[0m
D (29903) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (29923) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (29923) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (29933) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.[0m
D (30013) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (30013) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (30013) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (30023) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (30033) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (30033) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (30043) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (30053) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (30063) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x001f, 15 (bytes), errno 119[0m
D (30073) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (30083) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (30083) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (30253) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (30253) port.utils: Enqueue data, length=12, TID=0x1f[0m
D (30253) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (30263) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (30263) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (30273) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (30283) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (30293) mb_port.tcp.master: 0x3ffca938, packet TID: 0x001f received.[0m
D (30293) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (30303) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x001f:0x0020, 0x3ffca82c.[0m
D (30313) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 240516.[0m
D (30323) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (30333) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 00 00 01 [0m
D (30333) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (30343) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (30343) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (30353) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (30353) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (30363) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 333658[0m
D (30373) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (30383) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (30393) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (30413) TEST_COMMON: CHAR #0, value is ok.[0m
D (30413) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (30413) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (30413) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (30423) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (30433) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (30443) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (30453) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (30453) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (30473) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0020, 15 (bytes), errno 119[0m
D (30483) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (30483) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (30493) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (30743) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (30743) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (30743) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (30803) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (30803) port.utils: Enqueue data, length=12, TID=0x20[0m
D (30803) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (30813) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (30813) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (30823) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (30833) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (30843) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0020 received.[0m
D (30843) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (30853) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0020:0x0021, 0x3ffca82c.[0m
D (30863) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 385380.[0m
D (30873) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (30883) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 01 00 01 [0m
D (30883) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (30893) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (30893) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (30903) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (30913) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (30913) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 478808[0m
D (30933) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (30933) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (30953) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (30953) TEST_COMMON: CHAR #1, value is ok.[0m
D (30963) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (30963) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (30983) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (30983) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 15[0m
D (30983) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (30993) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (31003) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (31003) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (31023) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (31033) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (31033) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (31043) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (31273) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (31273) port.utils: Enqueue data, length=12, TID=0x8[0m
D (31273) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (31283) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (31283) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (31303) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (31303) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (31313) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0008 received.[0m
D (31323) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (31323) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0008:0x0009, 0x3ffca82c.[0m
D (31333) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 307394.[0m
D (31343) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (31353) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 02 00 01 [0m
D (31363) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (31363) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (31373) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (31373) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (31383) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (31383) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 392771[0m
D (31403) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (31403) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (31423) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (31423) TEST_COMMON: CHAR #2, value is ok.[0m
D (31423) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (31443) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (31443) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (31443) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (31453) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (31463) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (31473) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (31483) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (31493) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0021, 15 (bytes), errno 119[0m
D (31503) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (31503) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (31513) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (31763) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (31763) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (31763) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (31823) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (31823) port.utils: Enqueue data, length=12, TID=0x21[0m
D (31823) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (31833) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (31833) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (31843) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (31853) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (31863) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0021 received.[0m
D (31863) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (31873) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0021:0x0022, 0x3ffca82c.[0m
D (31883) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 382345.[0m
D (31893) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (31903) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 03 00 01 [0m
D (31903) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (31913) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (31913) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (31923) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (31933) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (31933) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 475752[0m
D (31953) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (31953) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (31963) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (31973) TEST_COMMON: CHAR #3, value is ok.[0m
D (31973) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (31983) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (32003) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 07 [0m
D (32003) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (32003) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (32013) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (32023) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (32023) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (32043) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0022, 15 (bytes), errno 119[0m
D (32053) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07 [0m
D (32053) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (32063) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (32293) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (32293) port.utils: Enqueue data, length=12, TID=0x22[0m
D (32293) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (32303) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (32303) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (32313) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (32323) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (32333) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0022 received.[0m
D (32333) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (32343) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0022:0x0023, 0x3ffca82c.[0m
D (32353) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 304664.[0m
D (32363) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (32373) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (32373) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (32383) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (32383) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (32393) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (32403) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 [0m
D (32403) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 389332[0m
D (32423) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (32423) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (32443) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.[0m
D (32493) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (32493) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (32513) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (32513) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (32513) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (32523) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (32533) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (32543) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (32553) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0023, 12 (bytes), errno 119[0m
D (32563) SENT: 00 23 00 00 00 06 01 03 00 00 00 01 [0m
D (32563) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (32573) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (32803) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (32823) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (32823) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (32823) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (32913) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (32913) port.utils: Enqueue data, length=11, TID=0x23[0m
D (32913) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (32923) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (32923) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (32933) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (32943) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (32953) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0023 received.[0m
D (32953) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (32963) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0023:0x0024, 0x3ffca82c.[0m
D (32973) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 413597.[0m
D (32983) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (32993) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 11 11 [0m
D (32993) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (33003) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (33003) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (33013) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (33023) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (33023) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 499186[0m
D (33043) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (33043) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (33053) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (33063) TEST_COMMON: CHAR #0, value is ok.[0m
D (33063) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (33083) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (33083) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (33083) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (33093) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (33103) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (33113) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (33113) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (33133) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0024, 12 (bytes), errno 119[0m
D (33143) SENT: 00 24 00 00 00 06 01 03 00 01 00 01 [0m
D (33143) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (33153) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (33403) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (33403) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (33403) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (33463) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (33463) port.utils: Enqueue data, length=11, TID=0x24[0m
D (33463) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (33473) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (33473) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (33483) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (33493) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (33503) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0024 received.[0m
D (33513) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (33513) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0024:0x0025, 0x3ffca82c.[0m
D (33523) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 387601.[0m
D (33533) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (33543) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 22 22 [0m
D (33543) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (33553) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (33563) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (33563) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (33573) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (33573) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 480910[0m
D (33593) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (33593) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (33613) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (33613) TEST_COMMON: CHAR #1, value is ok.[0m
D (33623) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (33623) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (33643) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (33643) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 12[0m
D (33643) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (33653) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (33663) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (33673) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (33683) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x0009, 12 (bytes), errno 119[0m
D (33693) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01 [0m
D (33693) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (33703) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (33933) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (33933) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (33933) port.utils: Enqueue data, length=11, TID=0x9[0m
D (33943) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (33953) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (33953) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (33963) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (33973) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (33983) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0009 received.[0m
D (33983) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (33993) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x0009:0x000a, 0x3ffca82c.[0m
D (34003) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 313721.[0m
D (34013) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (34023) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 33 33 [0m
D (34023) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (34033) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (34033) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (34043) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (34053) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (34053) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 398029[0m
D (34073) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (34073) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (34083) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (34103) TEST_COMMON: CHAR #2, value is ok.[0m
D (34103) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (34103) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (34103) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (34113) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (34123) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (34133) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (34143) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (34143) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (34163) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0025, 12 (bytes), errno 119[0m
D (34163) SENT: 00 25 00 00 00 06 01 03 00 03 00 01 [0m
D (34173) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (34183) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (34243) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (34433) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (34433) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (34433) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (34543) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (34543) port.utils: Enqueue data, length=11, TID=0x25[0m
D (34553) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (34553) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (34563) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (34573) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (34583) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (34583) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0025 received.[0m
D (34593) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (34603) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0025:0x0026, 0x3ffca82c.[0m
D (34613) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 442692.[0m
D (34623) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (34623) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 44 44 [0m
D (34633) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (34633) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (34643) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (34653) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (34653) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (34663) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 535140[0m
D (34673) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (34673) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (34683) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (34703) TEST_COMMON: CHAR #3, value is ok.[0m
D (34703) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (34703) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (34713) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 08 [0m
D (34723) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (34733) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (34733) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (34743) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (34753) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (34763) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0026, 15 (bytes), errno 119[0m
D (34773) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08 [0m
D (34783) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (34783) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (34933) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (34943) port.utils: Enqueue data, length=12, TID=0x26[0m
D (34943) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (34943) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (34953) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (34963) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (34973) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (34973) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0026 received.[0m
D (34983) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (34993) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0026:0x0027, 0x3ffca82c.[0m
D (35003) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 225806.[0m
D (35013) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (35023) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (35023) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (35033) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (35033) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (35043) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (35043) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 [0m
D (35053) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 319190[0m
D (35073) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (35073) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (35073) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.[0m
D (35143) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (35143) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (35143) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (35143) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (35163) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (35163) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (35173) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (35183) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (35193) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0027, 15 (bytes), errno 119[0m
D (35203) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (35203) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (35213) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (35463) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (35463) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (35463) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (35573) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (35573) port.utils: Enqueue data, length=12, TID=0x27[0m
D (35573) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (35583) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (35583) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (35593) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (35603) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (35613) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0027 received.[0m
D (35623) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (35623) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0027:0x0028, 0x3ffca82c.[0m
D (35633) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 432529.[0m
D (35643) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (35653) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 00 00 01 [0m
D (35653) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (35663) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (35673) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (35673) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (35683) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (35683) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 527690[0m
D (35703) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (35703) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (35713) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (35733) TEST_COMMON: CHAR #0, value is ok.[0m
D (35733) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (35733) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (35753) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (35753) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (35753) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (35763) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (35773) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (35783) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (35793) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0028, 15 (bytes), errno 119[0m
D (35803) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (35803) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (35813) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (36063) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (36063) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (36063) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (36123) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (36123) port.utils: Enqueue data, length=12, TID=0x28[0m
D (36123) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (36133) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (36133) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (36143) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (36153) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (36163) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0028 received.[0m
D (36163) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (36173) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0028:0x0029, 0x3ffca82c.[0m
D (36183) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 383773.[0m
D (36193) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (36203) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 01 00 01 [0m
D (36203) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (36213) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (36213) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (36223) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (36233) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (36233) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 468330[0m
D (36253) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (36253) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (36263) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (36273) TEST_COMMON: CHAR #1, value is ok.[0m
D (36273) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (36283) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (36293) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (36293) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 15[0m
D (36303) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (36313) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (36323) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (36323) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (36343) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (36353) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (36353) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (36363) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (36593) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (36593) port.utils: Enqueue data, length=12, TID=0xa[0m
D (36593) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (36603) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (36613) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (36623) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (36623) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (36633) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000a received.[0m
D (36643) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (36643) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x000a:0x000b, 0x3ffca82c.[0m
D (36653) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 308861.[0m
D (36663) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (36673) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 02 00 01 [0m
D (36683) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (36683) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (36693) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (36693) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (36703) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (36713) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 395585[0m
D (36723) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (36723) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (36743) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (36743) TEST_COMMON: CHAR #2, value is ok.[0m
D (36763) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (36763) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (36763) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (36773) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (36783) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (36783) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (36793) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (36803) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (36813) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x0029, 15 (bytes), errno 119[0m
D (36823) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (36833) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (36833) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (37043) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (37043) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (37043) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (37113) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (37113) port.utils: Enqueue data, length=12, TID=0x29[0m
D (37113) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (37123) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (37123) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (37133) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (37143) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (37153) mb_port.tcp.master: 0x3ffca938, packet TID: 0x0029 received.[0m
D (37153) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (37163) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x0029:0x002a, 0x3ffca82c.[0m
D (37173) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 350103.[0m
D (37183) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (37193) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 03 00 01 [0m
D (37193) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (37203) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (37203) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (37213) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (37213) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (37223) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 443143[0m
D (37243) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (37243) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (37263) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (37263) TEST_COMMON: CHAR #3, value is ok.[0m
D (37263) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (37273) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (37273) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 09 [0m
D (37283) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (37293) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (37303) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (37313) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (37313) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (37333) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002a, 15 (bytes), errno 119[0m
D (37343) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09 [0m
D (37343) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (37353) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (37603) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (37603) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (37603) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (37663) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (37663) port.utils: Enqueue data, length=12, TID=0x2a[0m
D (37663) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (37673) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (37673) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (37683) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (37693) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (37703) mb_port.tcp.master: 0x3ffca938, packet TID: 0x002a received.[0m
D (37703) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (37713) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002a:0x002b, 0x3ffca82c.[0m
D (37723) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 385469.[0m
D (37733) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (37743) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (37743) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (37753) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (37753) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (37763) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (37773) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 [0m
D (37773) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 478913[0m
D (37793) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (37793) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (37813) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.[0m
D (37873) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (37873) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (37873) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 00 00 01 [0m
D (37873) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (37883) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (37893) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (37903) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (37913) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (37923) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002b, 12 (bytes), errno 119[0m
D (37933) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01 [0m
D (37933) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (37943) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (38193) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (38193) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (38193) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (38253) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (38253) port.utils: Enqueue data, length=11, TID=0x2b[0m
D (38253) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (38263) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (38263) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (38273) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (38283) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (38293) mb_port.tcp.master: 0x3ffca938, packet TID: 0x002b received.[0m
D (38293) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (38303) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002b:0x002c, 0x3ffca82c.[0m
D (38313) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 382030.[0m
D (38323) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (38333) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 11 11 [0m
D (38333) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (38343) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (38343) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (38353) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (38363) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (38363) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 474456[0m
D (38383) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (38383) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (38393) TEST_COMMON: 0x3ffc90b8, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (38413) TEST_COMMON: CHAR #0, value is ok.[0m
D (38413) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (38413) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (38423) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 01 00 01 [0m
D (38423) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (38433) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (38443) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (38453) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (38453) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (38473) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002c, 12 (bytes), errno 119[0m
D (38483) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01 [0m
D (38483) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (38493) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (38743) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (38743) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (38743) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (38843) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (38843) port.utils: Enqueue data, length=11, TID=0x2c[0m
D (38843) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (38853) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (38863) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (38873) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (38873) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (38883) mb_port.tcp.master: 0x3ffca938, packet TID: 0x002c received.[0m
D (38893) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (38893) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002c:0x002d, 0x3ffca82c.[0m
D (38913) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 430933.[0m
D (38923) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (38923) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 22 22 [0m
D (38933) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (38933) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (38943) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (38943) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (38953) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (38963) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 523358[0m
D (38973) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (38973) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (38983) TEST_COMMON: 0x3ffc90b8, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (39003) TEST_COMMON: CHAR #1, value is ok.[0m
D (39003) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (39003) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (39013) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 02 00 01 [0m
D (39023) mb_port.tcp.master: 0x3ffca938,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffca6b7, len: 12[0m
D (39033) mb_driver: 0x3ffca938, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (39033) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (39043) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 1[0m
D (39053) mb_port.tcp.master: 0x3ffca938, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (39063) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (39073) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01 [0m
D (39073) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (39083) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (39253) mb_driver: 0x3ffca938, socket event active: 80000000000000[0m
D (39253) port.utils: Enqueue data, length=11, TID=0xb[0m
D (39253) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), frame received.[0m
D (39263) mb_driver: 0x3ffca938, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (39273) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (39283) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 1[0m
D (39283) mb_port.tcp.master: 0x3ffca938, slave #1(55) [192.168.32.50], receive data ready.[0m
D (39293) mb_port.tcp.master: 0x3ffca938, packet TID: 0x000b received.[0m
D (39303) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (39303) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), get packet TID: 0x000b:0x000c, 0x3ffca82c.[0m
D (39323) mb_port.tcp.master: 0x3ffca938, node #1, socket(#55)(192.168.32.50), processing time[us] = 245448.[0m
D (39323) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (39333) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 33 33 [0m
D (39343) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (39343) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (39353) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (39353) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (39363) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (39363) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 339358[0m
D (39383) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (39393) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (39393) TEST_COMMON: 0x3ffc90b8, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (39413) TEST_COMMON: CHAR #2, value is ok.[0m
D (39413) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (39413) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (39433) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 03 00 03 00 01 [0m
D (39433) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 12[0m
D (39443) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (39443) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (39453) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (39463) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (39473) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002d, 12 (bytes), errno 119[0m
D (39483) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01 [0m
D (39483) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (39493) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (39743) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (39743) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (39743) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (39863) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (39873) port.utils: Enqueue data, length=11, TID=0x2d[0m
D (39873) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (39883) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (39883) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (39893) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (39903) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (39913) mb_port.tcp.master: 0x3ffca938, packet TID: 0x002d received.[0m
D (39913) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (39923) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002d:0x002e, 0x3ffca82c.[0m
D (39933) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 449886.[0m
D (39943) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (39953) mbm_tcp#0x3ffc90b8:MB_RECV: 03 02 44 44 [0m
D (39953) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (39963) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (39963) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (39973) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (39973) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (39983) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 537864[0m
D (40003) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (40003) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (40003) TEST_COMMON: 0x3ffc90b8, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (40023) TEST_COMMON: CHAR #3, value is ok.[0m
D (40033) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (40033) mb_port.event: mbm_tcp#0x3ffc90b8, mb take resource, (300 ticks).[0m
D (40033) mbm_tcp#0x3ffc90b8:MB_TRANSMIT: 10 00 04 00 01 02 00 0a [0m
D (40043) mb_port.tcp.master: 0x3ffca938,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffca6b7, len: 15[0m
D (40053) mb_driver: 0x3ffca938, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (40063) event: running post loop:0x3ffca938:16 with handler 0x4016fa4c and context 0x3ffcc708 on loop 0x3ffc94f4[0m
D (40073) mb_port.tcp.master: loop:0x3ffca938  mbm_on_send_data: fd: 0[0m
D (40073) mb_port.tcp.master: 0x3ffca938, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (40093) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), send data successful: TID:0x002e, 15 (bytes), errno 119[0m
D (40093) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a [0m
D (40103) mb_port.timer: mbm_tcp#0x3ffc90b8, respond enable timeout (3000).[0m
D (40113) mb_object.master: 0x3ffc90b8:EV_FRAME_SENT[0m
D (40113) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffc80c0[0m
D (40363) mb_driver: 0x3ffca938, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (40363) event: running post loop:0x3ffca938:256 with handler 0x4016f428 and context 0x3ffcc798 on loop 0x3ffc94f4[0m
D (40363) mb_port.tcp.master: loop:0x3ffca938  mbm_on_timeout: fd: -1[0m
D (40423) mb_driver: 0x3ffca938, socket event active: 40000000000000[0m
D (40423) port.utils: Enqueue data, length=12, TID=0x2e[0m
D (40423) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), frame received.[0m
D (40433) mb_driver: 0x3ffca938, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (40433) event: running post loop:0x3ffca938:32 with handler 0x4016fc60 and context 0x3ffcc738 on loop 0x3ffc94f4[0m
D (40443) mb_port.tcp.master: loop:0x3ffca938  mbm_on_recv_data: fd: 0[0m
D (40453) mb_port.tcp.master: 0x3ffca938, slave #0(54) [192.168.32.50], receive data ready.[0m
D (40463) mb_port.tcp.master: 0x3ffca938, packet TID: 0x002e received.[0m
D (40463) mb_object.master: 0x3ffc90b8:EV_FRAME_RECEIVED[0m
D (40473) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), get packet TID: 0x002e:0x002f, 0x3ffca82c.[0m
D (40483) mb_port.tcp.master: 0x3ffca938, node #0, socket(#54)(192.168.32.50), processing time[us] = 387117.[0m
D (40493) mb_object.master: 0x3ffc90b8, frame data received successfully, (0).[0m
D (40503) mbm_tcp#0x3ffc90b8:MB_RECV: 10 00 04 00 01 [0m
D (40503) mb_object.master: 0x3ffc90b8:EV_EXECUTE[0m
D (40513) mb_driver: 0x3ffca938, socket event active: c0000000000000[0m
D (40523) port.utils: Socket (#54)(192.168.32.50), fail to read modbus header. ret=0[0m
[0;31mE (40523) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), critical error=-6, errno=128.[0m
D (40533) port.utils: Socket (#55)(192.168.32.50), fail to read modbus header. ret=0[0m
[0;31mE (40543) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), critical error=-6, errno=128.[0m
D (40553) mb_driver: 0x3ffca938, socket event active: c0000000000000[0m
[0;31mE (40563) port.utils: socket(#54)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (40563) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), connection lost.[0m
[0;31mE (40573) port.utils: socket(#55)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (40583) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), connection lost.[0m
D (40593) mb_driver: 0x3ffca938, fd event get: 0x80:1, |MB_EVENT_CLOSE[0m
D (40603) event: running post loop:0x3ffca938:64 with handler 0x4016f7bc and context 0x3ffcc6d8 on loop 0x3ffc94f4[0m
D (40613) event: running post loop:0x3ffca938:64 with handler 0x4016f7bc and context 0x3ffcc6d8 on loop 0x3ffc94f4[0m
D (40623) mb_object.master: 0x3ffc90b8, set event EV_ERROR_OK[0m
D (40623) mb_object.master: 0x3ffc90b8:EV_ERROR_PROCESS[0m
D (40633) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (40643) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a [0m
D (40643) mb_object.master: 0x3ffc90b8, transaction processing time(us) = 590293[0m
D (40663) mb_port.event: mbm_tcp#0x3ffc90b8, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (40663) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
D (40673) mb_driver: 0x3ffca938, socket event active: c0000000000000[0m
[0;31mE (40673) port.utils: socket(#54)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (40683) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), connection lost.[0m
[0;31mE (40693) port.utils: socket(#55)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (40703) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), connection lost.[0m
D (40713) mb_driver: 0x3ffca938, fd event get: 0x80:1, |MB_EVENT_CLOSE[0m
D (40713) event: running post loop:0x3ffca938:64 with handler 0x4016f7bc and context 0x3ffcc6d8 on loop 0x3ffc94f4[0m
D (40723) event: running post loop:0x3ffca938:64 with handler 0x4016f7bc and context 0x3ffcc6d8 on loop 0x3ffc94f4[0m
[0;32mI (40743) TEST_COMMON: 0x3ffc90b8, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.[0m
D (40783) mb_driver: 0x3ffca938, socket event active: c0000000000000[0m
[0;31mE (40783) port.utils: socket(#54)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (40783) mb_driver: 0x3ffca938, node #0, socket(#54)(192.168.32.50), connection lost.[0m
[0;31mE (40793) port.utils: socket(#55)(192.168.32.50) connection closed, ret=-1, errno=128.[0m
[0;31mE (40803) mb_driver: 0x3ffca938, node #1, socket(#55)(192.168.32.50), connection lost.[0m
D (40813) mb_driver: 0x3ffca938, fd event get: 0x80:1, |MB_EVENT_CLOSE[0m
D (40813) event: running post loop:0x3ffca938:64 with handler 0x4016f7bc and context 0x3ffcc6d8 on loop 0x3ffc94f4[0m
D (40823) event: running post loop:0x3ffca938:64 with handler 0x4016f7bc and context 0x3ffcc6d8 on loop 0x3ffc94f4[0m
[0;32mI (40843) TEST_COMMON: Destroy master, inst: 0x3ffc90b8.[0m
D (40843) mbc_tcp.master: mb stack is active, try to disable.[0m
D (40863) event: running post loop:0x3ffca938:128 with handler 0x4016fd80 and context 0x3ffcc768 on loop 0x3ffc94f4[0m
D (40863) mb_port.tcp.master: loop:0x3ffca938  mbm_on_close, fd: -1[0m
D (40873) mb_port.timer: mbm_tcp#0x3ffc90b8, timer stop, returns 259.[0m
D (40873) mb_driver: 0x3ffca938, fd event get: 0x80:-1, |MB_EVENT_CLOSE[0m
D (40883) mb_port.tcp.master: 0x3ffca938, event handler 0x3ffcc7a8, unregister.[0m
D (40893) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x1, unregister.[0m
D (40893) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x2, unregister.[0m
D (40903) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x4, unregister.[0m
D (40913) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x8, unregister.[0m
D (40913) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x40, unregister.[0m
D (40933) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x10, unregister.[0m
D (40933) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x20, unregister.[0m
D (40953) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x80, unregister.[0m
D (40953) mb_driver: 0x3ffca938, event handler 0x3ffcc7a8, event 0x100, unregister.[0m
D (40993) esp_netif_lwip: check: local, if=0x3ffbd950 fn=0x401067a0[0m
D (40993) esp_netif_lwip: check: local, if=0x3ffbd950 fn=0x401067a0[0m
D (41013) esp_netif_lwip: check: local, if=0x3ffbd950 fn=0x401067a0[0m
D (41023) esp_netif_lwip: check: local, if=0x3ffbd950 fn=0x401067a0[0m
D (41033) mb_driver: 0x3ffca938, driver unregister.[0m
D (41143) mb_driver: 0x3ffca938, driver check shutdown (18)...[0m
D (41143) mb_driver: 0x3ffca938, driver task shutdown...[0m
D (41153) mb_driver: delete loop inst: loop:0x3ffca938.[0m
D (41153) event: deleting loop 0x3ffc94f4[0m
D (41153) mb_driver: delete event loop: 0x3ffc94f4.[0m
D (41153) mb_driver: close eventfd (6).[0m
D (41153) mb_driver: 0x3ffca938, close node instance #0(mb_slave_tcp_01).[0m
D (41173) port.utils: wrong socket info or disconnected socket: 0, skip.[0m
D (41173) mb_driver: 0x3ffca938, close node instance #1(mb_slave_tcp_c8).[0m
D (41173) port.utils: wrong socket info or disconnected socket: 1, skip.[0m
[0;32mI (41193) TEST_COMMON: Test task 0x3ffcdd14, done successfully.[0m
D (41203) TEST_COMMON: Delete task 0x3ffcdd14[0m
MALLOC_CAP_8BIT usage: Free memory delta: 4088 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 4088 Leak threshold: -64 
D (41213) wifi:Start wifi disconnect
I (41213) wifi:state: run -> init (0x0)
D (41213) wifi:stop beacon and connect timers
D (41223) wifi:connect status 5 -> 6
D (41223) wifi:stop beacon/connect timer, send disassoc(8)
D (41223) wifi:sta leave
I (41233) wifi:pm stop, total sleep time: 18150520 us / 36397616 us

D (41233) wifi:stop CSA timer
I (41243) wifi:<ba-del>idx:0, tid:0
D (41243) wifi:connect status 6 -> 0
D (41243) wifi:remove fe:9f:c2:31:10:0a from rc list
I (41253) wifi:new:<11,0>, old:<11,0>, ap:<255,255>, sta:<11,0>, prof:1, snd_ch_cfg:0x0
D (41253) wifi:filter: set rx policy=8
D (41263) wifi:Send disconnect event, reason=8, AP number=0
D (41263) wifi:filter: set rx policy=8
D (41273) event: running post WIFI_EVENT:5 with handler 0x40109af8 and context 0x3ffc8324 on loop 0x3ffbdcd0[0m
D (41283) esp_netif_handlers: esp_netif action disconnected with netif0x3ffc80c0 from event_id=5[0m
D (41293) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x401074d0[0m
D (41293) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffc80c0[0m
D (41293) wifi:connect status 0 -> 0
D (41303) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffc8138[0m
D (41303) wifi:D (41313) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc80c0[0m
Start wifi disconnectD (41323) esp_netif_lwip: if0x3ffc80c0 start ip lost tmr: already started[0m

D (41333) wifi:connect status 0 -> 0D (41333) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffc80c0[0m

D (41343) esp_netif_lwip: if0x3ffc80c0 start ip lost tmr: already started[0m
D (41343) wifi:filter: set rx policy=8D (41343) esp_netif_lwip: check: local, if=0x3ffc80c0 fn=0x4010788c[0m

D (41353) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc80c0[0m
D (41353) wifi:filter: set rx policy=2D (41363) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m

D (41373) wifi:clear scan ap list
D (41373) wifi:clear blacklist
D (41373) wifi:clear rc list
D (41383) wifi:NAN WiFi stop
D (41383) event: running post WIFI_EVENT:3 with handler 0x401099ac and context 0x3ffc82c4 on loop 0x3ffbdcd0[0m
D (41393) esp_netif_handlers: esp_netif action stopped with netif0x3ffc80c0 from event_id=3[0m
D (41403) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x401073f0[0m
D (41403) esp_netif_lwip: call api in lwip: ret=0x5002, give sem[0m
I (41403) wifi:flush txq
I (41413) wifi:stop sw txq
I (41423) wifi:lmac stop hw txq
D (41423) wifi:filter: set rx policy=0
I (41423) wifi:Deinit lldesc rx mblock:10
D (41433) nvs: nvs_close 2[0m
D (41443) nvs: nvs_close 1[0m
D (41443) wifi_init_default: Clearing wifi default handlers[0m
D (41443) esp_netif_lwip: check: remote, if=0x3ffc80c0 fn=0x40106f90[0m
D (41443) esp_netif_objects: esp_netif_remove_from_list_unsafe netif successfully removed (total netifs: 0)[0m
D (41453) esp_netif_lwip: check: local, if=0x3ffc80c0 fn=0x4010788c[0m
D (41463) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffc80c0[0m
D (41473) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (41473) event: deleting loop 0x3ffbdcd0[0m
[0;32mI (41483) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).[0m
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 13574ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
