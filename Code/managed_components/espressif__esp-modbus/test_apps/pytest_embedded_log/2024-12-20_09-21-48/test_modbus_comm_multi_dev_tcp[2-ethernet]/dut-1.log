Serial port /dev/ttyUSB1
Connecting....
Connecting.....
esptool.py v4.8.1
Found 5 serial ports
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:97:bd:d5:51:f0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00010000 to 0x0009bfff...
SHA digest in image updated
Compressed 26752 bytes to 16368...
Writing at 0x00001000... (100 %)Wrote 26752 bytes (16368 compressed) at 0x00001000 in 0.8 seconds (effective 284.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 307.3 kbit/s)...
Hash of data verified.
Compressed 569568 bytes to 313827...
Writing at 0x00010000... (5 %)Writing at 0x0001e915... (10 %)Writing at 0x0002c664... (15 %)Writing at 0x000349e5... (20 %)Writing at 0x0003a62c... (25 %)Writing at 0x000408e8... (30 %)Writing at 0x00046383... (35 %)Writing at 0x0004bf22... (40 %)Writing at 0x00051993... (45 %)Writing at 0x00057324... (50 %)Writing at 0x0005d0d0... (55 %)Writing at 0x00062dfb... (60 %)Writing at 0x00068e45... (65 %)Writing at 0x0006f538... (70 %)Writing at 0x000763e3... (75 %)Writing at 0x0007f9e3... (80 %)Writing at 0x0008794b... (85 %)Writing at 0x0008dd17... (90 %)Writing at 0x00093aac... (95 %)Writing at 0x00099fb4... (100 %)Wrote 569568 bytes (313827 compressed) at 0x00010000 in 6.0 seconds (effective 765.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2-210-g12938e511e 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:22:00[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (41) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (86) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1dbach (121772) map[0m
[0;32mI (147) esp_image: segment 1: paddr=0002dbd4 vaddr=3ffb0000 size=02444h (  9284) load[0m
[0;32mI (151) esp_image: segment 2: paddr=00030020 vaddr=400d0020 size=5b6c0h (374464) map[0m
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x12 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2-210-g12938e511e 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Dec 20 2024 08:22:00[0m
[0;32mI (33) boot: Multicore bootloader[0m
[0;32mI (37) boot: chip revision: v3.0[0m
[0;32mI (41) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (45) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (50) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (54) boot: Enabling RNG early entropy source...[0m
[0;32mI (60) boot: Partition Table:[0m
[0;32mI (63) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (71) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (78) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (86) boot:  2 factory          factory app      00 00 00010000 00177000[0m
[0;32mI (93) boot: End of partition table[0m
[0;32mI (97) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=1dbach (121772) map[0m
[0;32mI (147) esp_image: segment 1: paddr=0002dbd4 vaddr=3ffb0000 size=02444h (  9284) load[0m
[0;32mI (151) esp_image: segment 2: paddr=00030020 vaddr=400d0020 size=5b6c0h (374464) map[0m
[0;32mI (281) esp_image: segment 3: paddr=0008b6e8 vaddr=3ffb2444 size=0041ch (  1052) load[0m
[0;32mI (282) esp_image: segment 4: paddr=0008bb0c vaddr=40080000 size=0f5ach ( 62892) load[0m
[0;32mI (320) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (320) boot: Disabling RNG early entropy source...[0m
[0;32mI (332) cpu_start: Multicore app[0m
D (332) cpu_start: Pro cpu up[0m
D (332) cpu_start: Starting app cpu, entry point is 0x400812ec[0m
D (0) cpu_start: App cpu up[0m
D (343) clk: RTC_SLOW_CLK calibration value: 3135936[0m
D (355) cpu_start: calling init function: 0x400d3270 on core: 0[0m
D (355) cpu_start: calling init function: 0x400d3770 on core: 0[0m
[0;32mI (357) cpu_start: Pro cpu start user code[0m
[0;32mI (362) cpu_start: cpu freq: 160000000 Hz[0m
D (367) cpu_start: calling init function: 0x400d31b0 on core: 0[0m
[0;32mI (373) app_init: Application information:[0m
[0;32mI (377) app_init: Project name:     test_modbus_comm_multi_dev[0m
[0;32mI (384) app_init: App version:      v2.0.0-beta-11-g3117942[0m
[0;32mI (390) app_init: Compile time:     Dec 20 2024 08:21:52[0m
[0;32mI (396) app_init: ELF file SHA256:  779020549...[0m
[0;32mI (401) app_init: ESP-IDF:          v5.3.2-210-g12938e511e[0m
D (408) cpu_start: calling init function: 0x400d3284 on core: 0[0m
[0;32mI (414) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (418) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (423) efuse_init: Chip rev:         v3.0[0m
D (428) cpu_start: calling init function: 0x400d4fa0 on core: 0[0m
D (434) memory_layout: Checking 9 reserved memory ranges:[0m
D (440) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000[0m
D (446) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0[0m
D (452) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb4980[0m
D (459) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440[0m
D (465) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350[0m
D (472) memory_layout: Reserved memory range 0x40070000 - 0x40078000[0m
D (478) memory_layout: Reserved memory range 0x40078000 - 0x40080000[0m
D (485) memory_layout: Reserved memory range 0x40080000 - 0x4008f5ac[0m
D (491) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000[0m
D (497) memory_layout: Building list of available memory regions:[0m
D (504) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000[0m
D (510) memory_layout: Available memory region 0x3ffb4980 - 0x3ffb8000[0m
D (517) memory_layout: Available memory region 0x3ffb8000 - 0x3ffc0000[0m
D (523) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000[0m
D (530) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000[0m
D (537) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000[0m
D (543) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000[0m
D (550) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000[0m
D (556) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000[0m
D (563) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000[0m
D (569) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000[0m
D (576) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000[0m
D (583) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000[0m
D (589) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000[0m
D (596) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000[0m
D (602) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000[0m
D (609) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000[0m
D (616) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000[0m
D (622) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000[0m
D (629) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20[0m
D (635) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000[0m
D (642) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000[0m
D (649) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000[0m
D (655) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000[0m
D (662) memory_layout: Available memory region 0x3fffc000 - 0x40000000[0m
D (668) memory_layout: Available memory region 0x4008f5ac - 0x40090000[0m
D (675) memory_layout: Available memory region 0x40090000 - 0x40092000[0m
D (682) memory_layout: Available memory region 0x40092000 - 0x40094000[0m
D (688) memory_layout: Available memory region 0x40094000 - 0x40096000[0m
D (695) memory_layout: Available memory region 0x40096000 - 0x40098000[0m
D (701) memory_layout: Available memory region 0x40098000 - 0x4009a000[0m
D (708) memory_layout: Available memory region 0x4009a000 - 0x4009c000[0m
D (715) memory_layout: Available memory region 0x4009c000 - 0x4009e000[0m
D (721) memory_layout: Available memory region 0x4009e000 - 0x400a0000[0m
[0;32mI (728) heap_init: Initializing. RAM available for dynamic allocation:[0m
D (735) heap_init: New heap initialised at 0x3ffae6e0[0m
[0;32mI (740) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
D (746) heap_init: New heap initialised at 0x3ffb4980[0m
[0;32mI (751) heap_init: At 3FFB4980 len 0002B680 (173 KiB): DRAM[0m
[0;32mI (758) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (764) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
D (770) heap_init: New heap initialised at 0x4008f5ac[0m
[0;32mI (775) heap_init: At 4008F5AC len 00010A54 (66 KiB): IRAM[0m
D (782) cpu_start: calling init function: 0x400d6458 on core: 0[0m
D (788) cpu_start: calling init function: 0x400d5ea4 on core: 0[0m
D (794) cpu_start: calling init function: 0x400d37b4 on core: 0[0m
D (800) intr_alloc: Connected src 46 to int 1 (cpu 0)[0m
D (805) cpu_start: calling init function: 0x400d37c0 on core: 0[0m
D (811) cpu_start: calling init function: 0x40127f10 on core: 0[0m
D (817) cpu_start: calling init function: 0x400d7014 on core: 0[0m
D (823) cpu_start: calling init function: 0x400d5f10 on core: 0[0m
D (829) cpu_start: calling init function: 0x400d6274 on core: 0[0m
D (835) cpu_start: calling init function: 0x400d37cc on core: 0[0m
D (841) spi_flash: trying chip: issi[0m
D (844) spi_flash: trying chip: gd[0m
D (848) spi_flash: trying chip: mxic[0m
D (851) spi_flash: trying chip: winbond[0m
D (855) spi_flash: trying chip: generic[0m
[0;32mI (859) spi_flash: detected chip: generic[0m
[0;32mI (864) spi_flash: flash io: dio[0m
D (868) cpu_start: calling init function: 0x400d3310 on core: 0[0m
D (874) cpu_start: calling init function: 0x4010ec6c[0m
D (879) cpu_start: calling init function: 0x4010dc64[0m
D (884) cpu_start: calling init function: 0x40107bdc[0m
D (889) cpu_start: calling init function: 0x400d7424[0m
D (894) cpu_start: calling init function: 0x40086d40[0m
D (899) cpu_start: calling init function: 0x400d4850[0m
D (904) cpu_start: calling init function: 0x400d3d98[0m
D (909) cpu_start: calling init function: 0x400ecf60 on core: 0[0m
D (915) intr_alloc: Connected src 17 to int 2 (cpu 0)[0m
D (920) cpu_start: calling init function: 0x400d37f0 on core: 0[0m
D (926) intr_alloc: Connected src 24 to int 3 (cpu 0)[0m
D (931) app_start: Starting scheduler on CPU0[0m
[0;32D (936) intr_alloc: Connected src 25 to int 1 (cpu 1)[0m
D (936) app_start: Starting scheduler on CPU1[0m
mI (936) main_task: Started on CPU0[0m
D (956) heap_init: New heap initialised at 0x3ffe0440[0m
D (956) heap_init: New heap initialised at 0x3ffe4350[0m
D (956) intr_alloc: Connected src 16 to int 5 (cpu 0)[0m
[0;32mI (956) main_task: Calling app_main()[0m


Press ENTER to see the list of tests.
1
Running Modbus TCP multi device master - slave case....
Modbus TCP multi device master - slave case.
	(1)	"test_modbus_tcp_slave"
	(2)	"test_modbus_tcp_master"
2
Modbus RS485 multi-device test cases/nD (1116) esp_netif_lwip: LwIP stack has been initialized[0m
D (1116) esp_netif_lwip: esp-netif has been successfully initialized[0m
D (1116) event: running task for loop 0x3ffb93e0[0m
D (1126) event: created task for loop 0x3ffb93e0[0m
D (1126) event: created event loop 0x3ffb93e0[0m
D (1126) esp_netif_lwip: check: remote, if=0x3ffb6840 fn=0x401064b4[0m
D (1136) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1146) esp_netif_lwip: check: remote, if=0x3ffb6840 fn=0x401064b4[0m
D (1146) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1156) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1156) esp_netif_lwip: check: remote, if=0x3ffb6840 fn=0x401064b4[0m
D (1166) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1176) esp_netif_lwip: check: remote, if=0x3ffb6840 fn=0x401064b4[0m
D (1176) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1186) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1186) esp_netif_lwip: check: remote, if=0x3ffb6840 fn=0x401064b4[0m
D (1196) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1206) esp_netif_lwip: check: remote, if=0x3ffb6840 fn=0x401064b4[0m
D (1206) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1216) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x0[0m
D (1216) esp_netif_lwip: check: remote, if=0x3ffb67e0 fn=0x40106d14[0m
D (1226) esp_netif_objects: esp_netif_add_to_list_unsafe netif added successfully (total netifs: 1)[0m
D (1236) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (1246) intr_alloc: Connected src 38 to int 8 (cpu 0)[0m
D (1276) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit[0m
D (1276) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit[0m
D (1276) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit[0m
D (1286) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit[0m
D (1286) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit[0m
D (1296) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit[0m
D (1306) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit[0m
D (1326) esp_eth: new ethernet driver @0x3ffbf6d8[0m
[0;32mI (1326) esp_eth.netif.netif_glue: 10:97:bd:d5:51:f3[0m
D (1326) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x401064c8[0m
D (1326) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (1336) esp_eth.netif.netif_glue: ethernet attached to netif[0m
D (3646) event: running post ETH_EVENT:0 with handler 0x400e71d0 and context 0x3ffba50c on loop 0x3ffb93e0[0m
D (3646) event: running post ETH_EVENT:0 with handler 0x40109120 and context 0x3ffbf784 on loop 0x3ffb93e0[0m
D (3646) esp_eth.netif.netif_glue: eth_action_start: 0x3ffbf750, 0x3f41246c, 0, 0x3ffbf884, 0x3ffbf6d8[0m
D (3656) esp_netif_handlers: esp_netif action has started with netif0x3ffbb75c from event_id=0[0m
D (3666) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x40106f30[0m
D (3676) esp_netif_lwip: esp_netif_start_api 0x3ffbb75c[0m
D (3676) esp.emac: working in 100Mbps[0m
D (3676) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffbb75c[0m
D (3686) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3696) esp.emac: working in full duplex[0m
D (3696) esp.emac: Flow control not enabled for the link[0m
D (3706) esp.emac: emac started[0m
D (3706) event: running post ETH_EVENT:2 with handler 0x400e71d0 and context 0x3ffba50c on loop 0x3ffb93e0[0m
D (3716) esp_netif_lwip: check: remote, if=0x3ffba010 fn=0x401064b4[0m
D (3726) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (3726) ethernet_connect: Waiting for IP(s).[0m
D (3726) event: running post ETH_EVENT:2 with handler 0x40109088 and context 0x3ffbf7e4 on loop 0x3ffb93e0[0m
D (3746) esp_eth.netif.netif_glue: eth_action_connected: 0x3ffbf750, 0x3f41246c, 2, 0x3ffbf884, 0x3ffbf6d8[0m
D (3756) esp_netif_handlers: esp_netif action connected with netif0x3ffbb75c from event_id=2[0m
D (3766) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x40107180[0m
D (3766) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffbb75c[0m
D (3776) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (3776) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x4010695c[0m
D (3786) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffbb75c[0m
D (3796) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb75c[0m
D (3806) esp_netif_lwip: if0x3ffbb75c start ip lost tmr: interval=120[0m
D (3806) esp_netif_lwip: starting dhcp client[0m
D (3816) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (4056) esp.emac: receive len= 60[0m
D (4066) esp.emac: receive len= 119[0m
D (4066) esp.emac: receive len= 119[0m
D (6056) esp.emac: receive len= 119[0m
D (7316) esp.emac: receive len= 62[0m
D (8056) esp.emac: receive len= 119[0m
D (8316) esp.emac: receive len= 342[0m
D (8316) esp.emac: receive len= 342[0m
D (9286) esp.emac: receive len= 337[0m
D (9316) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb7e4[0m
D (9316) esp_netif_lwip: check: local, if=0x3ffbb75c fn=0x40107588[0m
D (9316) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb75c[0m
D (9316) esp_netif_lwip: if0x3ffbb75c ip changed=1[0m
D (9326) event: running post IP_EVENT:4 with handler 0x400e71d0 and context 0x3ffba4d8 on loop 0x3ffb93e0[0m
D (9336) event: running post IP_EVENT:4 with handler 0x40109010 and context 0x3ffbf844 on loop 0x3ffb93e0[0m
D (9346) esp_eth.netif.netif_glue: eth_action_got_ip: 0x3ffbf750, 0x3f41170c, 4, 0x3ffbf97c, 0x3ffbb75c[0m
D (9356) esp_netif_handlers: esp_netif action got_ip with netif0x3ffbb75c from event_id=4[0m
[0;32mI (9366) esp_netif_handlers: example_netif_eth ip: 192.168.34.122, mask: 255.255.254.0, gw: 192.168.34.252[0m
D (9376) event: running post IP_EVENT:4 with handler 0x400e9a48 and context 0x3ffbf864 on loop 0x3ffb93e0[0m
[0;32mI (9386) ethernet_connect: Got IPv4 event: Interface "example_netif_eth" address: 192.168.34.122[0m
D (9396) esp_netif_lwip: check: remote, if=0x400e9898 fn=0x401245e8[0m
[0;32mI (9396) example_common: Connected to example_netif_eth[0m
D (9406) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
[0;32mI (9406) example_common: - IPv4 address: 192.168.34.122,[0m
D (9416) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (9426) esp_netif_lwip: check: local, if=0x3ffb9060 fn=0x401064b4[0m
D (9426) esp_netif_lwip: check: remote, if=0x3ffb68b0 fn=0x40106334[0m
D (9436) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
[0;32mI (9436) MODBUS_TCP_COMM_TEST: Master TCP is started (test_modbus_tcp_master).[0m
Waiting for signal: [Slave_ready]!
Please press "Enter" key once any board send this signal.
D (10056) esp.emac: receive len= 119[0m
D (11046) esp.emac: receive len= 195[0m
D (12056) esp.emac: receive len= 119[0m
D (12346) esp.emac: receive len= 60[0m
D (12856) esp.emac: receive len= 85[0m
D (12866) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (12866) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (12866) esp.emac: receive len= 105[0m
D (12866) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (13636) esp.emac: receive len= 60[0m
D (13866) esp.emac: receive len= 85[0m
D (13866) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (13866) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (13866) esp.emac: receive len= 105[0m
D (13876) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (14056) esp.emac: receive len= 119[0m
[0;31mE (14306) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (14306) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (14306) task_wdt: Tasks currently running:[0m
[0;31mE (14306) task_wdt: CPU 0: main[0m
[0;31mE (14306) task_wdt: CPU 1: IDLE1[0m
[0;31mE (14306) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EC0BB:0x3FFB11C0 0x400EC480:0x3FFB11E0 0x40083515:0x3FFB1210 0x400D899E:0x3FFB6880 0x400D8A8E:0x3FFB68B0 0x400D805B:0x3FFB68E0 0x400D8089:0x3FFB6910 0x400D725D:0x3FFB6930 0x400D84B6:0x3FFB6990 0x400D8641:0x3FFB69C0 0x400D86BE:0x3FFB6AE0 0x400D876E:0x3FFB6B00 0x400D87A1:0x3FFB6B20 0x400D894E:0x3FFB6B40 0x400D7029:0x3FFB6C60 0x40129777:0x3FFB6C80 0x40087D01:0x3FFB6CB0

D (14666) esp.emac: receive len= 60[0m
D (15716) esp.emac: receive len= 60[0m
D (16056) esp.emac: receive len= 119[0m
D (16446) esp.emac: receive len= 70[0m
D (17696) esp.emac: receive len= 350[0m
D (17696) esp.emac: receive len= 350[0m
D (17696) esp.emac: receive len= 60[0m
D (18056) esp.emac: receive len= 119[0m
D (18196) esp.emac: receive len= 60[0m
D (18446) esp.emac: receive len= 60[0m
[0;31mE (19306) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (19306) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (19306) task_wdt: Tasks currently running:[0m
[0;31mE (19306) task_wdt: CPU 0: main[0m
[0;31mE (19306) task_wdt: CPU 1: IDLE1[0m
[0;31mE (19306) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EC0BB:0x3FFB11C0 0x400EC480:0x3FFB11E0 0x40083515:0x3FFB1210 0x400D899E:0x3FFB6880 0x400D8A8E:0x3FFB68B0 0x400D805B:0x3FFB68E0 0x400D8089:0x3FFB6910 0x400D725D:0x3FFB6930 0x400D84B6:0x3FFB6990 0x400D8641:0x3FFB69C0 0x400D86BE:0x3FFB6AE0 0x400D876E:0x3FFB6B00 0x400D87A1:0x3FFB6B20 0x400D894E:0x3FFB6B40 0x400D7029:0x3FFB6C60 0x40129777:0x3FFB6C80 0x40087D01:0x3FFB6CB0

D (19446) esp.emac: receive len= 60[0m
D (20056) esp.emac: receive len= 119[0m
D (20086) esp.emac: receive len= 62[0m
D (20446) esp.emac: receive len= 60[0m
D (20446) esp.emac: receive len= 70[0m
D (20676) esp.emac: receive len= 60[0m
D (21446) esp.emac: receive len= 60[0m
D (22056) esp.emac: receive len= 119[0m
D (24056) esp.emac: receive len= 119[0m
[0;31mE (24306) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (24306) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (24306) task_wdt: Tasks currently running:[0m
[0;31mE (24306) task_wdt: CPU 0: main[0m
[0;31mE (24306) task_wdt: CPU 1: IDLE1[0m
[0;31mE (24306) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EC0BB:0x3FFB11C0 0x400EC480:0x3FFB11E0 0x40083515:0x3FFB1210 0x400D899E:0x3FFB6880 0x400D8A8E:0x3FFB68B0 0x400D805B:0x3FFB68E0 0x400D8089:0x3FFB6910 0x400D725D:0x3FFB6930 0x400D84B6:0x3FFB6990 0x400D8641:0x3FFB69C0 0x400D86BE:0x3FFB6AE0 0x400D876E:0x3FFB6B00 0x400D87A1:0x3FFB6B20 0x400D894E:0x3FFB6B40 0x400D7029:0x3FFB6C60 0x40129777:0x3FFB6C80 0x40087D01:0x3FFB6CB0

D (26056) esp.emac: receive len= 119[0m
D (28056) esp.emac: receive len= 119[0m
[0;31mE (29306) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (29306) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (29306) task_wdt: Tasks currently running:[0m
[0;31mE (29306) task_wdt: CPU 0: main[0m
[0;31mE (29306) task_wdt: CPU 1: IDLE1[0m
[0;31mE (29306) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EC0BB:0x3FFB11C0 0x400EC480:0x3FFB11E0 0x40083515:0x3FFB1210 0x400D899E:0x3FFB6880 0x400D8A8E:0x3FFB68B0 0x400D805B:0x3FFB68E0 0x400D8089:0x3FFB6910 0x400D725D:0x3FFB6930 0x400D84B6:0x3FFB6990 0x400D8641:0x3FFB69C0 0x400D86BE:0x3FFB6AE0 0x400D876E:0x3FFB6B00 0x400D87A1:0x3FFB6B20 0x400D894E:0x3FFB6B40 0x400D7029:0x3FFB6C60 0x40129777:0x3FFB6C80 0x40087D01:0x3FFB6CB0

D (30056) esp.emac: receive len= 119[0m
D (32056) esp.emac: receive len= 119[0m
D (34056) esp.emac: receive len= 119[0m
D (34236) esp.emac: receive len= 60[0m
[0;31mE (34306) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (34306) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (34306) task_wdt: Tasks currently running:[0m
[0;31mE (34306) task_wdt: CPU 0: main[0m
[0;31mE (34306) task_wdt: CPU 1: IDLE1[0m
[0;31mE (34306) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EC0BB:0x3FFB11C0 0x400EC480:0x3FFB11E0 0x40083515:0x3FFB1210 0x400D899E:0x3FFB6880 0x400D8A8E:0x3FFB68B0 0x400D805B:0x3FFB68E0 0x400D8089:0x3FFB6910 0x400D725D:0x3FFB6930 0x400D84B6:0x3FFB6990 0x400D8641:0x3FFB69C0 0x400D86BE:0x3FFB6AE0 0x400D876E:0x3FFB6B00 0x400D87A1:0x3FFB6B20 0x400D894E:0x3FFB6B40 0x400D7029:0x3FFB6C60 0x40129777:0x3FFB6C80 0x40087D01:0x3FFB6CB0

D (34646) esp.emac: receive len= 70[0m
D (35896) esp.emac: receive len= 350[0m
D (35896) esp.emac: receive len= 350[0m
D (35896) esp.emac: receive len= 60[0m
D (36056) esp.emac: receive len= 119[0m
D (36396) esp.emac: receive len= 60[0m
D (36596) esp.emac: receive len= 108[0m
D (36646) esp.emac: receive len= 60[0m
D (37646) esp.emac: receive len= 60[0m
D (37656) esp.emac: receive len= 108[0m
D (37996) esp.emac: receive len= 62[0m
D (38056) esp.emac: receive len= 119[0m
D (38646) esp.emac: receive len= 60[0m
D (38646) esp.emac: receive len= 70[0m
D (38886) esp.emac: receive len= 60[0m
D (39086) esp.emac: receive len= 60[0m
[0;31mE (39306) task_wdt: Task watchdog got triggered. The following tasks/users did not reset the watchdog in time:[0m
[0;31mE (39306) task_wdt:  - IDLE0 (CPU 0)[0m
[0;31mE (39306) task_wdt: Tasks currently running:[0m
[0;31mE (39306) task_wdt: CPU 0: main[0m
[0;31mE (39306) task_wdt: CPU 1: IDLE1[0m
[0;31mE (39306) task_wdt: Print CPU 0 (current core) backtrace[0m


Backtrace: 0x400EC0BB:0x3FFB11C0 0x400EC480:0x3FFB11E0 0x40083515:0x3FFB1210 0x400D899E:0x3FFB6880 0x400D8A8E:0x3FFB68B0 0x400D805B:0x3FFB68E0 0x400D8089:0x3FFB6910 0x400D725D:0x3FFB6930 0x400D84B6:0x3FFB6990 0x400D8641:0x3FFB69C0 0x400D86BE:0x3FFB6AE0 0x400D876E:0x3FFB6B00 0x400D87A1:0x3FFB6B20 0x400D894E:0x3FFB6B40 0x400D7029:0x3FFB6C60 0x40129777:0x3FFB6C80 0x40087D01:0x3FFB6CB0

D (39426) esp.emac: receive len= 350[0m
D (39646) esp.emac: receive len= 60[0m
D (39656) esp.emac: receive len= 108[0m
D (40056) esp.emac: receive len= 119[0m
D (40436) esp.emac: receive len= 350[0m
D (40436) esp.emac: receive len= 60[0m
D (40926) esp.emac: receive len= 60[0m
D (41016) esp.emac: receive len= 60[0m
D (41366) esp.emac: receive len= 60[0m
D (41426) esp.emac: receive len= 60[0m
D (41676) esp.emac: receive len= 337[0m
D (42016) esp.emac: receive len= 60[0m
D (42036) esp.emac: receive len= 101[0m
D (42036) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42036) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42046) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (42066) esp.emac: receive len= 119[0m
D (42346) esp.emac: receive len= 101[0m
D (42346) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42346) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42346) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m

D (42486) event: created event loop 0x3ffc1680[0m
D (42486) mb_driver: Start of driver task.[0m
D (42636) esp.emac: receive len= 101[0m
D (42636) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42636) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42646) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (42696) mb_driver: 0x3ffc1270, driver check shutdown (8)...[0m
D (42696) mb_driver: 0x3ffc1270, driver task is suspended...[0m
D (42696) mb_driver: 0x3ffc1270, stop tcp driver task.[0m
D (42696) mb_driver: 0x3ffc1270, event 0x1, register.[0m
D (42706) mb_driver: 0x3ffc1270, event 0x2, register.[0m
D (42706) mb_driver: 0x3ffc1270, event 0x4, register.[0m
D (42716) mb_driver: 0x3ffc1270, event 0x8, register.[0m
D (42716) mb_driver: 0x3ffc1270, event 0x40, register.[0m
D (42726) mb_driver: 0x3ffc1270, event 0x10, register.[0m
D (42726) mb_driver: 0x3ffc1270, event 0x20, register.[0m
D (42736) mb_driver: 0x3ffc1270, event 0x80, register.[0m
D (42736) mb_driver: 0x3ffc1270, event 0x100, register.[0m
D (42746) mb_port.tcp.master: Config: 01;mb_slave_tcp_01;1502, IP: mb_slave_tcp_01, port: 1502, slave_addr: 1, ip_ver: IPV4[0m
D (42756) mb_driver: 0x3ffc1270, open vfd: 0, sl_addr: 01, node: mb_slave_tcp_01:1502[0m
D (42766) mb_port.tcp.master: 0x3ffc1270, open slave: 0, mb_slave_tcp_01:1502[0m
D (42766) mb_port.tcp.master: Config: 200;mb_slave_tcp_c8;502, IP: mb_slave_tcp_c8, port: 502, slave_addr: 200, ip_ver: IPV4[0m
D (42786) mb_driver: 0x3ffc1270, open vfd: 1, sl_addr: ffffffc8, node: mb_slave_tcp_c8:502[0m
D (42786) mb_port.tcp.master: 0x3ffc1270, open slave: 1, mb_slave_tcp_c8:502[0m
[0;32mI (42796) port.utils: hostname set to: [mb_master_tcp_d551f3][0m
D (42806) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
[0;32mI (42806) port.utils: mdns delegate hostname set to: [mb_master_tcp_00][0m
[0;32mI (42816) port.utils: IP: 192.168.34.122[0m
[0;32mI (42826) port.utils: GW: 192.168.34.252[0m
[0;32mI (42826) port.utils: NETMASK: 255.255.254.0[0m
D (42836) mb_port.tcp.master: created object @0x3ffc10ac[0m
D (42836) mb_port.timer: initialized mb_port.timer object @0x3ffc3a2c[0m
D (42846) mb_port.event: initialized object @0x3ffc3a64[0m
D (42846) mb_transp.tcp_master: created mb_transp.tcp_master object @0x3ffc0df8[0m
D (42856) mb_object.master: created object mbm_tcp#0x3ffbfa80[0m
[0;32mI (42866) mbc_tcp.master: mb found config for cid #0, uid=1.[0m
[0;32mI (42866) mbc_tcp.master: mb found config for cid #1, uid=1.[0m
[0;32mI (42876) mbc_tcp.master: mb found config for cid #2, uid=200.[0m
[0;32mI (42876) mbc_tcp.master: mb found config for cid #3, uid=1.[0m
[0;32mI (42886) mbc_tcp.master: mb found config for cid #4, uid=1.[0m
[0;32mI (42896) TEST_COMMON: 0x3ffbfa80, modbus master stack is initialized[0m
D (42896) mb_driver: 0x3ffc1270, resume tcp driver task.[0m
D (42906) mb_driver: 0x3ffc1270, fd event get: 0x104:0, |MB_EVENT_RESOLVE|MB_EVENT_TIMEOUT[0m
D (42916) event: running post loop:0x3ffc1270:256 with handler 0x401258e8 and context 0x3ffc3118 on loop 0x3ffc1680[0m
D (42926) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_timeout: fd: -1[0m
D (42936) event: running post loop:0x3ffc1270:2 with handler 0x40125230 and context 0x3ffc2fc8 on loop 0x3ffc1680[0m
D (42946) esp.emac: receive len= 95[0m
D (42946) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_open: fd: 0[0m
D (42946) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42956) event: running post loop:0x3ffc1270:2 with handler 0x40125230 and context 0x3ffc2fc8 on loop 0x3ffc1680[0m
D (42956) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (42966) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_open: fd: 1[0m
D (42976) mb_port.timer: mbm_tcp#0x3ffbfa80, start timer (1000000).[0m
D (42986) mb_driver: 0x3ffc1270, fd event get: 0x04:-1, |MB_EVENT_RESOLVE[0m
D (42996) event: running post loop:0x3ffc1270:4 with handler 0x40125730 and context 0x3ffc2ff8 on loop 0x3ffc1680[0m
D (43006) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_resolve: fd: -1[0m
D (43006) event: running post loop:0x3ffc1270:4 with handler 0x40125730 and context 0x3ffc2ff8 on loop 0x3ffc1680[0m
D (43016) esp.emac: receive len= 60[0m
D (43016) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_resolve: fd: 0[0m
D (43016) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43036) esp.emac: receive len= 150[0m
D (43036) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43046) port.utils: Incorrect host IP: mb_slave_tcp_01[0m
D (43056) port.utils: Query A: mb_slave_tcp_01.local[0m
D (43236) esp.emac: receive len= 91[0m
D (43236) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (43236) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (43236) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43246) port.utils: Host: mb_slave_tcp_01, was resolved with IP: 192.168.34.175[0m
[0;32mI (43256) mb_port.tcp.master: 0x3ffc1270, slave: 0, resolved with IP:192.168.34.175.[0m
D (43266) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (43266) event: running post loop:0x3ffc1270:4 with handler 0x40125730 and context 0x3ffc2ff8 on loop 0x3ffc1680[0m
D (43276) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_resolve: fd: 1[0m
D (43296) esp.emac: receive len= 150[0m
D (43296) port.utils: Incorrect host IP: mb_slave_tcp_c8[0m
D (43296) port.utils: Query A: mb_slave_tcp_c8.local[0m
D (43316) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43436) esp.emac: receive len= 91[0m
D (43436) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (43436) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (43436) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43446) port.utils: Host: mb_slave_tcp_c8, was resolved with IP: 192.168.34.175[0m
[0;32mI (43456) mb_port.tcp.master: 0x3ffc1270, slave: 1, resolved with IP:192.168.34.175.[0m
D (43466) mb_driver: 0x3ffc1270, fd event get: 0x08:1, |MB_EVENT_CONNECT[0m
D (43466) event: running post loop:0x3ffc1270:8 with handler 0x40125918 and context 0x3ffc3028 on loop 0x3ffc1680[0m
D (43476) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_connect: fd: 0[0m
D (43486) mb_port.tcp.master: 0x3ffc1270, connection phase, slave: #0(-1) [192.168.34.175].[0m
D (43496) esp.emac: receive len= 60[0m
D (43496) esp.emac: receive len= 60[0m
[0;32mI (43506) mb_port.tcp.master: 0x3ffc1270, slave: #0, sock:54, IP: 192.168.34.175, is connected.[0m
D (43516) mb_port.tcp.master: Opened/connected: 2, 1.[0m
D (43616) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43726) mb_driver: 0x3ffc1270, fd event get: 0x100:-1, |MB_EVENT_TIMEOUT[0m
D (43726) event: running post loop:0x3ffc1270:8 with handler 0x40125918 and context 0x3ffc3028 on loop 0x3ffc1680[0m
D (43726) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_connect: fd: 1[0m
D (43736) mb_port.tcp.master: 0x3ffc1270, connection phase, slave: #1(-1) [192.168.34.175].[0m
D (43746) esp.emac: receive len= 60[0m
[0;32mI (43746) mb_port.tcp.master: 0x3ffc1270, slave: #1, sock:55, IP: 192.168.34.175, is connected.[0m
D (43756) mb_port.tcp.master: Opened/connected: 2, 2.[0m
[0;32mI (43766) mbc_tcp.master: mb controller connection done.[0m
[0;32mI (43766) mb_port.tcp.master: 0x3ffc1270, Connected: 2, 2, start polling.[0m
D (43776) mb_object.master: 0x3ffbfa80:EV_READY[0m
[0;32mI (43776) TEST_COMMON: 0x3ffbfa80, modbus master start...[0m
Send signal: [Master_started]!
D (43796) TEST_COMMON: Notify task start 0x3ffc5a40[0m
D (43796) TEST_COMMON: Task: 0x3ffc5a40, get notify value = 1[0m
D (43796) esp.emac: receive len= 108[0m
D (43816) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (43816) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (43816) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (43826) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (43836) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (43836) event: running post loop:0x3ffc1270:256 with handler 0x401258e8 and context 0x3ffc3118 on loop 0x3ffc1680[0m
D (43846) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_timeout: fd: -1[0m
D (43856) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (43866) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (43876) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (43886) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (43896) SENT: 00 00 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (43906) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (43906) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (43916) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (43996) esp.emac: receive len= 60[0m
D (44016) esp.emac: receive len= 60[0m
D (44066) esp.emac: receive len= 119[0m
D (44086) esp.emac: receive len= 66[0m
D (44086) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (44086) port.utils: Enqueue data, length=12, TID=0x0[0m
D (44086) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (44096) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (44096) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (44106) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (44116) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (44126) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0000 received.[0m
D (44136) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (44136) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc110c.[0m
D (44146) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 254143.[0m
D (44146) esp.emac: receive len= 95[0m
D (44166) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (44166) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (44176) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (44186) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 00 00 01 [0m
D (44186) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (44196) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (44196) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (44206) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (44206) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (44216) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 380967[0m
D (44226) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (44236) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44236) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (44256) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
D (44256) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (44276) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (44276) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (44276) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (44286) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (44296) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (44306) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (44316) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (44326) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0001, 15 (bytes), errno 119[0m
D (44336) SENT: 00 01 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (44336) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (44336) esp.emac: receive len= 91[0m
D (44346) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (44356) esp_netif_lwip: check: local, if=0x3ffb9030 fn=0x401064b4[0m
D (44366) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (44366) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (44486) esp.emac: receive len= 60[0m
D (44576) esp.emac: receive len= 66[0m
D (44576) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (44576) port.utils: Enqueue data, length=12, TID=0x1[0m
D (44576) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (44586) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (44596) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (44606) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (44616) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (44616) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0001 received.[0m
D (44626) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (44636) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc110c.[0m
D (44646) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 310599.[0m
D (44656) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (44656) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 01 00 01 [0m
D (44666) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (44666) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (44676) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (44686) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (44686) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (44696) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 404223[0m
D (44716) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (44716) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (44716) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
D (44726) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (44746) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (44746) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (44746) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 15[0m
D (44756) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (44766) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (44776) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (44786) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (44796) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0000, 15 (bytes), errno 119[0m
D (44806) SENT: 00 00 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (44806) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (44816) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (44986) esp.emac: receive len= 66[0m
D (44986) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (44986) port.utils: Enqueue data, length=12, TID=0x0[0m
D (44986) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (44996) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (45006) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (45016) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (45026) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (45026) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0000 received.[0m
D (45036) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (45046) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0000:0x0001, 0x3ffc110c.[0m
D (45056) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 250465.[0m
D (45066) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (45076) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 02 00 01 [0m
D (45076) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (45076) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (45086) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (45096) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (45096) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (45106) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 344070[0m
D (45116) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (45116) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45136) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (45136) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
D (45156) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (45156) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (45156) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (45166) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (45176) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45186) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (45196) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (45196) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (45206) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (45216) SENT: 00 02 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (45226) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (45236) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (45246) esp.emac: receive len= 60[0m
D (45406) esp.emac: receive len= 66[0m
D (45406) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (45406) port.utils: Enqueue data, length=12, TID=0x2[0m
D (45406) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45416) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45426) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (45436) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (45436) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45446) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0002 received.[0m
D (45456) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (45456) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc110c.[0m
D (45476) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 250632.[0m
D (45486) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (45486) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 03 00 01 [0m
D (45496) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (45496) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (45506) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (45506) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (45516) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (45526) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 344268[0m
D (45536) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45536) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (45556) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
D (45556) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (45576) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (45576) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 00 00 01 [0m
D (45576) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (45586) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45596) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (45606) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (45606) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (45616) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (45626) SENT: 00 03 00 00 00 06 01 03 00 00 00 01 [0m
D (45636) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (45646) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (45746) esp.emac: receive len= 60[0m
D (45786) esp.emac: receive len= 65[0m
D (45786) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (45796) port.utils: Enqueue data, length=11, TID=0x3[0m
D (45796) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (45806) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (45806) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (45816) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (45826) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (45836) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0003 received.[0m
D (45836) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (45846) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc110c.[0m
D (45856) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 225397.[0m
D (45866) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (45876) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 11 11 [0m
D (45876) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (45886) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (45886) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (45896) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (45896) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (45906) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 317529[0m
D (45916) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (45936) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (45936) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (45956) TEST_COMMON: CHAR #0, value is ok.[0m
D (45956) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (45956) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (45956) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 01 00 01 [0m
D (45966) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (45976) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (45986) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (45996) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (45996) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (46006) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0004, 12 (bytes), errno 119[0m
D (46016) SENT: 00 04 00 00 00 06 01 03 00 01 00 01 [0m
D (46026) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (46036) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (46066) esp.emac: receive len= 119[0m
D (46186) esp.emac: receive len= 65[0m
D (46186) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (46186) port.utils: Enqueue data, length=11, TID=0x4[0m
D (46186) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (46196) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (46206) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (46216) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (46216) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (46226) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0004 received.[0m
D (46236) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (46236) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc110c.[0m
D (46246) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 230280.[0m
D (46256) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (46266) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 22 22 [0m
D (46276) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (46276) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (46286) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (46286) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (46296) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (46296) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 322859[0m
D (46306) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbb75c[0m
D (46316) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46336) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (46336) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (46356) TEST_COMMON: CHAR #1, value is ok.[0m
D (46356) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (46356) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (46376) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 02 00 01 [0m
D (46376) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 12[0m
D (46376) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (46386) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (46396) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (46396) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (46416) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0001, 12 (bytes), errno 119[0m
D (46426) SENT: 00 01 00 00 00 06 c8 03 00 02 00 01 [0m
D (46426) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (46436) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (46496) esp.emac: receive len= 60[0m
D (46606) esp.emac: receive len= 65[0m
D (46606) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (46606) port.utils: Enqueue data, length=11, TID=0x1[0m
D (46606) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (46616) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (46626) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (46636) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (46636) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (46646) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0001 received.[0m
D (46656) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (46656) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0001:0x0002, 0x3ffc110c.[0m
D (46666) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 249257.[0m
D (46676) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (46686) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 33 33 [0m
D (46696) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (46696) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (46706) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (46706) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (46716) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (46716) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 332184[0m
D (46736) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (46736) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (46756) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (46756) TEST_COMMON: CHAR #2, value is ok.[0m
D (46776) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (46776) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (46776) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 03 00 01 [0m
D (46776) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (46786) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (46796) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (46806) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (46816) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (46826) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (46836) SENT: 00 05 00 00 00 06 01 03 00 03 00 01 [0m
D (46836) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (46846) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (46996) esp.emac: receive len= 60[0m
D (47016) esp.emac: receive len= 65[0m
D (47016) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (47026) port.utils: Enqueue data, length=11, TID=0x5[0m
D (47026) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47036) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47036) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (47046) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (47056) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47066) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0005 received.[0m
D (47066) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (47076) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc110c.[0m
D (47086) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 252559.[0m
D (47096) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (47106) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 44 44 [0m
D (47106) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (47116) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (47116) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (47126) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (47136) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (47136) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 345224[0m
D (47156) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (47156) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (47176) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (47176) TEST_COMMON: CHAR #3, value is ok.[0m
D (47176) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (47196) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (47196) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 00 [0m
D (47196) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (47206) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (47216) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (47226) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (47236) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47246) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (47256) SENT: 00 06 00 00 00 09 01 10 00 04 00 01 02 00 00 [0m
D (47256) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (47266) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (47416) esp.emac: receive len= 66[0m
D (47416) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (47416) port.utils: Enqueue data, length=12, TID=0x6[0m
D (47416) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47426) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47436) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (47446) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (47446) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47456) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0006 received.[0m
D (47466) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (47476) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc110c.[0m
D (47486) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 229798.[0m
D (47496) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (47496) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (47506) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (47506) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (47516) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (47516) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (47526) mbm_error_cb_request_success: 10 00 04 00 01 02 00 00 [0m
D (47536) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 323419[0m
D (47546) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (47546) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (47566) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0000), write successful.[0m
D (47616) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (47616) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (47636) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (47636) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (47636) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (47646) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (47656) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (47666) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (47676) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0007, 15 (bytes), errno 119[0m
D (47686) SENT: 00 07 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (47686) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (47696) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (47736) esp.emac: receive len= 60[0m
D (47896) esp.emac: receive len= 66[0m
D (47906) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (47906) port.utils: Enqueue data, length=12, TID=0x7[0m
D (47906) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (47916) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (47916) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (47926) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (47936) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (47946) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0007 received.[0m
D (47956) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (47956) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc110c.[0m
D (47966) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 284429.[0m
D (47976) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (47986) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 00 00 01 [0m
D (47996) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (47996) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (48006) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (48006) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (48016) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (48016) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 370959[0m
D (48036) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48036) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (48056) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (48056) TEST_COMMON: CHAR #0, value is ok.[0m
D (48056) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (48066) esp.emac: receive len= 119[0m
D (48076) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (48076) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (48086) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (48096) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (48096) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (48106) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (48116) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (48126) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (48136) SENT: 00 08 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (48146) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (48146) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (48246) esp.emac: receive len= 60[0m
D (48296) esp.emac: receive len= 66[0m
D (48296) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (48296) port.utils: Enqueue data, length=12, TID=0x8[0m
D (48296) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (48306) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (48316) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (48326) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (48336) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (48336) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0008 received.[0m
D (48346) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (48356) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc110c.[0m
D (48366) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226432.[0m
D (48376) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (48386) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 01 00 01 [0m
D (48386) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (48396) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (48396) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (48406) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (48406) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (48416) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 320048[0m
D (48436) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48436) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (48436) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (48456) TEST_COMMON: CHAR #1, value is ok.[0m
D (48456) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (48476) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (48476) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (48476) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 15[0m
D (48486) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (48496) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (48506) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (48506) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (48516) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0002, 15 (bytes), errno 119[0m
D (48526) SENT: 00 02 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (48536) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (48546) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (48716) esp.emac: receive len= 66[0m
D (48716) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (48716) port.utils: Enqueue data, length=12, TID=0x2[0m
D (48716) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (48726) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (48736) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (48746) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (48746) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (48756) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0002 received.[0m
D (48766) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (48766) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0002:0x0003, 0x3ffc110c.[0m
D (48776) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 250500.[0m
D (48786) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (48796) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 02 00 01 [0m
D (48806) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (48806) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (48816) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (48816) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (48826) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (48826) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 341519[0m
D (48846) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (48846) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (48866) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (48866) TEST_COMMON: CHAR #2, value is ok.[0m
D (48866) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (48886) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (48886) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (48886) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (48896) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (48906) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (48916) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (48926) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (48936) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0009, 15 (bytes), errno 119[0m
D (48946) SENT: 00 09 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (48946) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (48956) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (48986) esp.emac: receive len= 60[0m
D (49126) esp.emac: receive len= 66[0m
D (49126) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (49126) port.utils: Enqueue data, length=12, TID=0x9[0m
D (49136) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49146) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49146) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (49156) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (49166) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (49176) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0009 received.[0m
D (49176) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (49186) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc110c.[0m
D (49196) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 250448.[0m
D (49206) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (49216) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 03 00 01 [0m
D (49216) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (49226) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (49226) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (49236) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (49236) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (49246) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 344070[0m
D (49266) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49266) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (49286) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (49286) TEST_COMMON: CHAR #3, value is ok.[0m
D (49286) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (49306) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (49306) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 01 [0m
D (49306) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (49316) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (49326) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (49336) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (49336) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (49346) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (49366) SENT: 00 0a 00 00 00 09 01 10 00 04 00 01 02 00 01 [0m
D (49366) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (49376) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (49496) esp.emac: receive len= 60[0m
D (49516) esp.emac: receive len= 66[0m
D (49516) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (49526) port.utils: Enqueue data, length=12, TID=0xa[0m
D (49526) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49536) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49536) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (49546) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (49556) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (49566) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000a received.[0m
D (49566) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (49576) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc110c.[0m
D (49586) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226387.[0m
D (49596) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (49606) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (49606) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (49616) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (49616) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (49626) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (49636) mbm_error_cb_request_success: 10 00 04 00 01 02 00 01 [0m
D (49636) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 319020[0m
D (49656) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (49656) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (49676) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0001), write successful.[0m
D (49726) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (49726) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (49726) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 00 00 01 [0m
D (49736) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (49746) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (49746) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (49756) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (49766) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (49776) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (49786) SENT: 00 0b 00 00 00 06 01 03 00 00 00 01 [0m
D (49796) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (49796) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (49976) esp.emac: receive len= 65[0m
D (49976) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (49976) port.utils: Enqueue data, length=11, TID=0xb[0m
D (49976) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (49986) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (49996) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (50006) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (50006) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (50016) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000b received.[0m
D (50026) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (50026) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc110c.[0m
D (50036) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 252745.[0m
D (50046) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (50056) esp.emac: receive len= 119[0m
D (50066) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 11 11 [0m
D (50066) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (50076) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (50076) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (50086) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (50086) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (50096) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 348958[0m
D (50116) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50116) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (50116) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (50126) TEST_COMMON: CHAR #0, value is ok.[0m
D (50146) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (50146) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (50146) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 01 00 01 [0m
D (50156) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (50166) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (50166) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (50186) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (50186) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (50196) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000c, 12 (bytes), errno 119[0m
D (50206) SENT: 00 0c 00 00 00 06 01 03 00 01 00 01 [0m
D (50216) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (50216) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (50236) esp.emac: receive len= 60[0m
D (50366) esp.emac: receive len= 65[0m
D (50366) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (50366) port.utils: Enqueue data, length=11, TID=0xc[0m
D (50366) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (50376) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (50386) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (50396) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (50406) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (50406) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000c received.[0m
D (50416) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (50426) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000c:0x000d, 0x3ffc110c.[0m
D (50436) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 225494.[0m
D (50446) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (50456) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 22 22 [0m
D (50456) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (50466) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (50466) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (50476) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (50476) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (50486) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 318078[0m
D (50506) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50506) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (50506) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (50516) TEST_COMMON: CHAR #1, value is ok.[0m
D (50536) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (50536) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (50536) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 02 00 01 [0m
D (50546) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 12[0m
D (50556) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (50556) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (50566) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (50576) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (50586) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0003, 12 (bytes), errno 119[0m
D (50596) SENT: 00 03 00 00 00 06 c8 03 00 02 00 01 [0m
D (50606) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (50606) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (50746) esp.emac: receive len= 60[0m
D (50776) esp.emac: receive len= 65[0m
D (50786) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (50786) port.utils: Enqueue data, length=11, TID=0x3[0m
D (50786) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (50796) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (50796) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (50806) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (50816) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (50826) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0003 received.[0m
D (50836) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (50836) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0003:0x0004, 0x3ffc110c.[0m
D (50846) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 249410.[0m
D (50856) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (50866) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 33 33 [0m
D (50866) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (50876) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (50876) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (50886) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (50896) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (50896) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 341977[0m
D (50916) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (50916) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (50926) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (50946) TEST_COMMON: CHAR #2, value is ok.[0m
D (50946) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (50946) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (50966) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 03 00 01 [0m
D (50966) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (50966) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (50976) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (50986) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (50986) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51006) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000d, 12 (bytes), errno 119[0m
D (51016) SENT: 00 0d 00 00 00 06 01 03 00 03 00 01 [0m
D (51016) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (51026) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (51196) esp.emac: receive len= 65[0m
D (51196) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (51196) port.utils: Enqueue data, length=11, TID=0xd[0m
D (51196) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51206) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51216) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (51226) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (51226) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51236) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000d received.[0m
D (51246) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (51246) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000d:0x000e, 0x3ffc110c.[0m
D (51266) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 249242.[0m
D (51276) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (51276) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 44 44 [0m
D (51286) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (51286) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (51296) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (51296) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (51306) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (51306) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 332789[0m
D (51316) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (51336) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (51336) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (51356) TEST_COMMON: CHAR #3, value is ok.[0m
D (51356) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (51356) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (51376) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 02 [0m
D (51376) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (51386) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (51386) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (51396) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (51406) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51416) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000e, 15 (bytes), errno 119[0m
D (51426) SENT: 00 0e 00 00 00 09 01 10 00 04 00 01 02 00 02 [0m
D (51436) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (51436) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (51496) esp.emac: receive len= 60[0m
D (51586) esp.emac: receive len= 66[0m
D (51586) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (51586) port.utils: Enqueue data, length=12, TID=0xe[0m
D (51586) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (51596) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (51606) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (51616) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (51616) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (51626) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000e received.[0m
D (51636) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (51646) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000e:0x000f, 0x3ffc110c.[0m
D (51656) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226466.[0m
D (51666) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (51666) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (51676) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (51676) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (51686) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (51686) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (51696) mbm_error_cb_request_success: 10 00 04 00 01 02 00 02 [0m
D (51706) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 314475[0m
D (51716) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (51716) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (51736) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0002), write successful.[0m
D (51796) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (51796) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (51796) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (51796) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (51806) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (51816) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (51826) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (51836) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (51846) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x000f, 15 (bytes), errno 119[0m
D (51856) SENT: 00 0f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (51856) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (51866) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (51996) esp.emac: receive len= 60[0m
D (52056) esp.emac: receive len= 119[0m
D (52076) esp.emac: receive len= 66[0m
D (52076) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (52076) port.utils: Enqueue data, length=12, TID=0xf[0m
D (52076) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (52086) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (52096) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (52106) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (52106) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (52116) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000f received.[0m
D (52126) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (52126) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x000f:0x0010, 0x3ffc110c.[0m
D (52146) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 286806.[0m
D (52156) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (52156) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 00 00 01 [0m
D (52166) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (52166) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (52176) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (52176) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (52186) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (52196) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 380422[0m
D (52206) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52206) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (52216) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (52236) TEST_COMMON: CHAR #0, value is ok.[0m
D (52236) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (52236) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (52256) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (52256) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (52266) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (52266) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (52276) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (52286) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (52296) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0010, 15 (bytes), errno 119[0m
D (52306) SENT: 00 10 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (52316) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (52316) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (52416) esp.emac: receive len= 108[0m
D (52466) esp.emac: receive len= 66[0m
D (52476) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (52476) port.utils: Enqueue data, length=12, TID=0x10[0m
D (52476) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (52486) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (52486) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (52496) esp.emac: receive len= 60[0m
D (52496) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (52506) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (52516) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0010 received.[0m
D (52526) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (52526) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0010:0x0011, 0x3ffc110c.[0m
D (52546) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 233828.[0m
D (52556) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (52556) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 01 00 01 [0m
D (52566) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (52566) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (52576) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (52576) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (52586) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (52596) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 322986[0m
D (52606) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (52606) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (52616) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (52636) TEST_COMMON: CHAR #1, value is ok.[0m
D (52636) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (52636) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (52656) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (52656) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 15[0m
D (52666) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (52666) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (52676) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (52686) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (52696) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0004, 15 (bytes), errno 119[0m
D (52706) SENT: 00 04 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (52716) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (52716) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (52736) esp.emac: receive len= 60[0m
D (52856) esp.emac: receive len= 70[0m
D (52896) esp.emac: receive len= 66[0m
D (52896) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (52896) port.utils: Enqueue data, length=12, TID=0x4[0m
D (52896) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (52906) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (52916) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (52926) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (52926) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (52936) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0004 received.[0m
D (52946) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (52946) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0004:0x0005, 0x3ffc110c.[0m
D (52956) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 253842.[0m
D (52966) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (52976) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 02 00 01 [0m
D (52986) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (52986) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (52996) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (52996) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (53006) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (53016) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 342195[0m
D (53016) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53036) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (53036) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (53056) TEST_COMMON: CHAR #2, value is ok.[0m
D (53056) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (53056) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (53076) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (53076) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (53086) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53086) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (53096) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (53106) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53116) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0011, 15 (bytes), errno 119[0m
D (53126) SENT: 00 11 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (53136) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (53136) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (53246) esp.emac: receive len= 60[0m
D (53306) esp.emac: receive len= 66[0m
D (53306) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (53306) port.utils: Enqueue data, length=12, TID=0x11[0m
D (53316) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (53326) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (53326) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (53336) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (53346) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (53356) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0011 received.[0m
D (53356) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (53366) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0011:0x0012, 0x3ffc110c.[0m
D (53376) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 250481.[0m
D (53386) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (53396) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 03 00 01 [0m
D (53396) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (53406) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (53406) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (53416) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (53416) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (53426) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 337991[0m
D (53446) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53446) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (53466) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (53466) TEST_COMMON: CHAR #3, value is ok.[0m
D (53466) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (53486) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (53486) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 03 [0m
D (53486) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (53496) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53506) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (53516) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (53516) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53536) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0012, 15 (bytes), errno 119[0m
D (53546) SENT: 00 12 00 00 00 09 01 10 00 04 00 01 02 00 03 [0m
D (53546) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (53556) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (53696) esp.emac: receive len= 66[0m
D (53706) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (53706) port.utils: Enqueue data, length=12, TID=0x12[0m
D (53706) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (53716) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (53716) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (53726) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (53736) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (53746) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0012 received.[0m
D (53756) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (53756) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0012:0x0013, 0x3ffc110c.[0m
D (53766) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226850.[0m
D (53776) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (53786) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (53786) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (53796) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (53806) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (53806) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (53816) mbm_error_cb_request_success: 10 00 04 00 01 02 00 03 [0m
D (53816) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 320769[0m
D (53836) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (53836) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (53856) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0003), write successful.[0m
D (53916) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (53916) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (53916) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 00 00 01 [0m
D (53916) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (53926) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (53936) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (53946) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (53956) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (53966) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0013, 12 (bytes), errno 119[0m
D (53976) SENT: 00 13 00 00 00 06 01 03 00 00 00 01 [0m
D (53976) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (53986) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (53986) esp.emac: receive len= 60[0m
D (54056) esp.emac: receive len= 119[0m
D (54106) esp.emac: receive len= 350[0m
D (54106) esp.emac: receive len= 350[0m
D (54106) esp.emac: receive len= 60[0m
D (54166) esp.emac: receive len= 65[0m
D (54166) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (54166) port.utils: Enqueue data, length=11, TID=0x13[0m
D (54166) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (54176) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (54186) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (54196) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (54206) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (54216) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0013 received.[0m
D (54216) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (54226) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0013:0x0014, 0x3ffc110c.[0m
D (54236) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 260195.[0m
D (54246) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (54256) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 11 11 [0m
D (54256) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (54266) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (54266) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (54276) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (54276) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (54286) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 352761[0m
D (54306) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54306) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (54306) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (54316) TEST_COMMON: CHAR #0, value is ok.[0m
D (54336) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (54336) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (54336) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 01 00 01 [0m
D (54346) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (54356) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (54356) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (54376) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (54376) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (54386) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0014, 12 (bytes), errno 119[0m
D (54396) SENT: 00 14 00 00 00 06 01 03 00 01 00 01 [0m
D (54406) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (54406) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (54496) esp.emac: receive len= 60[0m
D (54556) esp.emac: receive len= 65[0m
D (54556) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (54556) port.utils: Enqueue data, length=11, TID=0x14[0m
D (54556) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (54566) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (54576) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (54586) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (54596) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (54606) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0014 received.[0m
D (54606) esp.emac: receive len= 60[0m
D (54606) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (54616) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0014:0x0015, 0x3ffc110c.[0m
D (54626) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 229213.[0m
D (54636) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (54646) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 22 22 [0m
D (54646) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (54656) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (54656) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (54666) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (54676) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (54676) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 321792[0m
D (54696) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (54696) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (54716) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (54716) TEST_COMMON: CHAR #1, value is ok.[0m
D (54716) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (54726) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (54746) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 02 00 01 [0m
D (54746) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 12[0m
D (54746) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (54756) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (54766) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (54776) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (54786) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0005, 12 (bytes), errno 119[0m
D (54796) SENT: 00 05 00 00 00 06 c8 03 00 02 00 01 [0m
D (54796) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (54806) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (54856) esp.emac: receive len= 60[0m
D (54976) esp.emac: receive len= 65[0m
D (54976) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (54976) port.utils: Enqueue data, length=11, TID=0x5[0m
D (54986) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (54986) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (54996) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (55006) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (55016) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (55026) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0005 received.[0m
D (55026) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (55036) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0005:0x0006, 0x3ffc110c.[0m
D (55046) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 253002.[0m
D (55056) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (55066) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 33 33 [0m
D (55066) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (55076) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (55076) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (55086) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (55086) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (55096) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 335919[0m
D (55116) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55116) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (55116) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (55126) TEST_COMMON: CHAR #2, value is ok.[0m
D (55146) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (55146) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (55146) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 03 00 01 [0m
D (55156) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (55166) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55176) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (55186) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (55186) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55196) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0015, 12 (bytes), errno 119[0m
D (55206) SENT: 00 15 00 00 00 06 01 03 00 03 00 01 [0m
D (55216) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (55226) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (55236) esp.emac: receive len= 60[0m
D (55396) esp.emac: receive len= 65[0m
D (55396) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (55396) port.utils: Enqueue data, length=11, TID=0x15[0m
D (55396) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (55406) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (55406) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (55416) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (55426) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (55436) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0015 received.[0m
D (55446) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (55446) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0015:0x0016, 0x3ffc110c.[0m
D (55456) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 249801.[0m
D (55466) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (55476) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 44 44 [0m
D (55486) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (55486) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (55496) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (55496) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (55506) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (55506) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 343259[0m
D (55516) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55536) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (55536) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (55556) TEST_COMMON: CHAR #3, value is ok.[0m
D (55556) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (55556) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (55576) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 04 [0m
D (55576) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (55576) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (55586) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (55596) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (55606) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (55616) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0016, 15 (bytes), errno 119[0m
D (55626) SENT: 00 16 00 00 00 09 01 10 00 04 00 01 02 00 04 [0m
D (55626) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (55636) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (55746) esp.emac: receive len= 60[0m
D (55786) esp.emac: receive len= 66[0m
D (55786) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (55786) port.utils: Enqueue data, length=12, TID=0x16[0m
D (55786) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (55796) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (55806) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (55816) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (55816) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (55826) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0016 received.[0m
D (55836) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (55836) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0016:0x0017, 0x3ffc110c.[0m
D (55846) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226641.[0m
D (55856) esp.emac: receive len= 60[0m
D (55866) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (55876) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (55876) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (55886) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (55886) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (55896) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (55896) mbm_error_cb_request_success: 10 00 04 00 01 02 00 04 [0m
D (55906) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 316177[0m
D (55916) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (55936) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (55936) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0004), write successful.[0m
D (55996) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (55996) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (55996) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (56006) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (56016) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (56016) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (56026) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (56036) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (56046) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0017, 15 (bytes), errno 119[0m
D (56056) esp.emac: receive len= 119[0m
D (56056) SENT: 00 17 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (56056) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (56076) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (56236) esp.emac: receive len= 66[0m
D (56236) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (56246) port.utils: Enqueue data, length=12, TID=0x17[0m
D (56246) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (56256) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (56256) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (56266) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (56276) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (56286) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0017 received.[0m
D (56286) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (56296) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0017:0x0018, 0x3ffc110c.[0m
D (56306) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 250604.[0m
D (56316) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (56326) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 00 00 01 [0m
D (56326) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (56336) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (56336) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (56346) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (56356) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (56356) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 344253[0m
D (56376) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (56376) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (56396) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (56396) TEST_COMMON: CHAR #0, value is ok.[0m
D (56396) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (56416) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (56416) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (56416) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (56426) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (56436) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (56446) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (56446) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (56466) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0018, 15 (bytes), errno 119[0m
D (56476) SENT: 00 18 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (56476) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (56486) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (56486) esp.emac: receive len= 60[0m
D (56626) esp.emac: receive len= 66[0m
D (56636) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (56636) port.utils: Enqueue data, length=12, TID=0x18[0m
D (56636) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (56646) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (56646) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (56656) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (56666) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (56676) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0018 received.[0m
D (56686) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (56686) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0018:0x0019, 0x3ffc110c.[0m
D (56696) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226923.[0m
D (56706) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (56716) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 01 00 01 [0m
D (56726) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (56726) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (56736) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (56736) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (56746) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (56746) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 320706[0m
D (56766) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (56766) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (56786) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (56786) TEST_COMMON: CHAR #1, value is ok.[0m
D (56786) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (56806) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (56806) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (56806) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 15[0m
D (56816) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (56826) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (56836) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (56846) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (56856) esp.emac: receive len= 60[0m
D (56856) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0006, 15 (bytes), errno 119[0m
D (56856) esp.emac: receive len= 70[0m
D (56866) SENT: 00 06 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (56856) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (56886) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (56996) esp.emac: receive len= 60[0m
D (57056) esp.emac: receive len= 66[0m
D (57056) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (57056) port.utils: Enqueue data, length=12, TID=0x6[0m
D (57056) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (57066) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (57076) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (57086) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (57086) esp.emac: receive len= 60[0m
D (57096) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (57106) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0006 received.[0m
D (57116) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (57116) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0006:0x0007, 0x3ffc110c.[0m
D (57126) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 260212.[0m
D (57136) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (57146) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 02 00 01 [0m
D (57146) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (57156) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (57156) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (57166) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (57176) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (57176) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 357408[0m
D (57196) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57196) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (57216) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (57216) TEST_COMMON: CHAR #2, value is ok.[0m
D (57216) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (57226) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (57246) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (57246) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (57246) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (57256) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (57266) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (57276) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (57286) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0019, 15 (bytes), errno 119[0m
D (57296) SENT: 00 19 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (57296) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (57306) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (57476) esp.emac: receive len= 66[0m
D (57476) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (57476) port.utils: Enqueue data, length=12, TID=0x19[0m
D (57476) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (57486) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (57496) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (57506) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (57516) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (57526) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0019 received.[0m
D (57526) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (57536) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0019:0x001a, 0x3ffc110c.[0m
D (57546) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 250923.[0m
D (57556) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (57556) esp.emac: receive len= 62[0m
D (57566) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 03 00 01 [0m
D (57566) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (57576) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (57576) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (57586) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (57596) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (57596) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 338716[0m
D (57616) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (57616) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (57626) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (57646) TEST_COMMON: CHAR #3, value is ok.[0m
D (57646) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (57646) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (57666) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 05 [0m
D (57666) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (57666) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (57676) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (57686) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (57696) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (57706) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001a, 15 (bytes), errno 119[0m
D (57716) SENT: 00 1a 00 00 00 09 01 10 00 04 00 01 02 00 05 [0m
D (57716) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (57726) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (57736) esp.emac: receive len= 60[0m
D (57856) esp.emac: receive len= 60[0m
D (57876) esp.emac: receive len= 66[0m
D (57876) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (57876) port.utils: Enqueue data, length=12, TID=0x1a[0m
D (57876) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (57886) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (57896) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (57906) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (57916) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (57916) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x001a received.[0m
D (57926) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (57936) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001a:0x001b, 0x3ffc110c.[0m
D (57946) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 230274.[0m
D (57956) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (57956) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (57966) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (57966) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (57976) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (57986) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (57986) mbm_error_cb_request_success: 10 00 04 00 01 02 00 05 [0m
D (57996) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 315174[0m
D (58016) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58016) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (58016) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0005), write successful.[0m
D (58056) esp.emac: receive len= 119[0m
D (58086) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (58086) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (58086) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 00 00 01 [0m
D (58086) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (58096) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (58106) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (58116) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (58126) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (58136) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001b, 12 (bytes), errno 119[0m
D (58146) SENT: 00 1b 00 00 00 06 01 03 00 00 00 01 [0m
D (58146) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (58156) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (58246) esp.emac: receive len= 60[0m
D (58356) esp.emac: receive len= 65[0m
D (58356) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (58366) port.utils: Enqueue data, length=11, TID=0x1b[0m
D (58366) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (58376) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (58376) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (58386) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (58396) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (58406) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x001b received.[0m
D (58416) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (58416) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001b:0x001c, 0x3ffc110c.[0m
D (58426) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 283344.[0m
D (58436) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (58446) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 11 11 [0m
D (58446) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (58456) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (58456) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (58466) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (58476) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (58476) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 375908[0m
D (58496) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58496) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (58516) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (58516) TEST_COMMON: CHAR #0, value is ok.[0m
D (58516) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (58526) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (58546) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 01 00 01 [0m
D (58546) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (58546) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (58556) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (58566) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (58566) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (58586) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001c, 12 (bytes), errno 119[0m
D (58596) SENT: 00 1c 00 00 00 06 01 03 00 01 00 01 [0m
D (58596) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (58606) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (58746) esp.emac: receive len= 60[0m
D (58746) esp.emac: receive len= 65[0m
D (58746) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (58756) port.utils: Enqueue data, length=11, TID=0x1c[0m
D (58756) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (58766) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (58766) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (58776) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (58786) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (58796) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x001c received.[0m
D (58806) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (58806) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001c:0x001d, 0x3ffc110c.[0m
D (58816) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 225529.[0m
D (58826) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (58836) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 22 22 [0m
D (58836) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (58846) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (58846) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (58856) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (58866) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (58866) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 309046[0m
D (58886) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (58886) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (58906) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (58906) TEST_COMMON: CHAR #1, value is ok.[0m
D (58906) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (58916) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (58936) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 02 00 01 [0m
D (58936) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 12[0m
D (58936) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (58946) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (58956) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (58956) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (58976) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0007, 12 (bytes), errno 119[0m
D (58986) SENT: 00 07 00 00 00 06 c8 03 00 02 00 01 [0m
D (58986) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (58986) esp.emac: receive len= 60[0m
D (58996) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (59166) esp.emac: receive len= 65[0m
D (59166) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (59166) port.utils: Enqueue data, length=11, TID=0x7[0m
D (59166) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (59176) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (59186) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (59196) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (59206) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (59216) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0007 received.[0m
D (59216) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (59226) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0007:0x0008, 0x3ffc110c.[0m
D (59236) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 252891.[0m
D (59246) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (59256) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 33 33 [0m
D (59256) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (59266) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (59266) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (59276) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (59276) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (59286) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 336150[0m
D (59306) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (59306) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (59306) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (59316) TEST_COMMON: CHAR #2, value is ok.[0m
D (59336) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (59336) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (59336) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 03 00 01 [0m
D (59346) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (59356) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (59356) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (59376) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (59376) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (59386) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001d, 12 (bytes), errno 119[0m
D (59396) SENT: 00 1d 00 00 00 06 01 03 00 03 00 01 [0m
D (59406) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (59406) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (59496) esp.emac: receive len= 60[0m
D (59576) esp.emac: receive len= 65[0m
D (59586) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (59586) port.utils: Enqueue data, length=11, TID=0x1d[0m
D (59586) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (59596) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (59596) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (59606) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (59616) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (59626) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x001d received.[0m
D (59636) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (59636) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001d:0x001e, 0x3ffc110c.[0m
D (59646) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 249636.[0m
D (59656) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (59666) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 44 44 [0m
D (59666) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (59676) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (59686) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (59686) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (59696) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (59696) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 343172[0m
D (59716) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (59716) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (59726) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (59736) TEST_COMMON: CHAR #3, value is ok.[0m
D (59736) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (59756) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (59756) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 06 [0m
D (59756) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (59766) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (59776) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (59786) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (59796) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (59806) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001e, 15 (bytes), errno 119[0m
D (59816) SENT: 00 1e 00 00 00 09 01 10 00 04 00 01 02 00 06 [0m
D (59816) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (59826) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (59976) esp.emac: receive len= 66[0m
D (59976) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (59976) port.utils: Enqueue data, length=12, TID=0x1e[0m
D (59976) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (59986) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (59996) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (60006) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (60016) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60016) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x001e received.[0m
D (60026) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (60036) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001e:0x001f, 0x3ffc110c.[0m
D (60046) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 230341.[0m
D (60056) esp.emac: receive len= 119[0m
D (60056) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (60066) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (60066) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (60076) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (60076) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (60086) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (60096) mbm_error_cb_request_success: 10 00 04 00 01 02 00 06 [0m
D (60096) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 327596[0m
D (60116) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60116) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (60126) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0006), write successful.[0m
D (60206) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (60206) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (60206) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (60206) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (60216) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (60226) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (60236) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (60246) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (60256) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x001f, 15 (bytes), errno 119[0m
D (60266) SENT: 00 1f 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (60266) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (60276) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (60466) esp.emac: receive len= 66[0m
D (60466) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (60466) port.utils: Enqueue data, length=12, TID=0x1f[0m
D (60466) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (60476) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (60476) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (60486) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (60496) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60506) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x001f received.[0m
D (60516) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (60516) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x001f:0x0020, 0x3ffc110c.[0m
D (60526) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 264050.[0m
D (60536) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (60546) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 00 00 01 [0m
D (60556) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (60556) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (60566) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (60566) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (60576) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (60576) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 357683[0m
D (60596) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60596) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (60616) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (60616) TEST_COMMON: CHAR #0, value is ok.[0m
D (60616) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (60626) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (60646) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (60646) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (60646) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (60656) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (60666) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (60676) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (60686) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0020, 15 (bytes), errno 119[0m
D (60696) SENT: 00 20 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (60696) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (60706) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (60736) esp.emac: receive len= 60[0m
D (60856) esp.emac: receive len= 66[0m
D (60856) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (60856) port.utils: Enqueue data, length=12, TID=0x20[0m
D (60856) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (60866) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (60876) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (60886) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (60886) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (60896) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0020 received.[0m
D (60906) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (60906) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0020:0x0021, 0x3ffc110c.[0m
D (60926) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226845.[0m
D (60936) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (60936) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 01 00 01 [0m
D (60946) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (60946) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (60956) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (60956) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (60966) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (60976) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 313192[0m
D (60986) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (60986) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (61006) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (61006) TEST_COMMON: CHAR #1, value is ok.[0m
D (61016) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (61016) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (61036) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (61036) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 15[0m
D (61046) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (61046) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (61056) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (61066) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (61076) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0008, 15 (bytes), errno 119[0m
D (61086) SENT: 00 08 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (61096) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (61096) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (61246) esp.emac: receive len= 60[0m
D (61266) esp.emac: receive len= 66[0m
D (61266) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (61276) port.utils: Enqueue data, length=12, TID=0x8[0m
D (61276) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (61286) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (61286) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (61296) esp.emac: receive len= 60[0m
D (61296) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (61306) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (61316) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0008 received.[0m
D (61326) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (61326) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0008:0x0009, 0x3ffc110c.[0m
D (61336) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 253923.[0m
D (61346) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (61356) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 02 00 01 [0m
D (61366) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (61366) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (61376) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (61376) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (61386) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (61396) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 342434[0m
D (61406) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (61406) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (61416) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (61436) TEST_COMMON: CHAR #2, value is ok.[0m
D (61436) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (61436) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (61456) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (61456) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (61466) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (61466) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (61476) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (61486) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (61496) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0021, 15 (bytes), errno 119[0m
D (61506) SENT: 00 21 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (61516) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (61516) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (61686) esp.emac: receive len= 66[0m
D (61696) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (61696) port.utils: Enqueue data, length=12, TID=0x21[0m
D (61696) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (61706) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (61706) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (61716) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (61726) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (61736) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0021 received.[0m
D (61746) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (61746) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0021:0x0022, 0x3ffc110c.[0m
D (61756) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 252543.[0m
D (61766) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (61776) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 03 00 01 [0m
D (61776) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (61786) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (61796) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (61796) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (61806) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (61806) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 340969[0m
D (61816) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (61836) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (61836) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (61856) TEST_COMMON: CHAR #3, value is ok.[0m
D (61856) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (61856) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (61866) esp.emac: receive len= 60[0m
D (61886) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 07 [0m
D (61886) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (61886) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (61896) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (61906) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (61906) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (61926) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0022, 15 (bytes), errno 119[0m
D (61936) SENT: 00 22 00 00 00 09 01 10 00 04 00 01 02 00 07 [0m
D (61936) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (61946) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (61986) esp.emac: receive len= 60[0m
D (62056) esp.emac: receive len= 119[0m
D (62096) esp.emac: receive len= 66[0m
D (62096) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (62096) port.utils: Enqueue data, length=12, TID=0x22[0m
D (62096) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62106) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (62116) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (62126) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (62126) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62136) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0022 received.[0m
D (62146) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (62146) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0022:0x0023, 0x3ffc110c.[0m
D (62166) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 230284.[0m
D (62176) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (62176) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (62186) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (62186) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (62196) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (62196) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (62206) mbm_error_cb_request_success: 10 00 04 00 01 02 00 07 [0m
D (62216) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 313287[0m
D (62216) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62236) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (62236) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0007), write successful.[0m
D (62316) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (62316) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (62316) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 00 00 01 [0m
D (62316) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (62326) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62336) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (62346) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (62356) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (62366) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0023, 12 (bytes), errno 119[0m
D (62376) SENT: 00 23 00 00 00 06 01 03 00 00 00 01 [0m
D (62376) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (62386) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (62496) esp.emac: receive len= 60[0m
D (62586) esp.emac: receive len= 65[0m
D (62586) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (62586) port.utils: Enqueue data, length=11, TID=0x23[0m
D (62586) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62596) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (62606) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (62616) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (62626) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (62626) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0023 received.[0m
D (62636) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (62646) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0023:0x0024, 0x3ffc110c.[0m
D (62656) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 279253.[0m
D (62666) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (62676) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 11 11 [0m
D (62676) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (62676) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (62686) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (62696) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (62696) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (62706) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 371832[0m
D (62716) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (62716) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (62726) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (62746) TEST_COMMON: CHAR #0, value is ok.[0m
D (62746) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (62746) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (62766) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 01 00 01 [0m
D (62766) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (62776) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (62776) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (62786) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (62796) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (62806) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0024, 12 (bytes), errno 119[0m
D (62816) SENT: 00 24 00 00 00 06 01 03 00 01 00 01 [0m
D (62826) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (62826) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (62896) esp.emac: receive len= 60[0m
D (62916) esp.emac: receive len= 60[0m
D (62986) esp.emac: receive len= 65[0m
D (62986) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (62986) port.utils: Enqueue data, length=11, TID=0x24[0m
D (62986) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (62996) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (63006) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (63016) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (63016) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (63026) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0024 received.[0m
D (63036) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (63036) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0024:0x0025, 0x3ffc110c.[0m
D (63046) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 232855.[0m
D (63056) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (63066) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 22 22 [0m
D (63076) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (63076) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (63086) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (63086) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (63096) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (63096) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 322232[0m
D (63116) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63116) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (63126) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (63146) TEST_COMMON: CHAR #1, value is ok.[0m
D (63146) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (63146) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (63166) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 02 00 01 [0m
D (63166) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 12[0m
D (63166) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (63176) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (63186) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (63196) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (63206) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x0009, 12 (bytes), errno 119[0m
D (63216) SENT: 00 09 00 00 00 06 c8 03 00 02 00 01 [0m
D (63216) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (63226) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (63236) esp.emac: receive len= 60[0m
D (63396) esp.emac: receive len= 65[0m
D (63396) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (63396) port.utils: Enqueue data, length=11, TID=0x9[0m
D (63396) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (63406) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (63416) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (63426) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (63436) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (63446) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0009 received.[0m
D (63446) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (63456) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x0009:0x000a, 0x3ffc110c.[0m
D (63466) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 249420.[0m
D (63476) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (63486) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 33 33 [0m
D (63486) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (63496) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (63496) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (63506) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (63506) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (63516) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 335936[0m
D (63536) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63536) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (63536) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (63556) TEST_COMMON: CHAR #2, value is ok.[0m
D (63556) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (63576) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (63576) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 03 00 01 [0m
D (63576) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (63586) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (63586) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (63606) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (63606) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (63616) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0025, 12 (bytes), errno 119[0m
D (63626) SENT: 00 25 00 00 00 06 01 03 00 03 00 01 [0m
D (63636) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (63636) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (63746) esp.emac: receive len= 60[0m
D (63796) esp.emac: receive len= 60[0m
D (63816) esp.emac: receive len= 65[0m
D (63816) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (63816) port.utils: Enqueue data, length=11, TID=0x25[0m
D (63816) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (63826) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (63836) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (63846) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (63846) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (63856) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0025 received.[0m
D (63866) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (63866) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0025:0x0026, 0x3ffc110c.[0m
D (63886) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 253065.[0m
D (63896) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (63896) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 44 44 [0m
D (63906) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (63906) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (63916) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (63916) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (63926) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (63936) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 343010[0m
D (63946) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (63946) esp.emac: receive len= 60[0m
D (63966) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (63966) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (63966) TEST_COMMON: CHAR #3, value is ok.[0m
D (63986) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (63986) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (63986) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 08 [0m
D (63996) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (64006) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64016) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (64026) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (64026) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64036) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0026, 15 (bytes), errno 119[0m
D (64046) SENT: 00 26 00 00 00 09 01 10 00 04 00 01 02 00 08 [0m
D (64056) esp.emac: receive len= 119[0m
D (64056) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (64066) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (64206) esp.emac: receive len= 66[0m
D (64206) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (64216) port.utils: Enqueue data, length=12, TID=0x26[0m
D (64216) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (64226) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (64226) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (64236) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (64246) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (64256) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0026 received.[0m
D (64256) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (64266) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0026:0x0027, 0x3ffc110c.[0m
D (64276) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226718.[0m
D (64286) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (64296) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (64296) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (64306) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (64306) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (64316) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (64326) mbm_error_cb_request_success: 10 00 04 00 01 02 00 08 [0m
D (64326) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 320328[0m
D (64346) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (64346) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (64366) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0008), write successful.[0m
D (64416) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (64416) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (64436) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 00 00 01 02 11 11 [0m
D (64436) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (64436) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64446) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (64456) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (64466) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64476) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0027, 15 (bytes), errno 119[0m
D (64486) SENT: 00 27 00 00 00 09 01 10 00 00 00 01 02 11 11 [0m
D (64486) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (64486) esp.emac: receive len= 60[0m
D (64506) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (64596) esp.emac: receive len= 60[0m
D (64686) esp.emac: receive len= 66[0m
D (64696) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (64696) port.utils: Enqueue data, length=12, TID=0x27[0m
D (64696) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (64706) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (64706) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (64716) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (64726) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (64736) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0027 received.[0m
D (64746) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (64746) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0027:0x0028, 0x3ffc110c.[0m
D (64756) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 274680.[0m
D (64766) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (64776) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 00 00 01 [0m
D (64786) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (64786) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (64796) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (64796) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (64806) mbm_error_cb_request_success: 10 00 00 00 01 02 11 11 [0m
D (64806) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 360986[0m
D (64816) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (64836) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(0) = ESP_OK[0m
[0;32mI (64836) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111), write successful.[0m
[0;32mI (64856) TEST_COMMON: CHAR #0, value is ok.[0m
D (64856) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (64856) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (64876) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 01 00 01 02 22 22 [0m
D (64876) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (64876) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (64886) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (64896) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (64906) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (64916) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0028, 15 (bytes), errno 119[0m
D (64926) SENT: 00 28 00 00 00 09 01 10 00 01 00 01 02 22 22 [0m
D (64926) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (64936) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (64996) esp.emac: receive len= 60[0m
D (65086) esp.emac: receive len= 66[0m
D (65086) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (65086) port.utils: Enqueue data, length=12, TID=0x28[0m
D (65086) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (65096) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (65106) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (65116) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (65116) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (65126) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0028 received.[0m
D (65136) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (65136) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0028:0x0029, 0x3ffc110c.[0m
D (65146) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226782.[0m
D (65156) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (65166) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 01 00 01 [0m
D (65176) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (65176) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (65186) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (65186) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (65196) mbm_error_cb_request_success: 10 00 01 00 01 02 22 22 [0m
D (65206) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 312837[0m
D (65216) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65216) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(1) = ESP_OK[0m
[0;32mI (65226) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222), write successful.[0m
[0;32mI (65246) TEST_COMMON: CHAR #1, value is ok.[0m
D (65246) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (65246) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (65266) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 02 00 01 02 33 33 [0m
D (65266) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 15[0m
D (65276) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (65276) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (65286) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (65296) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (65306) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000a, 15 (bytes), errno 119[0m
D (65316) SENT: 00 0a 00 00 00 09 c8 10 00 02 00 01 02 33 33 [0m
D (65326) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (65326) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (65496) esp.emac: receive len= 60[0m
D (65496) esp.emac: receive len= 66[0m
D (65496) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (65506) port.utils: Enqueue data, length=12, TID=0xa[0m
D (65506) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (65516) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (65516) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (65526) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (65536) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (65546) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000a received.[0m
D (65546) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (65556) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000a:0x000b, 0x3ffc110c.[0m
D (65566) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 250225.[0m
D (65576) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (65586) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 02 00 01 [0m
D (65586) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (65596) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (65596) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (65606) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (65616) mbm_error_cb_request_success: 10 00 02 00 01 02 33 33 [0m
D (65616) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 338370[0m
D (65636) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (65636) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(2) = ESP_OK[0m
[0;32mI (65656) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333), write successful.[0m
[0;32mI (65656) TEST_COMMON: CHAR #2, value is ok.[0m
D (65656) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (65676) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (65676) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 03 00 01 02 44 44 [0m
D (65676) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (65686) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (65696) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (65706) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (65706) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (65726) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x0029, 15 (bytes), errno 119[0m
D (65736) SENT: 00 29 00 00 00 09 01 10 00 03 00 01 02 44 44 [0m
D (65736) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (65736) esp.emac: receive len= 60[0m
D (65746) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (65916) esp.emac: receive len= 66[0m
D (65916) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (65926) port.utils: Enqueue data, length=12, TID=0x29[0m
D (65926) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (65936) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (65936) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (65946) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (65956) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (65966) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x0029 received.[0m
D (65966) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (65976) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x0029:0x002a, 0x3ffc110c.[0m
D (65986) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 254560.[0m
D (65996) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (66006) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 03 00 01 [0m
D (66006) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (66016) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (66016) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (66026) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (66036) mbm_error_cb_request_success: 10 00 03 00 01 02 44 44 [0m
D (66036) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 348077[0m
D (66056) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66056) esp.emac: receive len= 119[0m
D (66066) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(3) = ESP_OK[0m
[0;32mI (66066) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444), write successful.[0m
[0;32mI (66086) TEST_COMMON: CHAR #3, value is ok.[0m
D (66086) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (66086) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (66106) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 09 [0m
D (66106) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (66116) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (66116) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (66126) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (66136) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (66146) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002a, 15 (bytes), errno 119[0m
D (66156) SENT: 00 2a 00 00 00 09 01 10 00 04 00 01 02 00 09 [0m
D (66166) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (66166) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (66246) esp.emac: receive len= 60[0m
D (66316) esp.emac: receive len= 66[0m
D (66316) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (66316) port.utils: Enqueue data, length=12, TID=0x2a[0m
D (66316) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (66326) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (66336) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (66346) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (66346) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (66356) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x002a received.[0m
D (66366) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (66376) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002a:0x002b, 0x3ffc110c.[0m
D (66386) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226753.[0m
D (66396) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (66396) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (66406) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (66406) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (66416) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (66416) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (66426) mbm_error_cb_request_success: 10 00 04 00 01 02 00 09 [0m
D (66436) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 314024[0m
D (66446) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66446) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
[0;32mI (66466) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x0009), write successful.[0m
D (66516) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (66516) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (66536) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 00 00 01 [0m
D (66536) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (66536) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (66546) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (66556) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (66566) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (66576) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002b, 12 (bytes), errno 119[0m
D (66586) SENT: 00 2b 00 00 00 06 01 03 00 00 00 01 [0m
D (66586) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (66596) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (66746) esp.emac: receive len= 60[0m
D (66806) esp.emac: receive len= 65[0m
D (66806) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (66806) port.utils: Enqueue data, length=11, TID=0x2b[0m
D (66806) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (66816) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (66826) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (66836) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (66836) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (66846) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x002b received.[0m
D (66856) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (66856) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002b:0x002c, 0x3ffc110c.[0m
D (66876) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 287883.[0m
D (66886) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (66886) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 11 11 [0m
D (66896) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (66896) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (66906) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (66906) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (66916) mbm_error_cb_request_success: 03 00 00 00 01 [0m
D (66926) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 372959[0m
D (66936) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (66936) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(0) = ESP_OK[0m
[0;32mI (66956) TEST_COMMON: 0x3ffbfa80, CHAR #0 MB_hold_reg-0 (Data) value = (0x1111) parameter read successful.[0m
[0;32mI (66956) TEST_COMMON: CHAR #0, value is ok.[0m
D (66976) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (66976) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (66976) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 01 00 01 [0m
D (66986) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (66996) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (66996) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (67006) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (67016) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (67026) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002c, 12 (bytes), errno 119[0m
D (67036) SENT: 00 2c 00 00 00 06 01 03 00 01 00 01 [0m
D (67036) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (67046) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (67196) esp.emac: receive len= 65[0m
D (67196) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (67196) port.utils: Enqueue data, length=11, TID=0x2c[0m
D (67196) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (67206) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (67216) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (67226) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (67226) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (67236) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x002c received.[0m
D (67246) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (67246) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002c:0x002d, 0x3ffc110c.[0m
D (67266) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 225800.[0m
D (67276) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (67276) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 22 22 [0m
D (67286) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (67286) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (67296) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (67296) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (67306) mbm_error_cb_request_success: 03 00 01 00 01 [0m
D (67316) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 318383[0m
D (67316) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (67336) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(1) = ESP_OK[0m
[0;32mI (67336) TEST_COMMON: 0x3ffbfa80, CHAR #1 MB_hold_reg-1 (Data) value = (0x2222) parameter read successful.[0m
[0;32mI (67356) TEST_COMMON: CHAR #1, value is ok.[0m
D (67356) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (67356) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (67376) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 02 00 01 [0m
D (67376) mb_port.tcp.master: 0x3ffc1270,  send fd: 1, sock_id: 55[mb_slave_tcp_c8], 0x3ffc0f3f, len: 12[0m
D (67386) mb_driver: 0x3ffc1270, fd event get: 0x10:1, |MB_EVENT_SEND_DATA[0m
D (67386) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (67396) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 1[0m
D (67406) mb_port.tcp.master: 0x3ffc1270, get info: 1, sock_id: 55, queue_state: 0, state: 6.[0m
D (67416) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), send data successful: TID:0x000b, 12 (bytes), errno 119[0m
D (67426) SENT: 00 0b 00 00 00 06 c8 03 00 02 00 01 [0m
D (67426) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (67436) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (67496) esp.emac: receive len= 60[0m
D (67606) esp.emac: receive len= 65[0m
D (67606) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (67606) port.utils: Enqueue data, length=11, TID=0xb[0m
D (67616) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), frame received.[0m
D (67616) mb_driver: 0x3ffc1270, fd event get: 0x20:1, |MB_EVENT_RECV_DATA[0m
D (67626) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (67636) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 1[0m
D (67646) mb_port.tcp.master: 0x3ffc1270, slave #1(55) [192.168.34.175], receive data ready.[0m
D (67656) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x000b received.[0m
D (67656) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (67666) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), get packet TID: 0x000b:0x000c, 0x3ffc110c.[0m
D (67676) mb_port.tcp.master: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), processing time[us] = 249186.[0m
D (67686) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (67696) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 33 33 [0m
D (67696) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (67706) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (67706) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (67716) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (67716) mbm_error_cb_request_success: 03 00 02 00 01 [0m
D (67726) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 336346[0m
D (67746) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (67746) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(2) = ESP_OK[0m
[0;32mI (67746) TEST_COMMON: 0x3ffbfa80, CHAR #2 MB_hold_reg-2 (Data) value = (0x3333) parameter read successful.[0m
[0;32mI (67766) TEST_COMMON: CHAR #2, value is ok.[0m
D (67766) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (67786) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (67786) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 03 00 03 00 01 [0m
D (67786) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 12[0m
D (67796) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (67806) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (67816) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (67816) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (67826) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002d, 12 (bytes), errno 119[0m
D (67836) SENT: 00 2d 00 00 00 06 01 03 00 03 00 01 [0m
D (67846) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (67856) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (67996) esp.emac: receive len= 60[0m
D (68026) esp.emac: receive len= 65[0m
D (68026) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (68026) port.utils: Enqueue data, length=11, TID=0x2d[0m
D (68026) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (68036) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (68046) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (68056) esp.emac: receive len= 119[0m
D (68056) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (68066) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (68076) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x002d received.[0m
D (68076) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (68086) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002d:0x002e, 0x3ffc110c.[0m
D (68096) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 256760.[0m
D (68106) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (68116) mbm_tcp#0x3ffbfa80:MB_RECV: 03 02 44 44 [0m
D (68116) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (68126) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (68126) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (68136) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (68136) mbm_error_cb_request_success: 03 00 03 00 01 [0m
D (68146) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 347141[0m
D (68166) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (68166) mbc_tcp.master: mbc_tcp_master_get_parameter: Good response for get cid(3) = ESP_OK[0m
[0;32mI (68166) TEST_COMMON: 0x3ffbfa80, CHAR #3 MB_hold_reg-3 (Data) value = (0x4444) parameter read successful.[0m
[0;32mI (68186) TEST_COMMON: CHAR #3, value is ok.[0m
D (68186) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (68206) mb_port.event: mbm_tcp#0x3ffbfa80, mb take resource, (300 ticks).[0m
D (68206) mbm_tcp#0x3ffbfa80:MB_TRANSMIT: 10 00 04 00 01 02 00 0a [0m
D (68206) mb_port.tcp.master: 0x3ffc1270,  send fd: 0, sock_id: 54[mb_slave_tcp_01], 0x3ffc0f3f, len: 15[0m
D (68216) mb_driver: 0x3ffc1270, fd event get: 0x10:0, |MB_EVENT_SEND_DATA[0m
D (68226) event: running post loop:0x3ffc1270:16 with handler 0x40125ec8 and context 0x3ffc3088 on loop 0x3ffc1680[0m
D (68236) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_send_data: fd: 0[0m
D (68236) mb_port.tcp.master: 0x3ffc1270, get info: 0, sock_id: 54, queue_state: 0, state: 6.[0m
D (68246) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), send data successful: TID:0x002e, 15 (bytes), errno 119[0m
D (68256) SENT: 00 2e 00 00 00 09 01 10 00 04 00 01 02 00 0a [0m
D (68266) mb_port.timer: mbm_tcp#0x3ffbfa80, respond enable timeout (3000).[0m
D (68276) mb_object.master: 0x3ffbfa80:EV_FRAME_SENT[0m
D (68416) esp.emac: receive len= 66[0m
D (68426) mb_driver: 0x3ffc1270, socket event active: 40000000000000[0m
D (68426) port.utils: Enqueue data, length=12, TID=0x2e[0m
D (68426) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), frame received.[0m
D (68436) mb_driver: 0x3ffc1270, fd event get: 0x20:0, |MB_EVENT_RECV_DATA[0m
D (68436) event: running post loop:0x3ffc1270:32 with handler 0x401260c8 and context 0x3ffc30b8 on loop 0x3ffc1680[0m
D (68446) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_recv_data: fd: 0[0m
D (68456) mb_port.tcp.master: 0x3ffc1270, slave #0(54) [192.168.34.175], receive data ready.[0m
D (68466) mb_port.tcp.master: 0x3ffc1270, packet TID: 0x002e received.[0m
D (68476) mb_object.master: 0x3ffbfa80:EV_FRAME_RECEIVED[0m
D (68476) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), get packet TID: 0x002e:0x002f, 0x3ffc110c.[0m
D (68486) mb_port.tcp.master: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), processing time[us] = 226765.[0m
D (68496) mb_object.master: 0x3ffbfa80, frame data received successfully, (0).[0m
D (68506) mbm_tcp#0x3ffbfa80:MB_RECV: 10 00 04 00 01 [0m
D (68506) mb_object.master: 0x3ffbfa80:EV_EXECUTE[0m
D (68516) mb_object.master: 0x3ffbfa80, set event EV_ERROR_OK[0m
D (68516) mb_object.master: 0x3ffbfa80:EV_ERROR_PROCESS[0m
D (68526) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (68536) mbm_error_cb_request_success: 10 00 04 00 01 02 00 0a [0m
D (68536) mb_object.master: 0x3ffbfa80, transaction processing time(us) = 319140[0m
D (68556) mb_port.event: mbm_tcp#0x3ffbfa80, mb_port_event_wait_req_finish: returned event = 0x400[0m
D (68556) mbc_tcp.master: mbc_tcp_master_set_parameter: Good response for set cid(4) = ESP_OK[0m
D (68566) esp.emac: receive len= 60[0m
D (68576) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
D (68576) port.utils: Socket (#55)(192.168.34.175), fail to read modbus header. ret=0[0m
[0;31mE (68586) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), critical error=-6, errno=128.[0m
D (68596) mb_driver: 0x3ffc1270, socket event active: 80000000000000[0m
[0;31mE (68596) port.utils: socket(#55)(192.168.34.175) connection closed, ret=-1, errno=128.[0m
D (68606) esp.emac: receive len= 60[0m
[0;31mE (68606) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), connection lost.[0m
D (68616) mb_driver: 0x3ffc1270, fd event get: 0x40:1, |MB_EVENT_ERROR[0m
D (68626) event: running post loop:0x3ffc1270:64 with handler 0x40125c58 and context 0x3ffc3058 on loop 0x3ffc1680[0m
[0;32mI (68646) TEST_COMMON: 0x3ffbfa80, CHAR #4 CYCLE_COUNTER (Data) value = (0x000a), write successful.[0m
D (68686) mb_driver: 0x3ffc1270, socket event active: c0000000000000[0m
D (68686) port.utils: Socket (#54)(192.168.34.175), fail to read modbus header. ret=0[0m
[0;31mE (68686) mb_driver: 0x3ffc1270, node #0, socket(#54)(192.168.34.175), critical error=-6, errno=128.[0m
[0;31mE (68696) port.utils: socket(#55)(192.168.34.175) connection closed, ret=-1, errno=128.[0m
[0;31mE (68706) mb_driver: 0x3ffc1270, node #1, socket(#55)(192.168.34.175), connection lost.[0m
D (68716) mb_driver: 0x3ffc1270, fd event get: 0x40:1, |MB_EVENT_ERROR[0m
D (68716) event: running post loop:0x3ffc1270:64 with handler 0x40125c58 and context 0x3ffc3058 on loop 0x3ffc1680[0m
[0;32mI (68736) TEST_COMMON: Destroy master, inst: 0x3ffbfa80.[0m
D (68736) mbc_tcp.master: mb stack is active, try to disable.[0m
D (68756) event: running post loop:0x3ffc1270:128 with handler 0x401261dc and context 0x3ffc30e8 on loop 0x3ffc1680[0m
D (68756) mb_port.tcp.master: loop:0x3ffc1270  mbm_on_close, fd: -1[0m
D (68756) esp.emac: receive len= 60[0m
D (68766) esp.emac: receive len= 60[0m
D (68776) mb_port.timer: mbm_tcp#0x3ffbfa80, timer stop, returns 259.[0m
D (68776) mb_driver: 0x3ffc1270, fd event get: 0x80:-1, |MB_EVENT_CLOSE[0m
D (68786) mb_port.tcp.master: 0x3ffc1270, event handler 0x3ffc3128, unregister.[0m
D (68786) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x1, unregister.[0m
D (68806) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x2, unregister.[0m
D (68806) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x4, unregister.[0m
D (68806) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x8, unregister.[0m
D (68816) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x40, unregister.[0m
D (68836) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x10, unregister.[0m
D (68836) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x20, unregister.[0m
D (68836) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x80, unregister.[0m
D (68856) mb_driver: 0x3ffc1270, event handler 0x3ffc3128, event 0x100, unregister.[0m
D (68896) esp_netif_lwip: check: local, if=0x3ffb9060 fn=0x401064b4[0m
D (68906) esp_netif_lwip: check: local, if=0x3ffb9060 fn=0x401064b4[0m
D (68916) esp_netif_lwip: check: local, if=0x3ffb9060 fn=0x401064b4[0m
D (68926) esp_netif_lwip: check: local, if=0x3ffb9060 fn=0x401064b4[0m
D (68956) mb_driver: 0x3ffc1270, driver unregister.[0m
D (69036) mb_driver: 0x3ffc1270, driver check shutdown (18)...[0m
D (69036) mb_driver: 0x3ffc1270, driver task shutdown...[0m
D (69046) mb_driver: delete loop inst: loop:0x3ffc1270.[0m
D (69046) event: deleting loop 0x3ffc1680[0m
D (69046) mb_driver: delete event loop: 0x3ffc1680.[0m
D (69046) mb_driver: close eventfd (6).[0m
D (69046) mb_driver: 0x3ffc1270, close node instance #0(mb_slave_tcp_01).[0m
D (69066) port.utils: wrong socket info or disconnected socket: 0, skip.[0m
D (69066) mb_driver: 0x3ffc1270, close node instance #1(mb_slave_tcp_c8).[0m
D (69066) port.utils: wrong socket info or disconnected socket: 1, skip.[0m
[0;32mI (69096) TEST_COMMON: Test task 0x3ffc5a40, done successfully.[0m
D (69106) TEST_COMMON: Delete task 0x3ffc5a40[0m
MALLOC_CAP_8BIT usage: Free memory delta: 5320 Leak threshold: -64 
MALLOC_CAP_32BIT usage: Free memory delta: 5320 Leak threshold: -64 
D (69106) esp_netif_lwip: check: remote, if=0x3ffb6850 fn=0x40106334[0m
D (69116) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (69116) esp.emac: emac stopped[0m
D (69126) event: running post ETH_EVENT:3 with handler 0x4010904c and context 0x3ffbf814 on loop 0x3ffb93e0[0m
D (69136) esp_eth.netif.netif_glue: eth_action_disconnected: 0x3ffbf750, 0x3f41246c, 3, 0x3ffb8330, 0x3ffbf6d8[0m
D (69146) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbb75c from event_id=3[0m
D (69146) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x401071e4[0m
D (69156) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbb75c[0m
D (69166) esp_eth: Ethernet link is not up, can't transmit[0m
D (69166) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbb7e4[0m
D (69176) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb75c[0m
D (69186) esp_netif_lwip: if0x3ffbb75c start ip lost tmr: already started[0m
D (69186) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbb75c[0m
D (69196) esp_netif_lwip: if0x3ffbb75c start ip lost tmr: already started[0m
D (69206) esp_netif_lwip: check: local, if=0x3ffbb75c fn=0x40107588[0m
D (69206) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb75c[0m
D (69216) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (69226) event: running post ETH_EVENT:1 with handler 0x401090e4 and context 0x3ffbf7b4 on loop 0x3ffb93e0[0m
D (69236) esp_eth.netif.netif_glue: eth_action_stop: 0x3ffbf750, 0x3f41246c, 1, 0x3ffbf864, 0x3ffbf6d8[0m
D (69246) esp_netif_handlers: esp_netif action stopped with netif0x3ffbb75c from event_id=1[0m
D (69246) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x40107104[0m
D (69256) esp_netif_lwip: call api in lwip: ret=0x5002, give sem[0m
[0;32mI (69266) gpio: GPIO[0]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69276) gpio: GPIO[18]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69286) gpio: GPIO[19]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69296) gpio: GPIO[21]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69296) gpio: GPIO[22]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69306) gpio: GPIO[23]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69316) gpio: GPIO[25]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69326) gpio: GPIO[26]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (69336) gpio: GPIO[27]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
D (69346) esp_netif_lwip: check: remote, if=0x3ffbb75c fn=0x40106ca4[0m
D (69356) esp_netif_objects: esp_netif_remove_from_list_unsafe netif successfully removed (total netifs: 0)[0m
D (69366) esp_netif_lwip: check: local, if=0x3ffbb75c fn=0x40107588[0m
D (69366) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbb75c[0m
D (69376) esp_netif_lwip: call api in lwip: ret=0x0, give sem[0m
D (69386) event: deleting loop 0x3ffb93e0[0m
[0;32mI (69386) MODBUS_TCP_COMM_TEST: Master TCP is complited. (test_modbus_tcp_master).[0m
./main/test_modbus_tcp_comm_master_slave.c:238:Modbus TCP multi device master - slave case.:PASS
Test ran in 14699ms

-----------------------
1 Tests 0 Failures 0 Ignored 
OK
Enter next test, or 'enter' to see menu
